{"ast":null,"code":"const pkg = require('../../package.json');\n\nconst USER_AGENT = `${pkg.name}/${pkg.version} (${pkg.homepage})`;\nconst OIDC_DISCOVERY = '/.well-known/openid-configuration';\nconst OAUTH2_DISCOVERY = '/.well-known/oauth-authorization-server';\nconst WEBFINGER = '/.well-known/webfinger';\nconst REL = 'http://openid.net/specs/connect/1.0/issuer';\nconst AAD_MULTITENANT_DISCOVERY = `https://login.microsoftonline.com/common/v2.0${OIDC_DISCOVERY}`;\nconst CLIENT_DEFAULTS = {\n  application_type: 'web',\n  grant_types: ['authorization_code'],\n  id_token_signed_response_alg: 'RS256',\n  response_types: ['code'],\n  token_endpoint_auth_method: 'client_secret_basic'\n};\nconst ISSUER_DEFAULTS = {\n  claim_types_supported: ['normal'],\n  claims_parameter_supported: false,\n  grant_types_supported: ['authorization_code', 'implicit'],\n  request_parameter_supported: false,\n  request_uri_parameter_supported: true,\n  require_request_uri_registration: false,\n  response_modes_supported: ['query', 'fragment'],\n  token_endpoint_auth_methods_supported: ['client_secret_basic']\n};\nconst CALLBACK_PROPERTIES = ['access_token', 'code', 'error', 'error_description', 'error_uri', 'expires_in', 'id_token', 'state', 'token_type', 'session_state'];\nconst DEFAULT_HTTP_OPTIONS = {\n  followRedirect: false,\n  headers: {\n    'User-Agent': USER_AGENT,\n    Accept: 'application/json'\n  },\n  retries: 0,\n  timeout: 1500\n};\nconst JWT_CONTENT = /^application\\/jwt/;\nmodule.exports = {\n  AAD_MULTITENANT_DISCOVERY,\n  CALLBACK_PROPERTIES,\n  CLIENT_DEFAULTS,\n  DEFAULT_HTTP_OPTIONS,\n  ISSUER_DEFAULTS,\n  JWT_CONTENT,\n  USER_AGENT,\n  OIDC_DISCOVERY,\n  OAUTH2_DISCOVERY,\n  REL,\n  WEBFINGER\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/openid-client/lib/helpers/consts.js"],"names":["pkg","require","USER_AGENT","name","version","homepage","OIDC_DISCOVERY","OAUTH2_DISCOVERY","WEBFINGER","REL","AAD_MULTITENANT_DISCOVERY","CLIENT_DEFAULTS","application_type","grant_types","id_token_signed_response_alg","response_types","token_endpoint_auth_method","ISSUER_DEFAULTS","claim_types_supported","claims_parameter_supported","grant_types_supported","request_parameter_supported","request_uri_parameter_supported","require_request_uri_registration","response_modes_supported","token_endpoint_auth_methods_supported","CALLBACK_PROPERTIES","DEFAULT_HTTP_OPTIONS","followRedirect","headers","Accept","retries","timeout","JWT_CONTENT","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AAEA,MAAMC,UAAU,GAAI,GAAEF,GAAG,CAACG,IAAK,IAAGH,GAAG,CAACI,OAAQ,KAAIJ,GAAG,CAACK,QAAS,GAA/D;AAEA,MAAMC,cAAc,GAAG,mCAAvB;AACA,MAAMC,gBAAgB,GAAG,yCAAzB;AACA,MAAMC,SAAS,GAAG,wBAAlB;AACA,MAAMC,GAAG,GAAG,4CAAZ;AACA,MAAMC,yBAAyB,GAAI,gDAA+CJ,cAAe,EAAjG;AAEA,MAAMK,eAAe,GAAG;AACtBC,EAAAA,gBAAgB,EAAE,KADI;AAEtBC,EAAAA,WAAW,EAAE,CAAC,oBAAD,CAFS;AAGtBC,EAAAA,4BAA4B,EAAE,OAHR;AAItBC,EAAAA,cAAc,EAAE,CAAC,MAAD,CAJM;AAKtBC,EAAAA,0BAA0B,EAAE;AALN,CAAxB;AAQA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,qBAAqB,EAAE,CAAC,QAAD,CADD;AAEtBC,EAAAA,0BAA0B,EAAE,KAFN;AAGtBC,EAAAA,qBAAqB,EAAE,CAAC,oBAAD,EAAuB,UAAvB,CAHD;AAItBC,EAAAA,2BAA2B,EAAE,KAJP;AAKtBC,EAAAA,+BAA+B,EAAE,IALX;AAMtBC,EAAAA,gCAAgC,EAAE,KANZ;AAOtBC,EAAAA,wBAAwB,EAAE,CAAC,OAAD,EAAU,UAAV,CAPJ;AAQtBC,EAAAA,qCAAqC,EAAE,CAAC,qBAAD;AARjB,CAAxB;AAWA,MAAMC,mBAAmB,GAAG,CAC1B,cAD0B,EAE1B,MAF0B,EAG1B,OAH0B,EAI1B,mBAJ0B,EAK1B,WAL0B,EAM1B,YAN0B,EAO1B,UAP0B,EAQ1B,OAR0B,EAS1B,YAT0B,EAU1B,eAV0B,CAA5B;AAaA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,cAAc,EAAE,KADW;AAE3BC,EAAAA,OAAO,EAAE;AAAE,kBAAc3B,UAAhB;AAA4B4B,IAAAA,MAAM,EAAE;AAApC,GAFkB;AAG3BC,EAAAA,OAAO,EAAE,CAHkB;AAI3BC,EAAAA,OAAO,EAAE;AAJkB,CAA7B;AAOA,MAAMC,WAAW,GAAG,mBAApB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfzB,EAAAA,yBADe;AAEfgB,EAAAA,mBAFe;AAGff,EAAAA,eAHe;AAIfgB,EAAAA,oBAJe;AAKfV,EAAAA,eALe;AAMfgB,EAAAA,WANe;AAOf/B,EAAAA,UAPe;AAQfI,EAAAA,cARe;AASfC,EAAAA,gBATe;AAUfE,EAAAA,GAVe;AAWfD,EAAAA;AAXe,CAAjB","sourcesContent":["const pkg = require('../../package.json');\n\nconst USER_AGENT = `${pkg.name}/${pkg.version} (${pkg.homepage})`;\n\nconst OIDC_DISCOVERY = '/.well-known/openid-configuration';\nconst OAUTH2_DISCOVERY = '/.well-known/oauth-authorization-server';\nconst WEBFINGER = '/.well-known/webfinger';\nconst REL = 'http://openid.net/specs/connect/1.0/issuer';\nconst AAD_MULTITENANT_DISCOVERY = `https://login.microsoftonline.com/common/v2.0${OIDC_DISCOVERY}`;\n\nconst CLIENT_DEFAULTS = {\n  application_type: 'web',\n  grant_types: ['authorization_code'],\n  id_token_signed_response_alg: 'RS256',\n  response_types: ['code'],\n  token_endpoint_auth_method: 'client_secret_basic',\n};\n\nconst ISSUER_DEFAULTS = {\n  claim_types_supported: ['normal'],\n  claims_parameter_supported: false,\n  grant_types_supported: ['authorization_code', 'implicit'],\n  request_parameter_supported: false,\n  request_uri_parameter_supported: true,\n  require_request_uri_registration: false,\n  response_modes_supported: ['query', 'fragment'],\n  token_endpoint_auth_methods_supported: ['client_secret_basic'],\n};\n\nconst CALLBACK_PROPERTIES = [\n  'access_token',\n  'code',\n  'error',\n  'error_description',\n  'error_uri',\n  'expires_in',\n  'id_token',\n  'state',\n  'token_type',\n  'session_state',\n];\n\nconst DEFAULT_HTTP_OPTIONS = {\n  followRedirect: false,\n  headers: { 'User-Agent': USER_AGENT, Accept: 'application/json' },\n  retries: 0,\n  timeout: 1500,\n};\n\nconst JWT_CONTENT = /^application\\/jwt/;\n\nmodule.exports = {\n  AAD_MULTITENANT_DISCOVERY,\n  CALLBACK_PROPERTIES,\n  CLIENT_DEFAULTS,\n  DEFAULT_HTTP_OPTIONS,\n  ISSUER_DEFAULTS,\n  JWT_CONTENT,\n  USER_AGENT,\n  OIDC_DISCOVERY,\n  OAUTH2_DISCOVERY,\n  REL,\n  WEBFINGER,\n};\n"]},"metadata":{},"sourceType":"script"}