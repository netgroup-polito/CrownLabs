{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\n\nconst JSONB = require('json-buffer');\n\nconst loadStore = opts => {\n  const adapters = {\n    redis: '@keyv/redis',\n    mongodb: '@keyv/mongo',\n    mongo: '@keyv/mongo',\n    sqlite: '@keyv/sqlite',\n    postgresql: '@keyv/postgres',\n    postgres: '@keyv/postgres',\n    mysql: '@keyv/mysql'\n  };\n\n  if (opts.adapter || opts.uri) {\n    const adapter = opts.adapter || /^[^:]*/.exec(opts.uri)[0];\n    return new (require(adapters[adapter]))(opts);\n  }\n\n  return new Map();\n};\n\nclass Keyv extends EventEmitter {\n  constructor(uri, opts) {\n    super();\n    this.opts = Object.assign({\n      namespace: 'keyv'\n    }, typeof uri === 'string' ? {\n      uri\n    } : uri, opts);\n\n    if (!this.opts.store) {\n      const adapterOpts = Object.assign({}, this.opts);\n      this.opts.store = loadStore(adapterOpts);\n    }\n\n    if (typeof this.opts.store.on === 'function') {\n      this.opts.store.on('error', err => this.emit('error', err));\n    }\n\n    this.opts.store.namespace = this.opts.namespace;\n  }\n\n  _getKeyPrefix(key) {\n    return `${this.opts.namespace}:${key}`;\n  }\n\n  get(key) {\n    key = this._getKeyPrefix(key);\n    const store = this.opts.store;\n    return Promise.resolve().then(() => store.get(key)).then(data => {\n      data = typeof data === 'string' ? JSONB.parse(data) : data;\n\n      if (data === undefined) {\n        return undefined;\n      }\n\n      if (typeof data.expires === 'number' && Date.now() > data.expires) {\n        this.delete(key);\n        return undefined;\n      }\n\n      return data.value;\n    });\n  }\n\n  set(key, value, ttl) {\n    key = this._getKeyPrefix(key);\n\n    if (typeof ttl === 'undefined') {\n      ttl = this.opts.ttl;\n    }\n\n    if (ttl === 0) {\n      ttl = undefined;\n    }\n\n    const store = this.opts.store;\n    return Promise.resolve().then(() => {\n      const expires = typeof ttl === 'number' ? Date.now() + ttl : null;\n      value = {\n        value,\n        expires\n      };\n      return store.set(key, JSONB.stringify(value), ttl);\n    }).then(() => true);\n  }\n\n  delete(key) {\n    key = this._getKeyPrefix(key);\n    const store = this.opts.store;\n    return Promise.resolve().then(() => store.delete(key));\n  }\n\n  clear() {\n    const store = this.opts.store;\n    return Promise.resolve().then(() => store.clear());\n  }\n\n}\n\nmodule.exports = Keyv;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/keyv/src/index.js"],"names":["EventEmitter","require","JSONB","loadStore","opts","adapters","redis","mongodb","mongo","sqlite","postgresql","postgres","mysql","adapter","uri","exec","Map","Keyv","constructor","Object","assign","namespace","store","adapterOpts","on","err","emit","_getKeyPrefix","key","get","Promise","resolve","then","data","parse","undefined","expires","Date","now","delete","value","set","ttl","stringify","clear","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst JSONB = require('json-buffer');\n\nconst loadStore = opts => {\n\tconst adapters = {\n\t\tredis: '@keyv/redis',\n\t\tmongodb: '@keyv/mongo',\n\t\tmongo: '@keyv/mongo',\n\t\tsqlite: '@keyv/sqlite',\n\t\tpostgresql: '@keyv/postgres',\n\t\tpostgres: '@keyv/postgres',\n\t\tmysql: '@keyv/mysql'\n\t};\n\tif (opts.adapter || opts.uri) {\n\t\tconst adapter = opts.adapter || /^[^:]*/.exec(opts.uri)[0];\n\t\treturn new (require(adapters[adapter]))(opts);\n\t}\n\treturn new Map();\n};\n\nclass Keyv extends EventEmitter {\n\tconstructor(uri, opts) {\n\t\tsuper();\n\t\tthis.opts = Object.assign(\n\t\t\t{ namespace: 'keyv' },\n\t\t\t(typeof uri === 'string') ? { uri } : uri,\n\t\t\topts\n\t\t);\n\n\t\tif (!this.opts.store) {\n\t\t\tconst adapterOpts = Object.assign({}, this.opts);\n\t\t\tthis.opts.store = loadStore(adapterOpts);\n\t\t}\n\n\t\tif (typeof this.opts.store.on === 'function') {\n\t\t\tthis.opts.store.on('error', err => this.emit('error', err));\n\t\t}\n\n\t\tthis.opts.store.namespace = this.opts.namespace;\n\t}\n\n\t_getKeyPrefix(key) {\n\t\treturn `${this.opts.namespace}:${key}`;\n\t}\n\n\tget(key) {\n\t\tkey = this._getKeyPrefix(key);\n\t\tconst store = this.opts.store;\n\t\treturn Promise.resolve()\n\t\t\t.then(() => store.get(key))\n\t\t\t.then(data => {\n\t\t\t\tdata = (typeof data === 'string') ? JSONB.parse(data) : data;\n\t\t\t\tif (data === undefined) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (typeof data.expires === 'number' && Date.now() > data.expires) {\n\t\t\t\t\tthis.delete(key);\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn data.value;\n\t\t\t});\n\t}\n\n\tset(key, value, ttl) {\n\t\tkey = this._getKeyPrefix(key);\n\t\tif (typeof ttl === 'undefined') {\n\t\t\tttl = this.opts.ttl;\n\t\t}\n\t\tif (ttl === 0) {\n\t\t\tttl = undefined;\n\t\t}\n\t\tconst store = this.opts.store;\n\n\t\treturn Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tconst expires = (typeof ttl === 'number') ? (Date.now() + ttl) : null;\n\t\t\t\tvalue = { value, expires };\n\t\t\t\treturn store.set(key, JSONB.stringify(value), ttl);\n\t\t\t})\n\t\t\t.then(() => true);\n\t}\n\n\tdelete(key) {\n\t\tkey = this._getKeyPrefix(key);\n\t\tconst store = this.opts.store;\n\t\treturn Promise.resolve()\n\t\t\t.then(() => store.delete(key));\n\t}\n\n\tclear() {\n\t\tconst store = this.opts.store;\n\t\treturn Promise.resolve()\n\t\t\t.then(() => store.clear());\n\t}\n}\n\nmodule.exports = Keyv;\n"]},"metadata":{},"sourceType":"script"}