{"ast":null,"code":"/*!\n * parse/compact.js - JOSE Compact Serialization Parser\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar jose = {\n  JWE: require(\"../jwe\"),\n  JWS: require(\"../jws\"),\n  util: require(\"../util\")\n};\n\nfunction parseCompact(input) {\n  var parts = input.split(\".\");\n  var type, op;\n\n  if (3 === parts.length) {\n    // JWS\n    type = \"JWS\";\n\n    op = function (ks, opts) {\n      return jose.JWS.createVerify(ks).verify(input, opts);\n    };\n  } else if (5 === parts.length) {\n    // JWE\n    type = \"JWE\";\n\n    op = function (ks, opts) {\n      return jose.JWE.createDecrypt(ks).decrypt(input, opts);\n    };\n  } else {\n    throw new TypeError(\"invalid jose serialization\");\n  } // parse header\n\n\n  var header;\n  header = jose.util.base64url.decode(parts[0], \"utf8\");\n  header = JSON.parse(header);\n  return {\n    type: type,\n    format: \"compact\",\n    input: input,\n    header: header,\n    perform: op\n  };\n}\n\nmodule.exports = parseCompact;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/parse/compact.js"],"names":["jose","JWE","require","JWS","util","parseCompact","input","parts","split","type","op","length","ks","opts","createVerify","verify","createDecrypt","decrypt","TypeError","header","base64url","decode","JSON","parse","format","perform","module","exports"],"mappings":"AAAA;;;;;AAKA;;AAEA,IAAIA,IAAI,GAAG;AACTC,EAAAA,GAAG,EAAEC,OAAO,CAAC,QAAD,CADH;AAETC,EAAAA,GAAG,EAAED,OAAO,CAAC,QAAD,CAFH;AAGTE,EAAAA,IAAI,EAAEF,OAAO,CAAC,SAAD;AAHJ,CAAX;;AAMA,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAZ;AAEA,MAAIC,IAAJ,EACIC,EADJ;;AAEA,MAAI,MAAMH,KAAK,CAACI,MAAhB,EAAwB;AACtB;AACAF,IAAAA,IAAI,GAAG,KAAP;;AACAC,IAAAA,EAAE,GAAG,UAASE,EAAT,EAAaC,IAAb,EAAmB;AACtB,aAAOb,IAAI,CAACG,GAAL,CAASW,YAAT,CAAsBF,EAAtB,EACAG,MADA,CACOT,KADP,EACcO,IADd,CAAP;AAED,KAHD;AAID,GAPD,MAOO,IAAI,MAAMN,KAAK,CAACI,MAAhB,EAAwB;AAC7B;AACAF,IAAAA,IAAI,GAAG,KAAP;;AACAC,IAAAA,EAAE,GAAG,UAASE,EAAT,EAAaC,IAAb,EAAmB;AACtB,aAAOb,IAAI,CAACC,GAAL,CAASe,aAAT,CAAuBJ,EAAvB,EACAK,OADA,CACQX,KADR,EACeO,IADf,CAAP;AAED,KAHD;AAID,GAPM,MAOA;AACL,UAAM,IAAIK,SAAJ,CAAc,4BAAd,CAAN;AACD,GArB0B,CAuB3B;;;AACA,MAAIC,MAAJ;AACAA,EAAAA,MAAM,GAAGnB,IAAI,CAACI,IAAL,CAAUgB,SAAV,CAAoBC,MAApB,CAA2Bd,KAAK,CAAC,CAAD,CAAhC,EAAqC,MAArC,CAAT;AACAY,EAAAA,MAAM,GAAGG,IAAI,CAACC,KAAL,CAAWJ,MAAX,CAAT;AACA,SAAO;AACLV,IAAAA,IAAI,EAAEA,IADD;AAELe,IAAAA,MAAM,EAAE,SAFH;AAGLlB,IAAAA,KAAK,EAAEA,KAHF;AAILa,IAAAA,MAAM,EAAEA,MAJH;AAKLM,IAAAA,OAAO,EAAEf;AALJ,GAAP;AAOD;;AAEDgB,MAAM,CAACC,OAAP,GAAiBtB,YAAjB","sourcesContent":["/*!\n * parse/compact.js - JOSE Compact Serialization Parser\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar jose = {\n  JWE: require(\"../jwe\"),\n  JWS: require(\"../jws\"),\n  util: require(\"../util\")\n};\n\nfunction parseCompact(input) {\n  var parts = input.split(\".\");\n\n  var type,\n      op;\n  if (3 === parts.length) {\n    // JWS\n    type = \"JWS\";\n    op = function(ks, opts) {\n      return jose.JWS.createVerify(ks).\n             verify(input, opts);\n    };\n  } else if (5 === parts.length) {\n    // JWE\n    type = \"JWE\";\n    op = function(ks, opts) {\n      return jose.JWE.createDecrypt(ks).\n             decrypt(input, opts);\n    };\n  } else {\n    throw new TypeError(\"invalid jose serialization\");\n  }\n\n  // parse header\n  var header;\n  header = jose.util.base64url.decode(parts[0], \"utf8\");\n  header = JSON.parse(header);\n  return {\n    type: type,\n    format: \"compact\",\n    input: input,\n    header: header,\n    perform: op\n  };\n}\n\nmodule.exports = parseCompact;\n"]},"metadata":{},"sourceType":"script"}