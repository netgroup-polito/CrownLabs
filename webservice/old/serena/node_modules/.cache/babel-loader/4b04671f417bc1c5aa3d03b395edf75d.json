{"ast":null,"code":"var common = require('./common');\n\nvar os = require('os');\n\nvar fs = require('fs');\n\ncommon.register('tempdir', _tempDir, {\n  allowGlobbing: false,\n  wrapOutput: false\n}); // Returns false if 'dir' is not a writeable directory, 'dir' otherwise\n\nfunction writeableDir(dir) {\n  if (!dir || !fs.existsSync(dir)) return false;\n  if (!common.statFollowLinks(dir).isDirectory()) return false;\n  var testFile = dir + '/' + common.randomFileName();\n\n  try {\n    fs.writeFileSync(testFile, ' ');\n    common.unlinkSync(testFile);\n    return dir;\n  } catch (e) {\n    /* istanbul ignore next */\n    return false;\n  }\n} // Variable to cache the tempdir value for successive lookups.\n\n\nvar cachedTempDir; //@\n//@ ### tempdir()\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var tmp = tempdir(); // \"/tmp\" for most *nix platforms\n//@ ```\n//@\n//@ Searches and returns string containing a writeable, platform-dependent temporary directory.\n//@ Follows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\n\nfunction _tempDir() {\n  if (cachedTempDir) return cachedTempDir;\n  cachedTempDir = writeableDir(os.tmpdir()) || writeableDir(process.env.TMPDIR) || writeableDir(process.env.TEMP) || writeableDir(process.env.TMP) || writeableDir(process.env.Wimp$ScrapDir) || // RiscOS\n  writeableDir('C:\\\\TEMP') || // Windows\n  writeableDir('C:\\\\TMP') || // Windows\n  writeableDir('\\\\TEMP') || // Windows\n  writeableDir('\\\\TMP') || // Windows\n  writeableDir('/tmp') || writeableDir('/var/tmp') || writeableDir('/usr/tmp') || writeableDir('.'); // last resort\n\n  return cachedTempDir;\n} // Indicates if the tempdir value is currently cached. This is exposed for tests\n// only. The return value should only be tested for truthiness.\n\n\nfunction isCached() {\n  return cachedTempDir;\n} // Clears the cached tempDir value, if one is cached. This is exposed for tests\n// only.\n\n\nfunction clearCache() {\n  cachedTempDir = undefined;\n}\n\nmodule.exports.tempDir = _tempDir;\nmodule.exports.isCached = isCached;\nmodule.exports.clearCache = clearCache;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/shelljs/src/tempdir.js"],"names":["common","require","os","fs","register","_tempDir","allowGlobbing","wrapOutput","writeableDir","dir","existsSync","statFollowLinks","isDirectory","testFile","randomFileName","writeFileSync","unlinkSync","e","cachedTempDir","tmpdir","process","env","TMPDIR","TEMP","TMP","Wimp$ScrapDir","isCached","clearCache","undefined","module","exports","tempDir"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;;AAEAD,MAAM,CAACI,QAAP,CAAgB,SAAhB,EAA2BC,QAA3B,EAAqC;AACnCC,EAAAA,aAAa,EAAE,KADoB;AAEnCC,EAAAA,UAAU,EAAE;AAFuB,CAArC,E,CAKA;;AACA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,MAAI,CAACA,GAAD,IAAQ,CAACN,EAAE,CAACO,UAAH,CAAcD,GAAd,CAAb,EAAiC,OAAO,KAAP;AAEjC,MAAI,CAACT,MAAM,CAACW,eAAP,CAAuBF,GAAvB,EAA4BG,WAA5B,EAAL,EAAgD,OAAO,KAAP;AAEhD,MAAIC,QAAQ,GAAGJ,GAAG,GAAG,GAAN,GAAYT,MAAM,CAACc,cAAP,EAA3B;;AACA,MAAI;AACFX,IAAAA,EAAE,CAACY,aAAH,CAAiBF,QAAjB,EAA2B,GAA3B;AACAb,IAAAA,MAAM,CAACgB,UAAP,CAAkBH,QAAlB;AACA,WAAOJ,GAAP;AACD,GAJD,CAIE,OAAOQ,CAAP,EAAU;AACV;AACA,WAAO,KAAP;AACD;AACF,C,CAED;;;AACA,IAAIC,aAAJ,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASb,QAAT,GAAoB;AAClB,MAAIa,aAAJ,EAAmB,OAAOA,aAAP;AAEnBA,EAAAA,aAAa,GAAGV,YAAY,CAACN,EAAE,CAACiB,MAAH,EAAD,CAAZ,IACAX,YAAY,CAACY,OAAO,CAACC,GAAR,CAAYC,MAAb,CADZ,IAEAd,YAAY,CAACY,OAAO,CAACC,GAAR,CAAYE,IAAb,CAFZ,IAGAf,YAAY,CAACY,OAAO,CAACC,GAAR,CAAYG,GAAb,CAHZ,IAIAhB,YAAY,CAACY,OAAO,CAACC,GAAR,CAAYI,aAAb,CAJZ,IAI2C;AAC3CjB,EAAAA,YAAY,CAAC,UAAD,CALZ,IAK4B;AAC5BA,EAAAA,YAAY,CAAC,SAAD,CANZ,IAM2B;AAC3BA,EAAAA,YAAY,CAAC,QAAD,CAPZ,IAO0B;AAC1BA,EAAAA,YAAY,CAAC,OAAD,CARZ,IAQyB;AACzBA,EAAAA,YAAY,CAAC,MAAD,CATZ,IAUAA,YAAY,CAAC,UAAD,CAVZ,IAWAA,YAAY,CAAC,UAAD,CAXZ,IAYAA,YAAY,CAAC,GAAD,CAZ5B,CAHkB,CAeiB;;AAEnC,SAAOU,aAAP;AACD,C,CAED;AACA;;;AACA,SAASQ,QAAT,GAAoB;AAClB,SAAOR,aAAP;AACD,C,CAED;AACA;;;AACA,SAASS,UAAT,GAAsB;AACpBT,EAAAA,aAAa,GAAGU,SAAhB;AACD;;AAEDC,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB1B,QAAzB;AACAwB,MAAM,CAACC,OAAP,CAAeJ,QAAf,GAA0BA,QAA1B;AACAG,MAAM,CAACC,OAAP,CAAeH,UAAf,GAA4BA,UAA5B","sourcesContent":["var common = require('./common');\nvar os = require('os');\nvar fs = require('fs');\n\ncommon.register('tempdir', _tempDir, {\n  allowGlobbing: false,\n  wrapOutput: false,\n});\n\n// Returns false if 'dir' is not a writeable directory, 'dir' otherwise\nfunction writeableDir(dir) {\n  if (!dir || !fs.existsSync(dir)) return false;\n\n  if (!common.statFollowLinks(dir).isDirectory()) return false;\n\n  var testFile = dir + '/' + common.randomFileName();\n  try {\n    fs.writeFileSync(testFile, ' ');\n    common.unlinkSync(testFile);\n    return dir;\n  } catch (e) {\n    /* istanbul ignore next */\n    return false;\n  }\n}\n\n// Variable to cache the tempdir value for successive lookups.\nvar cachedTempDir;\n\n//@\n//@ ### tempdir()\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var tmp = tempdir(); // \"/tmp\" for most *nix platforms\n//@ ```\n//@\n//@ Searches and returns string containing a writeable, platform-dependent temporary directory.\n//@ Follows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\nfunction _tempDir() {\n  if (cachedTempDir) return cachedTempDir;\n\n  cachedTempDir = writeableDir(os.tmpdir()) ||\n                  writeableDir(process.env.TMPDIR) ||\n                  writeableDir(process.env.TEMP) ||\n                  writeableDir(process.env.TMP) ||\n                  writeableDir(process.env.Wimp$ScrapDir) || // RiscOS\n                  writeableDir('C:\\\\TEMP') || // Windows\n                  writeableDir('C:\\\\TMP') || // Windows\n                  writeableDir('\\\\TEMP') || // Windows\n                  writeableDir('\\\\TMP') || // Windows\n                  writeableDir('/tmp') ||\n                  writeableDir('/var/tmp') ||\n                  writeableDir('/usr/tmp') ||\n                  writeableDir('.'); // last resort\n\n  return cachedTempDir;\n}\n\n// Indicates if the tempdir value is currently cached. This is exposed for tests\n// only. The return value should only be tested for truthiness.\nfunction isCached() {\n  return cachedTempDir;\n}\n\n// Clears the cached tempDir value, if one is cached. This is exposed for tests\n// only.\nfunction clearCache() {\n  cachedTempDir = undefined;\n}\n\nmodule.exports.tempDir = _tempDir;\nmodule.exports.isCached = isCached;\nmodule.exports.clearCache = clearCache;\n"]},"metadata":{},"sourceType":"script"}