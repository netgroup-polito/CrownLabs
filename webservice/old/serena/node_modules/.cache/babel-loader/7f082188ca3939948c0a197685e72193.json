{"ast":null,"code":"/*!\n * algorithms/rsaes.js - RSA Signatures\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    helpers = require(\"./helpers.js\"),\n    DataBuffer = require(\"../util/databuffer.js\"),\n    rsaUtil = require(\"./rsa-util.js\");\n\nvar nodeSupport = {\n  \"RSA-OAEP\": \"RSA_PKCS1_OAEP_PADDING\",\n  RSA1_5: \"RSA_PKCS1_PADDING\"\n};\n\nfunction nodeSupportCheck(name) {\n  return helpers.nodeCrypto && helpers.nodeCrypto.constants && Object.keys(nodeSupport).indexOf(name) !== -1;\n} // ### RSAES-PKCS1-v1_5\n// ### RSAES-OAEP\n\n\nfunction rsaesEncryptFn(name) {\n  var alg = {\n    name: name\n  };\n\n  if (\"RSA-OAEP-256\" === name) {\n    alg.name = \"RSA-OAEP\";\n    alg.hash = {\n      name: \"SHA-256\"\n    };\n  } else if (\"RSA-OAEP\" === name) {\n    alg.hash = {\n      name: \"SHA-1\"\n    };\n  } else {\n    alg.name = \"RSAES-PKCS1-v1_5\";\n  } // ### Fallback Implementation -- uses forge\n\n\n  var fallback = function (key, pdata) {\n    // convert pdata to byte string\n    pdata = new DataBuffer(pdata).bytes(); // encrypt it\n\n    var pki = rsaUtil.convertToForge(key, true),\n        params = {};\n\n    if (\"RSA-OAEP\" === alg.name) {\n      params.md = alg.hash.name.toLowerCase().replace(/-/g, \"\");\n      params.md = forge.md[params.md].create();\n    }\n\n    var cdata = pki.encrypt(pdata, alg.name.toUpperCase(), params); // convert cdata to Buffer\n\n    cdata = new DataBuffer(cdata).native();\n    return Promise.resolve({\n      data: cdata\n    });\n  }; // ### WebCryptoAPI Implementation\n\n\n  var webcrypto;\n\n  if (\"RSAES-PKCS1-v1_5\" !== alg.name) {\n    webcrypto = function (key, pdata) {\n      key = rsaUtil.convertToJWK(key, true);\n      var promise;\n      promise = helpers.subtleCrypto.importKey(\"jwk\", key, alg, true, [\"encrypt\"]);\n      promise = promise.then(function (key) {\n        return helpers.subtleCrypto.encrypt(alg, key, pdata);\n      });\n      promise = promise.then(function (result) {\n        var cdata = Buffer.from(result);\n        return {\n          data: cdata\n        };\n      });\n      return promise;\n    };\n  } else {\n    webcrypto = null;\n  }\n\n  var nodejs;\n\n  if (nodeSupportCheck(name)) {\n    nodejs = function (key, pdata) {\n      key = rsaUtil.convertToPem(key, true);\n      var cdata = helpers.nodeCrypto.publicEncrypt({\n        key,\n        padding: helpers.nodeCrypto.constants[nodeSupport[name]]\n      }, pdata);\n      return {\n        data: cdata\n      };\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction rsaesDecryptFn(name) {\n  var alg = {\n    name: name\n  };\n\n  if (\"RSA-OAEP-256\" === name) {\n    alg.name = \"RSA-OAEP\";\n    alg.hash = {\n      name: \"SHA-256\"\n    };\n  } else if (\"RSA-OAEP\" === name) {\n    alg.hash = {\n      name: \"SHA-1\"\n    };\n  } else {\n    alg.name = \"RSAES-PKCS1-v1_5\";\n  } // ### Fallback Implementation -- uses forge\n\n\n  var fallback = function (key, cdata) {\n    // convert cdata to byte string\n    cdata = new DataBuffer(cdata).bytes(); // decrypt it\n\n    var pki = rsaUtil.convertToForge(key, false),\n        params = {};\n\n    if (\"RSA-OAEP\" === alg.name) {\n      params.md = alg.hash.name.toLowerCase().replace(/-/g, \"\");\n      params.md = forge.md[params.md].create();\n    }\n\n    var pdata = pki.decrypt(cdata, alg.name.toUpperCase(), params); // convert pdata to Buffer\n\n    pdata = new DataBuffer(pdata).native();\n    return Promise.resolve(pdata);\n  }; // ### WebCryptoAPI Implementation\n\n\n  var webcrypto;\n\n  if (\"RSAES-PKCS1-v1_5\" !== alg.name) {\n    webcrypto = function (key, pdata) {\n      key = rsaUtil.convertToJWK(key, false);\n      var promise;\n      promise = helpers.subtleCrypto.importKey(\"jwk\", key, alg, true, [\"decrypt\"]);\n      promise = promise.then(function (key) {\n        return helpers.subtleCrypto.decrypt(alg, key, pdata);\n      });\n      promise = promise.then(function (result) {\n        var pdata = Buffer.from(result);\n        return pdata;\n      });\n      return promise;\n    };\n  } else {\n    webcrypto = null;\n  }\n\n  var nodejs;\n\n  if (nodeSupportCheck(name)) {\n    // node ^6.12.0 || >= 8.0.0\n    nodejs = function (key, pdata) {\n      key = rsaUtil.convertToPem(key, false);\n      return helpers.nodeCrypto.privateDecrypt({\n        key,\n        padding: helpers.nodeCrypto.constants[nodeSupport[name]]\n      }, pdata);\n    };\n  } else if (helpers.nodeCrypto && name === \"RSA-OAEP\") {\n    // node (>= 6.0.0 && < 6.12.0) || ^7.0.0\n    nodejs = function (key, pdata) {\n      key = rsaUtil.convertToPem(key, false);\n      return helpers.nodeCrypto.privateDecrypt(key, pdata);\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n} // ### Public API\n// * [name].encrypt\n// * [name].decrypt\n\n\nvar rsaes = {};\n[\"RSA-OAEP\", \"RSA-OAEP-256\", \"RSA1_5\"].forEach(function (name) {\n  rsaes[name] = {\n    encrypt: rsaesEncryptFn(name),\n    decrypt: rsaesDecryptFn(name)\n  };\n});\nmodule.exports = rsaes;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/algorithms/rsaes.js"],"names":["forge","require","helpers","DataBuffer","rsaUtil","nodeSupport","RSA1_5","nodeSupportCheck","name","nodeCrypto","constants","Object","keys","indexOf","rsaesEncryptFn","alg","hash","fallback","key","pdata","bytes","pki","convertToForge","params","md","toLowerCase","replace","create","cdata","encrypt","toUpperCase","native","Promise","resolve","data","webcrypto","convertToJWK","promise","subtleCrypto","importKey","then","result","Buffer","from","nodejs","convertToPem","publicEncrypt","padding","setupFallback","rsaesDecryptFn","decrypt","privateDecrypt","rsaes","forEach","module","exports"],"mappings":"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","sourcesContent":["/*!\n * algorithms/rsaes.js - RSA Signatures\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    helpers = require(\"./helpers.js\"),\n    DataBuffer = require(\"../util/databuffer.js\"),\n    rsaUtil = require(\"./rsa-util.js\");\n\nvar nodeSupport = {\n  \"RSA-OAEP\": \"RSA_PKCS1_OAEP_PADDING\",\n  RSA1_5: \"RSA_PKCS1_PADDING\"\n};\n\nfunction nodeSupportCheck(name) {\n  return helpers.nodeCrypto && helpers.nodeCrypto.constants && Object.keys(nodeSupport).indexOf(name) !== -1;\n}\n\n// ### RSAES-PKCS1-v1_5\n\n// ### RSAES-OAEP\nfunction rsaesEncryptFn(name) {\n  var alg = {\n    name: name\n  };\n\n  if (\"RSA-OAEP-256\" === name) {\n    alg.name = \"RSA-OAEP\";\n    alg.hash = {\n      name: \"SHA-256\"\n    };\n  } else if (\"RSA-OAEP\" === name) {\n    alg.hash = {\n      name: \"SHA-1\"\n    };\n  } else {\n    alg.name = \"RSAES-PKCS1-v1_5\";\n  }\n\n  // ### Fallback Implementation -- uses forge\n  var fallback = function(key, pdata) {\n    // convert pdata to byte string\n    pdata = new DataBuffer(pdata).bytes();\n\n    // encrypt it\n    var pki = rsaUtil.convertToForge(key, true),\n        params = {};\n    if (\"RSA-OAEP\" === alg.name) {\n      params.md = alg.hash.name.toLowerCase().replace(/-/g, \"\");\n      params.md = forge.md[params.md].create();\n    }\n    var cdata = pki.encrypt(pdata, alg.name.toUpperCase(), params);\n\n    // convert cdata to Buffer\n    cdata = new DataBuffer(cdata).native();\n\n    return Promise.resolve({\n      data: cdata\n    });\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto;\n  if (\"RSAES-PKCS1-v1_5\" !== alg.name) {\n    webcrypto = function(key, pdata) {\n      key = rsaUtil.convertToJWK(key, true);\n      var promise;\n      promise = helpers.subtleCrypto.importKey(\"jwk\", key, alg, true, [\"encrypt\"]);\n      promise = promise.then(function(key) {\n        return helpers.subtleCrypto.encrypt(alg, key, pdata);\n      });\n      promise = promise.then(function(result) {\n        var cdata = Buffer.from(result);\n        return {\n          data: cdata\n        };\n      });\n\n      return promise;\n    };\n  } else {\n    webcrypto = null;\n  }\n\n  var nodejs;\n  if (nodeSupportCheck(name)) {\n    nodejs = function (key, pdata) {\n      key = rsaUtil.convertToPem(key, true);\n\n      var cdata = helpers.nodeCrypto.publicEncrypt({\n        key,\n        padding: helpers.nodeCrypto.constants[nodeSupport[name]]\n      }, pdata);\n\n      return {\n        data: cdata\n      };\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction rsaesDecryptFn(name) {\n  var alg = {\n    name: name\n  };\n\n  if (\"RSA-OAEP-256\" === name) {\n    alg.name = \"RSA-OAEP\";\n    alg.hash = {\n      name: \"SHA-256\"\n    };\n  } else if (\"RSA-OAEP\" === name) {\n    alg.hash = {\n      name: \"SHA-1\"\n    };\n  } else {\n    alg.name = \"RSAES-PKCS1-v1_5\";\n  }\n\n  // ### Fallback Implementation -- uses forge\n  var fallback = function(key, cdata) {\n    // convert cdata to byte string\n    cdata = new DataBuffer(cdata).bytes();\n\n    // decrypt it\n    var pki = rsaUtil.convertToForge(key, false),\n        params = {};\n    if (\"RSA-OAEP\" === alg.name) {\n      params.md = alg.hash.name.toLowerCase().replace(/-/g, \"\");\n      params.md = forge.md[params.md].create();\n    }\n    var pdata = pki.decrypt(cdata, alg.name.toUpperCase(), params);\n\n    // convert pdata to Buffer\n    pdata = new DataBuffer(pdata).native();\n\n    return Promise.resolve(pdata);\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto;\n  if (\"RSAES-PKCS1-v1_5\" !== alg.name) {\n    webcrypto = function(key, pdata) {\n      key = rsaUtil.convertToJWK(key, false);\n      var promise;\n      promise = helpers.subtleCrypto.importKey(\"jwk\", key, alg, true, [\"decrypt\"]);\n      promise = promise.then(function(key) {\n        return helpers.subtleCrypto.decrypt(alg, key, pdata);\n      });\n      promise = promise.then(function(result) {\n        var pdata = Buffer.from(result);\n        return pdata;\n      });\n\n      return promise;\n    };\n  } else {\n    webcrypto = null;\n  }\n\n  var nodejs;\n  if (nodeSupportCheck(name)) { // node ^6.12.0 || >= 8.0.0\n    nodejs = function(key, pdata) {\n      key = rsaUtil.convertToPem(key, false);\n      return helpers.nodeCrypto.privateDecrypt({\n        key,\n        padding: helpers.nodeCrypto.constants[nodeSupport[name]]\n      }, pdata);\n    };\n  } else if (helpers.nodeCrypto && name === \"RSA-OAEP\") { // node (>= 6.0.0 && < 6.12.0) || ^7.0.0\n    nodejs = function(key, pdata) {\n      key = rsaUtil.convertToPem(key, false);\n      return helpers.nodeCrypto.privateDecrypt(key, pdata);\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\n// ### Public API\n// * [name].encrypt\n// * [name].decrypt\nvar rsaes = {};\n[\n  \"RSA-OAEP\",\n  \"RSA-OAEP-256\",\n  \"RSA1_5\"\n].forEach(function(name) {\n  rsaes[name] = {\n    encrypt: rsaesEncryptFn(name),\n    decrypt: rsaesDecryptFn(name)\n  };\n});\n\nmodule.exports = rsaes;\n"]},"metadata":{},"sourceType":"script"}