{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst fs = require(\"fs\");\n\nconst u = require(\"underscore\");\n\nfunction newClusters(a) {\n  return u.map(a, clusterIterator());\n}\n\nexports.newClusters = newClusters;\n\nfunction exportCluster(cluster) {\n  return {\n    name: cluster.name,\n    cluster: {\n      server: cluster.server,\n      'certificate-authority-data': cluster.caData,\n      'certificate-authority': cluster.caFile,\n      'insecure-skip-tls-verify': cluster.skipTLSVerify\n    }\n  };\n}\n\nexports.exportCluster = exportCluster;\n\nfunction clusterIterator() {\n  return (elt, i, list) => {\n    if (!elt.name) {\n      throw new Error(`clusters[${i}].name is missing`);\n    }\n\n    if (!elt.cluster) {\n      throw new Error(`clusters[${i}].cluster is missing`);\n    }\n\n    if (!elt.cluster.server) {\n      throw new Error(`clusters[${i}].cluster.server is missing`);\n    }\n\n    return {\n      caData: elt.cluster['certificate-authority-data'],\n      caFile: elt.cluster['certificate-authority'],\n      name: elt.name,\n      server: elt.cluster.server,\n      skipTLSVerify: elt.cluster['insecure-skip-tls-verify'] === true\n    };\n  };\n}\n\nfunction newUsers(a) {\n  return u.map(a, userIterator());\n}\n\nexports.newUsers = newUsers;\n\nfunction exportUser(user) {\n  return {\n    name: user.name,\n    user: {\n      'auth-provider': user.authProvider,\n      'client-certificate-data': user.certData,\n      'client-certificate': user.certFile,\n      exec: user.exec,\n      'client-key-data': user.keyData,\n      'client-key': user.keyFile,\n      token: user.token,\n      password: user.password,\n      username: user.username\n    }\n  };\n}\n\nexports.exportUser = exportUser;\n\nfunction userIterator() {\n  return (elt, i, list) => {\n    if (!elt.name) {\n      throw new Error(`users[${i}].name is missing`);\n    }\n\n    return {\n      authProvider: elt.user ? elt.user['auth-provider'] : null,\n      certData: elt.user ? elt.user['client-certificate-data'] : null,\n      certFile: elt.user ? elt.user['client-certificate'] : null,\n      exec: elt.user ? elt.user.exec : null,\n      keyData: elt.user ? elt.user['client-key-data'] : null,\n      keyFile: elt.user ? elt.user['client-key'] : null,\n      name: elt.name,\n      token: findToken(elt.user),\n      password: elt.user ? elt.user.password : null,\n      username: elt.user ? elt.user.username : null\n    };\n  };\n}\n\nfunction findToken(user) {\n  if (user) {\n    if (user.token) {\n      return user.token;\n    }\n\n    if (user['token-file']) {\n      return fs.readFileSync(user['token-file']).toString();\n    }\n  }\n}\n\nfunction newContexts(a) {\n  return u.map(a, contextIterator());\n}\n\nexports.newContexts = newContexts;\n\nfunction exportContext(ctx) {\n  return {\n    name: ctx.name,\n    context: ctx\n  };\n}\n\nexports.exportContext = exportContext;\n\nfunction contextIterator() {\n  return (elt, i, list) => {\n    if (!elt.name) {\n      throw new Error(`contexts[${i}].name is missing`);\n    }\n\n    if (!elt.context) {\n      throw new Error(`contexts[${i}].context is missing`);\n    }\n\n    if (!elt.context.cluster) {\n      throw new Error(`contexts[${i}].context.cluster is missing`);\n    }\n\n    return {\n      cluster: elt.context.cluster,\n      name: elt.name,\n      user: elt.context.user || undefined,\n      namespace: elt.context.namespace || undefined\n    };\n  };\n}","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/@kubernetes/client-node/dist/config_types.js"],"names":["Object","defineProperty","exports","value","fs","require","u","newClusters","a","map","clusterIterator","exportCluster","cluster","name","server","caData","caFile","skipTLSVerify","elt","i","list","Error","newUsers","userIterator","exportUser","user","authProvider","certData","certFile","exec","keyData","keyFile","token","password","username","findToken","readFileSync","toString","newContexts","contextIterator","exportContext","ctx","context","undefined","namespace"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst u = require(\"underscore\");\nfunction newClusters(a) {\n    return u.map(a, clusterIterator());\n}\nexports.newClusters = newClusters;\nfunction exportCluster(cluster) {\n    return {\n        name: cluster.name,\n        cluster: {\n            server: cluster.server,\n            'certificate-authority-data': cluster.caData,\n            'certificate-authority': cluster.caFile,\n            'insecure-skip-tls-verify': cluster.skipTLSVerify,\n        },\n    };\n}\nexports.exportCluster = exportCluster;\nfunction clusterIterator() {\n    return (elt, i, list) => {\n        if (!elt.name) {\n            throw new Error(`clusters[${i}].name is missing`);\n        }\n        if (!elt.cluster) {\n            throw new Error(`clusters[${i}].cluster is missing`);\n        }\n        if (!elt.cluster.server) {\n            throw new Error(`clusters[${i}].cluster.server is missing`);\n        }\n        return {\n            caData: elt.cluster['certificate-authority-data'],\n            caFile: elt.cluster['certificate-authority'],\n            name: elt.name,\n            server: elt.cluster.server,\n            skipTLSVerify: elt.cluster['insecure-skip-tls-verify'] === true,\n        };\n    };\n}\nfunction newUsers(a) {\n    return u.map(a, userIterator());\n}\nexports.newUsers = newUsers;\nfunction exportUser(user) {\n    return {\n        name: user.name,\n        user: {\n            'auth-provider': user.authProvider,\n            'client-certificate-data': user.certData,\n            'client-certificate': user.certFile,\n            exec: user.exec,\n            'client-key-data': user.keyData,\n            'client-key': user.keyFile,\n            token: user.token,\n            password: user.password,\n            username: user.username,\n        },\n    };\n}\nexports.exportUser = exportUser;\nfunction userIterator() {\n    return (elt, i, list) => {\n        if (!elt.name) {\n            throw new Error(`users[${i}].name is missing`);\n        }\n        return {\n            authProvider: elt.user ? elt.user['auth-provider'] : null,\n            certData: elt.user ? elt.user['client-certificate-data'] : null,\n            certFile: elt.user ? elt.user['client-certificate'] : null,\n            exec: elt.user ? elt.user.exec : null,\n            keyData: elt.user ? elt.user['client-key-data'] : null,\n            keyFile: elt.user ? elt.user['client-key'] : null,\n            name: elt.name,\n            token: findToken(elt.user),\n            password: elt.user ? elt.user.password : null,\n            username: elt.user ? elt.user.username : null,\n        };\n    };\n}\nfunction findToken(user) {\n    if (user) {\n        if (user.token) {\n            return user.token;\n        }\n        if (user['token-file']) {\n            return fs.readFileSync(user['token-file']).toString();\n        }\n    }\n}\nfunction newContexts(a) {\n    return u.map(a, contextIterator());\n}\nexports.newContexts = newContexts;\nfunction exportContext(ctx) {\n    return {\n        name: ctx.name,\n        context: ctx,\n    };\n}\nexports.exportContext = exportContext;\nfunction contextIterator() {\n    return (elt, i, list) => {\n        if (!elt.name) {\n            throw new Error(`contexts[${i}].name is missing`);\n        }\n        if (!elt.context) {\n            throw new Error(`contexts[${i}].context is missing`);\n        }\n        if (!elt.context.cluster) {\n            throw new Error(`contexts[${i}].context.cluster is missing`);\n        }\n        return {\n            cluster: elt.context.cluster,\n            name: elt.name,\n            user: elt.context.user || undefined,\n            namespace: elt.context.namespace || undefined,\n        };\n    };\n}\n//# sourceMappingURL=config_types.js.map"]},"metadata":{},"sourceType":"script"}