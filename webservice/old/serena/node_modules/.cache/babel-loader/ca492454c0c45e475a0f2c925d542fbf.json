{"ast":null,"code":"/*!\n * util/index.js - Utilities Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\");\n\nvar util;\n\nfunction asBuffer(input, encoding) {\n  if (Buffer.isBuffer(input)) {\n    return input;\n  }\n\n  if (\"string\" === typeof input) {\n    encoding = encoding || \"binary\";\n\n    if (\"base64url\" === encoding) {\n      return util.base64url.decode(input);\n    }\n\n    return Buffer.from(input, encoding);\n  } // assume input is an Array, ArrayBuffer, or ArrayBufferView\n\n\n  if (forge.util.isArrayBufferView(input)) {\n    input = input instanceof Uint8Array ? input : new Uint8Array(input.buffer, input.byteOffset, input.byteOffset + input.byteLength);\n  } else if (forge.util.isArrayBuffer(input)) {\n    input = new Uint8Array(input);\n  }\n\n  var output;\n  output = Buffer.from(input);\n  return output;\n}\n\nfunction randomBytes(len) {\n  return Buffer.from(forge.random.getBytes(len), \"binary\");\n}\n\nutil = {\n  base64url: require(\"./base64url.js\"),\n  utf8: require(\"./utf8.js\"),\n  asBuffer: asBuffer,\n  randomBytes: randomBytes\n};\nmodule.exports = util;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/util/index.js"],"names":["forge","require","util","asBuffer","input","encoding","Buffer","isBuffer","base64url","decode","from","isArrayBufferView","Uint8Array","buffer","byteOffset","byteLength","isArrayBuffer","output","randomBytes","len","random","getBytes","utf8","module","exports"],"mappings":"AAAA;;;;;AAKA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AAEA,IAAIC,IAAJ;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmC;AACjC,MAAIC,MAAM,CAACC,QAAP,CAAgBH,KAAhB,CAAJ,EAA4B;AAC1B,WAAOA,KAAP;AACD;;AAED,MAAI,aAAa,OAAOA,KAAxB,EAA+B;AAC7BC,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,QAAvB;;AACA,QAAI,gBAAgBA,QAApB,EAA8B;AAC5B,aAAOH,IAAI,CAACM,SAAL,CAAeC,MAAf,CAAsBL,KAAtB,CAAP;AACD;;AACD,WAAOE,MAAM,CAACI,IAAP,CAAYN,KAAZ,EAAmBC,QAAnB,CAAP;AACD,GAXgC,CAajC;;;AACA,MAAIL,KAAK,CAACE,IAAN,CAAWS,iBAAX,CAA6BP,KAA7B,CAAJ,EAAyC;AACvCA,IAAAA,KAAK,GAAIA,KAAK,YAAYQ,UAAlB,GACAR,KADA,GAEA,IAAIQ,UAAJ,CAAeR,KAAK,CAACS,MAArB,EAA6BT,KAAK,CAACU,UAAnC,EAA+CV,KAAK,CAACU,UAAN,GAAmBV,KAAK,CAACW,UAAxE,CAFR;AAGD,GAJD,MAIO,IAAIf,KAAK,CAACE,IAAN,CAAWc,aAAX,CAAyBZ,KAAzB,CAAJ,EAAqC;AAC1CA,IAAAA,KAAK,GAAG,IAAIQ,UAAJ,CAAeR,KAAf,CAAR;AACD;;AAED,MAAIa,MAAJ;AACAA,EAAAA,MAAM,GAAGX,MAAM,CAACI,IAAP,CAAYN,KAAZ,CAAT;AAEA,SAAOa,MAAP;AACD;;AAED,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAOb,MAAM,CAACI,IAAP,CAAYV,KAAK,CAACoB,MAAN,CAAaC,QAAb,CAAsBF,GAAtB,CAAZ,EAAwC,QAAxC,CAAP;AACD;;AAEDjB,IAAI,GAAG;AACLM,EAAAA,SAAS,EAAEP,OAAO,CAAC,gBAAD,CADb;AAELqB,EAAAA,IAAI,EAAErB,OAAO,CAAC,WAAD,CAFR;AAGLE,EAAAA,QAAQ,EAAEA,QAHL;AAILe,EAAAA,WAAW,EAAEA;AAJR,CAAP;AAMAK,MAAM,CAACC,OAAP,GAAiBtB,IAAjB","sourcesContent":["/*!\n * util/index.js - Utilities Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\");\n\nvar util;\n\nfunction asBuffer(input, encoding) {\n  if (Buffer.isBuffer(input)) {\n    return input;\n  }\n\n  if (\"string\" === typeof input) {\n    encoding = encoding || \"binary\";\n    if (\"base64url\" === encoding) {\n      return util.base64url.decode(input);\n    }\n    return Buffer.from(input, encoding);\n  }\n\n  // assume input is an Array, ArrayBuffer, or ArrayBufferView\n  if (forge.util.isArrayBufferView(input)) {\n    input = (input instanceof Uint8Array) ?\n            input :\n            new Uint8Array(input.buffer, input.byteOffset, input.byteOffset + input.byteLength);\n  } else if (forge.util.isArrayBuffer(input)) {\n    input = new Uint8Array(input);\n  }\n\n  var output;\n  output = Buffer.from(input);\n\n  return output;\n}\n\nfunction randomBytes(len) {\n  return Buffer.from(forge.random.getBytes(len), \"binary\");\n}\n\nutil = {\n  base64url: require(\"./base64url.js\"),\n  utf8: require(\"./utf8.js\"),\n  asBuffer: asBuffer,\n  randomBytes: randomBytes\n};\nmodule.exports = util;\n"]},"metadata":{},"sourceType":"script"}