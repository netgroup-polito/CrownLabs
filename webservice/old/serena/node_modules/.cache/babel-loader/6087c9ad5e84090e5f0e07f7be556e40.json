{"ast":null,"code":"\"use strict\";\n/**\n * Kubernetes\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: v1.15.5\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n* EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:   {     Addresses: [{\\\"ip\\\": \\\"10.10.1.1\\\"}, {\\\"ip\\\": \\\"10.10.2.2\\\"}],     Ports:     [{\\\"name\\\": \\\"a\\\", \\\"port\\\": 8675}, {\\\"name\\\": \\\"b\\\", \\\"port\\\": 309}]   } The resulting set of endpoints can be viewed as:     a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],     b: [ 10.10.1.1:309, 10.10.2.2:309 ]\n*/\n\nclass V1EndpointSubset {\n  static getAttributeTypeMap() {\n    return V1EndpointSubset.attributeTypeMap;\n  }\n\n}\n\nV1EndpointSubset.discriminator = undefined;\nV1EndpointSubset.attributeTypeMap = [{\n  \"name\": \"addresses\",\n  \"baseName\": \"addresses\",\n  \"type\": \"Array<V1EndpointAddress>\"\n}, {\n  \"name\": \"notReadyAddresses\",\n  \"baseName\": \"notReadyAddresses\",\n  \"type\": \"Array<V1EndpointAddress>\"\n}, {\n  \"name\": \"ports\",\n  \"baseName\": \"ports\",\n  \"type\": \"Array<V1EndpointPort>\"\n}];\nexports.V1EndpointSubset = V1EndpointSubset;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/@kubernetes/client-node/dist/gen/model/v1EndpointSubset.js"],"names":["Object","defineProperty","exports","value","V1EndpointSubset","getAttributeTypeMap","attributeTypeMap","discriminator","undefined"],"mappings":"AAAA;AACA;;;;;;;;;;;;AAWAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;AAGA,MAAMC,gBAAN,CAAuB;AACnB,SAAOC,mBAAP,GAA6B;AACzB,WAAOD,gBAAgB,CAACE,gBAAxB;AACH;;AAHkB;;AAKvBF,gBAAgB,CAACG,aAAjB,GAAiCC,SAAjC;AACAJ,gBAAgB,CAACE,gBAAjB,GAAoC,CAChC;AACI,UAAQ,WADZ;AAEI,cAAY,WAFhB;AAGI,UAAQ;AAHZ,CADgC,EAMhC;AACI,UAAQ,mBADZ;AAEI,cAAY,mBAFhB;AAGI,UAAQ;AAHZ,CANgC,EAWhC;AACI,UAAQ,OADZ;AAEI,cAAY,OAFhB;AAGI,UAAQ;AAHZ,CAXgC,CAApC;AAiBAJ,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\n/**\n * Kubernetes\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: v1.15.5\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n* EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:   {     Addresses: [{\\\"ip\\\": \\\"10.10.1.1\\\"}, {\\\"ip\\\": \\\"10.10.2.2\\\"}],     Ports:     [{\\\"name\\\": \\\"a\\\", \\\"port\\\": 8675}, {\\\"name\\\": \\\"b\\\", \\\"port\\\": 309}]   } The resulting set of endpoints can be viewed as:     a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],     b: [ 10.10.1.1:309, 10.10.2.2:309 ]\n*/\nclass V1EndpointSubset {\n    static getAttributeTypeMap() {\n        return V1EndpointSubset.attributeTypeMap;\n    }\n}\nV1EndpointSubset.discriminator = undefined;\nV1EndpointSubset.attributeTypeMap = [\n    {\n        \"name\": \"addresses\",\n        \"baseName\": \"addresses\",\n        \"type\": \"Array<V1EndpointAddress>\"\n    },\n    {\n        \"name\": \"notReadyAddresses\",\n        \"baseName\": \"notReadyAddresses\",\n        \"type\": \"Array<V1EndpointAddress>\"\n    },\n    {\n        \"name\": \"ports\",\n        \"baseName\": \"ports\",\n        \"type\": \"Array<V1EndpointPort>\"\n    }\n];\nexports.V1EndpointSubset = V1EndpointSubset;\n//# sourceMappingURL=v1EndpointSubset.js.map"]},"metadata":{},"sourceType":"script"}