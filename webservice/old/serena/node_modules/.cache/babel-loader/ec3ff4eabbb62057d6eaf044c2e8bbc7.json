{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\n\nconst urlLib = require('url');\n\nconst normalizeUrl = require('normalize-url');\n\nconst getStream = require('get-stream');\n\nconst CachePolicy = require('http-cache-semantics');\n\nconst Response = require('responselike');\n\nconst lowercaseKeys = require('lowercase-keys');\n\nconst cloneResponse = require('clone-response');\n\nconst Keyv = require('keyv');\n\nclass CacheableRequest {\n  constructor(request, cacheAdapter) {\n    if (typeof request !== 'function') {\n      throw new TypeError('Parameter `request` must be a function');\n    }\n\n    this.cache = new Keyv({\n      uri: typeof cacheAdapter === 'string' && cacheAdapter,\n      store: typeof cacheAdapter !== 'string' && cacheAdapter,\n      namespace: 'cacheable-request'\n    });\n    return this.createCacheableRequest(request);\n  }\n\n  createCacheableRequest(request) {\n    return (opts, cb) => {\n      if (typeof opts === 'string') {\n        opts = urlLib.parse(opts);\n      }\n\n      opts = Object.assign({\n        headers: {},\n        method: 'GET',\n        cache: true,\n        strictTtl: false,\n        automaticFailover: false\n      }, opts);\n      opts.headers = lowercaseKeys(opts.headers);\n      const ee = new EventEmitter();\n      const url = normalizeUrl(urlLib.format(opts));\n      const key = `${opts.method}:${url}`;\n      let revalidate = false;\n      let madeRequest = false;\n\n      const makeRequest = opts => {\n        madeRequest = true;\n\n        const handler = response => {\n          if (revalidate) {\n            const revalidatedPolicy = CachePolicy.fromObject(revalidate.cachePolicy).revalidatedPolicy(opts, response);\n\n            if (!revalidatedPolicy.modified) {\n              const headers = revalidatedPolicy.policy.responseHeaders();\n              response = new Response(response.statusCode, headers, revalidate.body, revalidate.url);\n              response.cachePolicy = revalidatedPolicy.policy;\n              response.fromCache = true;\n            }\n          }\n\n          if (!response.fromCache) {\n            response.cachePolicy = new CachePolicy(opts, response);\n            response.fromCache = false;\n          }\n\n          let clonedResponse;\n\n          if (opts.cache && response.cachePolicy.storable()) {\n            clonedResponse = cloneResponse(response);\n            getStream.buffer(response).then(body => {\n              const value = {\n                cachePolicy: response.cachePolicy.toObject(),\n                url: response.url,\n                statusCode: response.fromCache ? revalidate.statusCode : response.statusCode,\n                body\n              };\n              const ttl = opts.strictTtl ? response.cachePolicy.timeToLive() : undefined;\n              return this.cache.set(key, value, ttl);\n            }).catch(err => ee.emit('error', new CacheableRequest.CacheError(err)));\n          } else if (opts.cache && revalidate) {\n            this.cache.delete(key).catch(err => ee.emit('error', new CacheableRequest.CacheError(err)));\n          }\n\n          ee.emit('response', clonedResponse || response);\n\n          if (typeof cb === 'function') {\n            cb(clonedResponse || response);\n          }\n        };\n\n        try {\n          const req = request(opts, handler);\n          ee.emit('request', req);\n        } catch (err) {\n          ee.emit('error', new CacheableRequest.RequestError(err));\n        }\n      };\n\n      const get = opts => Promise.resolve().then(() => opts.cache ? this.cache.get(key) : undefined).then(cacheEntry => {\n        if (typeof cacheEntry === 'undefined') {\n          return makeRequest(opts);\n        }\n\n        const policy = CachePolicy.fromObject(cacheEntry.cachePolicy);\n\n        if (policy.satisfiesWithoutRevalidation(opts)) {\n          const headers = policy.responseHeaders();\n          const response = new Response(cacheEntry.statusCode, headers, cacheEntry.body, cacheEntry.url);\n          response.cachePolicy = policy;\n          response.fromCache = true;\n          ee.emit('response', response);\n\n          if (typeof cb === 'function') {\n            cb(response);\n          }\n        } else {\n          revalidate = cacheEntry;\n          opts.headers = policy.revalidationHeaders(opts);\n          makeRequest(opts);\n        }\n      });\n\n      this.cache.on('error', err => ee.emit('error', new CacheableRequest.CacheError(err)));\n      get(opts).catch(err => {\n        if (opts.automaticFailover && !madeRequest) {\n          makeRequest(opts);\n        }\n\n        ee.emit('error', new CacheableRequest.CacheError(err));\n      });\n      return ee;\n    };\n  }\n\n}\n\nCacheableRequest.RequestError = class extends Error {\n  constructor(err) {\n    super(err.message);\n    this.name = 'RequestError';\n    Object.assign(this, err);\n  }\n\n};\nCacheableRequest.CacheError = class extends Error {\n  constructor(err) {\n    super(err.message);\n    this.name = 'CacheError';\n    Object.assign(this, err);\n  }\n\n};\nmodule.exports = CacheableRequest;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/cacheable-request/src/index.js"],"names":["EventEmitter","require","urlLib","normalizeUrl","getStream","CachePolicy","Response","lowercaseKeys","cloneResponse","Keyv","CacheableRequest","constructor","request","cacheAdapter","TypeError","cache","uri","store","namespace","createCacheableRequest","opts","cb","parse","Object","assign","headers","method","strictTtl","automaticFailover","ee","url","format","key","revalidate","madeRequest","makeRequest","handler","response","revalidatedPolicy","fromObject","cachePolicy","modified","policy","responseHeaders","statusCode","body","fromCache","clonedResponse","storable","buffer","then","value","toObject","ttl","timeToLive","undefined","set","catch","err","emit","CacheError","delete","req","RequestError","get","Promise","resolve","cacheEntry","satisfiesWithoutRevalidation","revalidationHeaders","on","Error","message","name","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst urlLib = require('url');\nconst normalizeUrl = require('normalize-url');\nconst getStream = require('get-stream');\nconst CachePolicy = require('http-cache-semantics');\nconst Response = require('responselike');\nconst lowercaseKeys = require('lowercase-keys');\nconst cloneResponse = require('clone-response');\nconst Keyv = require('keyv');\n\nclass CacheableRequest {\n\tconstructor(request, cacheAdapter) {\n\t\tif (typeof request !== 'function') {\n\t\t\tthrow new TypeError('Parameter `request` must be a function');\n\t\t}\n\n\t\tthis.cache = new Keyv({\n\t\t\turi: typeof cacheAdapter === 'string' && cacheAdapter,\n\t\t\tstore: typeof cacheAdapter !== 'string' && cacheAdapter,\n\t\t\tnamespace: 'cacheable-request'\n\t\t});\n\n\t\treturn this.createCacheableRequest(request);\n\t}\n\n\tcreateCacheableRequest(request) {\n\t\treturn (opts, cb) => {\n\t\t\tif (typeof opts === 'string') {\n\t\t\t\topts = urlLib.parse(opts);\n\t\t\t}\n\t\t\topts = Object.assign({\n\t\t\t\theaders: {},\n\t\t\t\tmethod: 'GET',\n\t\t\t\tcache: true,\n\t\t\t\tstrictTtl: false,\n\t\t\t\tautomaticFailover: false\n\t\t\t}, opts);\n\t\t\topts.headers = lowercaseKeys(opts.headers);\n\n\t\t\tconst ee = new EventEmitter();\n\t\t\tconst url = normalizeUrl(urlLib.format(opts));\n\t\t\tconst key = `${opts.method}:${url}`;\n\t\t\tlet revalidate = false;\n\t\t\tlet madeRequest = false;\n\n\t\t\tconst makeRequest = opts => {\n\t\t\t\tmadeRequest = true;\n\t\t\t\tconst handler = response => {\n\t\t\t\t\tif (revalidate) {\n\t\t\t\t\t\tconst revalidatedPolicy = CachePolicy.fromObject(revalidate.cachePolicy).revalidatedPolicy(opts, response);\n\t\t\t\t\t\tif (!revalidatedPolicy.modified) {\n\t\t\t\t\t\t\tconst headers = revalidatedPolicy.policy.responseHeaders();\n\t\t\t\t\t\t\tresponse = new Response(response.statusCode, headers, revalidate.body, revalidate.url);\n\t\t\t\t\t\t\tresponse.cachePolicy = revalidatedPolicy.policy;\n\t\t\t\t\t\t\tresponse.fromCache = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!response.fromCache) {\n\t\t\t\t\t\tresponse.cachePolicy = new CachePolicy(opts, response);\n\t\t\t\t\t\tresponse.fromCache = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet clonedResponse;\n\t\t\t\t\tif (opts.cache && response.cachePolicy.storable()) {\n\t\t\t\t\t\tclonedResponse = cloneResponse(response);\n\t\t\t\t\t\tgetStream.buffer(response)\n\t\t\t\t\t\t\t.then(body => {\n\t\t\t\t\t\t\t\tconst value = {\n\t\t\t\t\t\t\t\t\tcachePolicy: response.cachePolicy.toObject(),\n\t\t\t\t\t\t\t\t\turl: response.url,\n\t\t\t\t\t\t\t\t\tstatusCode: response.fromCache ? revalidate.statusCode : response.statusCode,\n\t\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tconst ttl = opts.strictTtl ? response.cachePolicy.timeToLive() : undefined;\n\t\t\t\t\t\t\t\treturn this.cache.set(key, value, ttl);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(err => ee.emit('error', new CacheableRequest.CacheError(err)));\n\t\t\t\t\t} else if (opts.cache && revalidate) {\n\t\t\t\t\t\tthis.cache.delete(key)\n\t\t\t\t\t\t\t.catch(err => ee.emit('error', new CacheableRequest.CacheError(err)));\n\t\t\t\t\t}\n\n\t\t\t\t\tee.emit('response', clonedResponse || response);\n\t\t\t\t\tif (typeof cb === 'function') {\n\t\t\t\t\t\tcb(clonedResponse || response);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\tconst req = request(opts, handler);\n\t\t\t\t\tee.emit('request', req);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tee.emit('error', new CacheableRequest.RequestError(err));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst get = opts => Promise.resolve()\n\t\t\t\t.then(() => opts.cache ? this.cache.get(key) : undefined)\n\t\t\t\t.then(cacheEntry => {\n\t\t\t\t\tif (typeof cacheEntry === 'undefined') {\n\t\t\t\t\t\treturn makeRequest(opts);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst policy = CachePolicy.fromObject(cacheEntry.cachePolicy);\n\t\t\t\t\tif (policy.satisfiesWithoutRevalidation(opts)) {\n\t\t\t\t\t\tconst headers = policy.responseHeaders();\n\t\t\t\t\t\tconst response = new Response(cacheEntry.statusCode, headers, cacheEntry.body, cacheEntry.url);\n\t\t\t\t\t\tresponse.cachePolicy = policy;\n\t\t\t\t\t\tresponse.fromCache = true;\n\n\t\t\t\t\t\tee.emit('response', response);\n\t\t\t\t\t\tif (typeof cb === 'function') {\n\t\t\t\t\t\t\tcb(response);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trevalidate = cacheEntry;\n\t\t\t\t\t\topts.headers = policy.revalidationHeaders(opts);\n\t\t\t\t\t\tmakeRequest(opts);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tthis.cache.on('error', err => ee.emit('error', new CacheableRequest.CacheError(err)));\n\n\t\t\tget(opts).catch(err => {\n\t\t\t\tif (opts.automaticFailover && !madeRequest) {\n\t\t\t\t\tmakeRequest(opts);\n\t\t\t\t}\n\t\t\t\tee.emit('error', new CacheableRequest.CacheError(err));\n\t\t\t});\n\n\t\t\treturn ee;\n\t\t};\n\t}\n}\n\nCacheableRequest.RequestError = class extends Error {\n\tconstructor(err) {\n\t\tsuper(err.message);\n\t\tthis.name = 'RequestError';\n\t\tObject.assign(this, err);\n\t}\n};\n\nCacheableRequest.CacheError = class extends Error {\n\tconstructor(err) {\n\t\tsuper(err.message);\n\t\tthis.name = 'CacheError';\n\t\tObject.assign(this, err);\n\t}\n};\n\nmodule.exports = CacheableRequest;\n"]},"metadata":{},"sourceType":"script"}