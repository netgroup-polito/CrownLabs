{"ast":null,"code":"'use strict';\n\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value;\n    }\n  };\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/lru-cache/node_modules/yallist/iterator.js"],"names":["module","exports","Yallist","prototype","Symbol","iterator","walker","head","next","value"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAClCA,EAAAA,OAAO,CAACC,SAAR,CAAkBC,MAAM,CAACC,QAAzB,IAAqC,aAAa;AAChD,SAAK,IAAIC,MAAM,GAAG,KAAKC,IAAvB,EAA6BD,MAA7B,EAAqCA,MAAM,GAAGA,MAAM,CAACE,IAArD,EAA2D;AACzD,YAAMF,MAAM,CAACG,KAAb;AACD;AACF,GAJD;AAKD,CAND","sourcesContent":["'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}