{"ast":null,"code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/*jshint unused:false */\n\nfunction Store() {}\n\nexports.Store = Store; // Stores may be synchronous, but are still required to use a\n// Continuation-Passing Style API.  The CookieJar itself will expose a \"*Sync\"\n// API that converts from synchronous-callbacks to imperative style.\n\nStore.prototype.synchronous = false;\n\nStore.prototype.findCookie = function (domain, path, key, cb) {\n  throw new Error('findCookie is not implemented');\n};\n\nStore.prototype.findCookies = function (domain, path, cb) {\n  throw new Error('findCookies is not implemented');\n};\n\nStore.prototype.putCookie = function (cookie, cb) {\n  throw new Error('putCookie is not implemented');\n};\n\nStore.prototype.updateCookie = function (oldCookie, newCookie, cb) {\n  // recommended default implementation:\n  // return this.putCookie(newCookie, cb);\n  throw new Error('updateCookie is not implemented');\n};\n\nStore.prototype.removeCookie = function (domain, path, key, cb) {\n  throw new Error('removeCookie is not implemented');\n};\n\nStore.prototype.removeCookies = function (domain, path, cb) {\n  throw new Error('removeCookies is not implemented');\n};\n\nStore.prototype.removeAllCookies = function (cb) {\n  throw new Error('removeAllCookies is not implemented');\n};\n\nStore.prototype.getAllCookies = function (cb) {\n  throw new Error('getAllCookies is not implemented (therefore jar cannot be serialized)');\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/tough-cookie/lib/store.js"],"names":["Store","exports","prototype","synchronous","findCookie","domain","path","key","cb","Error","findCookies","putCookie","cookie","updateCookie","oldCookie","newCookie","removeCookie","removeCookies","removeAllCookies","getAllCookies"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;;AAEA,SAASA,KAAT,GAAiB,CAChB;;AACDC,OAAO,CAACD,KAAR,GAAgBA,KAAhB,C,CAEA;AACA;AACA;;AACAA,KAAK,CAACE,SAAN,CAAgBC,WAAhB,GAA8B,KAA9B;;AAEAH,KAAK,CAACE,SAAN,CAAgBE,UAAhB,GAA6B,UAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,EAA5B,EAAgC;AAC3D,QAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD,CAFD;;AAIAT,KAAK,CAACE,SAAN,CAAgBQ,WAAhB,GAA8B,UAASL,MAAT,EAAiBC,IAAjB,EAAuBE,EAAvB,EAA2B;AACvD,QAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACD,CAFD;;AAIAT,KAAK,CAACE,SAAN,CAAgBS,SAAhB,GAA4B,UAASC,MAAT,EAAiBJ,EAAjB,EAAqB;AAC/C,QAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD,CAFD;;AAIAT,KAAK,CAACE,SAAN,CAAgBW,YAAhB,GAA+B,UAASC,SAAT,EAAoBC,SAApB,EAA+BP,EAA/B,EAAmC;AAChE;AACA;AACA,QAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACD,CAJD;;AAMAT,KAAK,CAACE,SAAN,CAAgBc,YAAhB,GAA+B,UAASX,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,EAA5B,EAAgC;AAC7D,QAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACD,CAFD;;AAIAT,KAAK,CAACE,SAAN,CAAgBe,aAAhB,GAAgC,UAASZ,MAAT,EAAiBC,IAAjB,EAAuBE,EAAvB,EAA2B;AACzD,QAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACD,CAFD;;AAIAT,KAAK,CAACE,SAAN,CAAgBgB,gBAAhB,GAAmC,UAASV,EAAT,EAAa;AAC9C,QAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACD,CAFD;;AAIAT,KAAK,CAACE,SAAN,CAAgBiB,aAAhB,GAAgC,UAASX,EAAT,EAAa;AAC3C,QAAM,IAAIC,KAAJ,CAAU,uEAAV,CAAN;AACD,CAFD","sourcesContent":["/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/*jshint unused:false */\n\nfunction Store() {\n}\nexports.Store = Store;\n\n// Stores may be synchronous, but are still required to use a\n// Continuation-Passing Style API.  The CookieJar itself will expose a \"*Sync\"\n// API that converts from synchronous-callbacks to imperative style.\nStore.prototype.synchronous = false;\n\nStore.prototype.findCookie = function(domain, path, key, cb) {\n  throw new Error('findCookie is not implemented');\n};\n\nStore.prototype.findCookies = function(domain, path, cb) {\n  throw new Error('findCookies is not implemented');\n};\n\nStore.prototype.putCookie = function(cookie, cb) {\n  throw new Error('putCookie is not implemented');\n};\n\nStore.prototype.updateCookie = function(oldCookie, newCookie, cb) {\n  // recommended default implementation:\n  // return this.putCookie(newCookie, cb);\n  throw new Error('updateCookie is not implemented');\n};\n\nStore.prototype.removeCookie = function(domain, path, key, cb) {\n  throw new Error('removeCookie is not implemented');\n};\n\nStore.prototype.removeCookies = function(domain, path, cb) {\n  throw new Error('removeCookies is not implemented');\n};\n\nStore.prototype.removeAllCookies = function(cb) {\n  throw new Error('removeAllCookies is not implemented');\n}\n\nStore.prototype.getAllCookies = function(cb) {\n  throw new Error('getAllCookies is not implemented (therefore jar cannot be serialized)');\n};\n"]},"metadata":{},"sourceType":"script"}