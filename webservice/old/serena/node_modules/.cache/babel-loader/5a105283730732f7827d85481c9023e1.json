{"ast":null,"code":"'use strict';\n\nmodule.exports = function (data, opts) {\n  if (!opts) opts = {};\n  if (typeof opts === 'function') opts = {\n    cmp: opts\n  };\n  var cycles = typeof opts.cycles === 'boolean' ? opts.cycles : false;\n\n  var cmp = opts.cmp && function (f) {\n    return function (node) {\n      return function (a, b) {\n        var aobj = {\n          key: a,\n          value: node[a]\n        };\n        var bobj = {\n          key: b,\n          value: node[b]\n        };\n        return f(aobj, bobj);\n      };\n    };\n  }(opts.cmp);\n\n  var seen = [];\n  return function stringify(node) {\n    if (node && node.toJSON && typeof node.toJSON === 'function') {\n      node = node.toJSON();\n    }\n\n    if (node === undefined) return;\n    if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n    if (typeof node !== 'object') return JSON.stringify(node);\n    var i, out;\n\n    if (Array.isArray(node)) {\n      out = '[';\n\n      for (i = 0; i < node.length; i++) {\n        if (i) out += ',';\n        out += stringify(node[i]) || 'null';\n      }\n\n      return out + ']';\n    }\n\n    if (node === null) return 'null';\n\n    if (seen.indexOf(node) !== -1) {\n      if (cycles) return JSON.stringify('__cycle__');\n      throw new TypeError('Converting circular structure to JSON');\n    }\n\n    var seenIndex = seen.push(node) - 1;\n    var keys = Object.keys(node).sort(cmp && cmp(node));\n    out = '';\n\n    for (i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = stringify(node[key]);\n      if (!value) continue;\n      if (out) out += ',';\n      out += JSON.stringify(key) + ':' + value;\n    }\n\n    seen.splice(seenIndex, 1);\n    return '{' + out + '}';\n  }(data);\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/fast-json-stable-stringify/index.js"],"names":["module","exports","data","opts","cmp","cycles","f","node","a","b","aobj","key","value","bobj","seen","stringify","toJSON","undefined","isFinite","JSON","i","out","Array","isArray","length","indexOf","TypeError","seenIndex","push","keys","Object","sort","splice"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACnC,MAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AACX,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgCA,IAAI,GAAG;AAAEC,IAAAA,GAAG,EAAED;AAAP,GAAP;AAChC,MAAIE,MAAM,GAAI,OAAOF,IAAI,CAACE,MAAZ,KAAuB,SAAxB,GAAqCF,IAAI,CAACE,MAA1C,GAAmD,KAAhE;;AAEA,MAAID,GAAG,GAAGD,IAAI,CAACC,GAAL,IAAa,UAAUE,CAAV,EAAa;AAChC,WAAO,UAAUC,IAAV,EAAgB;AACnB,aAAO,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACnB,YAAIC,IAAI,GAAG;AAAEC,UAAAA,GAAG,EAAEH,CAAP;AAAUI,UAAAA,KAAK,EAAEL,IAAI,CAACC,CAAD;AAArB,SAAX;AACA,YAAIK,IAAI,GAAG;AAAEF,UAAAA,GAAG,EAAEF,CAAP;AAAUG,UAAAA,KAAK,EAAEL,IAAI,CAACE,CAAD;AAArB,SAAX;AACA,eAAOH,CAAC,CAACI,IAAD,EAAOG,IAAP,CAAR;AACH,OAJD;AAKH,KAND;AAOH,GARqB,CAQnBV,IAAI,CAACC,GARc,CAAtB;;AAUA,MAAIU,IAAI,GAAG,EAAX;AACA,SAAQ,SAASC,SAAT,CAAoBR,IAApB,EAA0B;AAC9B,QAAIA,IAAI,IAAIA,IAAI,CAACS,MAAb,IAAuB,OAAOT,IAAI,CAACS,MAAZ,KAAuB,UAAlD,EAA8D;AAC1DT,MAAAA,IAAI,GAAGA,IAAI,CAACS,MAAL,EAAP;AACH;;AAED,QAAIT,IAAI,KAAKU,SAAb,EAAwB;AACxB,QAAI,OAAOV,IAAP,IAAe,QAAnB,EAA6B,OAAOW,QAAQ,CAACX,IAAD,CAAR,GAAiB,KAAKA,IAAtB,GAA6B,MAApC;AAC7B,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B,OAAOY,IAAI,CAACJ,SAAL,CAAeR,IAAf,CAAP;AAE9B,QAAIa,CAAJ,EAAOC,GAAP;;AACA,QAAIC,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAJ,EAAyB;AACrBc,MAAAA,GAAG,GAAG,GAAN;;AACA,WAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGb,IAAI,CAACiB,MAArB,EAA6BJ,CAAC,EAA9B,EAAkC;AAC9B,YAAIA,CAAJ,EAAOC,GAAG,IAAI,GAAP;AACPA,QAAAA,GAAG,IAAIN,SAAS,CAACR,IAAI,CAACa,CAAD,CAAL,CAAT,IAAsB,MAA7B;AACH;;AACD,aAAOC,GAAG,GAAG,GAAb;AACH;;AAED,QAAId,IAAI,KAAK,IAAb,EAAmB,OAAO,MAAP;;AAEnB,QAAIO,IAAI,CAACW,OAAL,CAAalB,IAAb,MAAuB,CAAC,CAA5B,EAA+B;AAC3B,UAAIF,MAAJ,EAAY,OAAOc,IAAI,CAACJ,SAAL,CAAe,WAAf,CAAP;AACZ,YAAM,IAAIW,SAAJ,CAAc,uCAAd,CAAN;AACH;;AAED,QAAIC,SAAS,GAAGb,IAAI,CAACc,IAAL,CAAUrB,IAAV,IAAkB,CAAlC;AACA,QAAIsB,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYtB,IAAZ,EAAkBwB,IAAlB,CAAuB3B,GAAG,IAAIA,GAAG,CAACG,IAAD,CAAjC,CAAX;AACAc,IAAAA,GAAG,GAAG,EAAN;;AACA,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,IAAI,CAACL,MAArB,EAA6BJ,CAAC,EAA9B,EAAkC;AAC9B,UAAIT,GAAG,GAAGkB,IAAI,CAACT,CAAD,CAAd;AACA,UAAIR,KAAK,GAAGG,SAAS,CAACR,IAAI,CAACI,GAAD,CAAL,CAArB;AAEA,UAAI,CAACC,KAAL,EAAY;AACZ,UAAIS,GAAJ,EAASA,GAAG,IAAI,GAAP;AACTA,MAAAA,GAAG,IAAIF,IAAI,CAACJ,SAAL,CAAeJ,GAAf,IAAsB,GAAtB,GAA4BC,KAAnC;AACH;;AACDE,IAAAA,IAAI,CAACkB,MAAL,CAAYL,SAAZ,EAAuB,CAAvB;AACA,WAAO,MAAMN,GAAN,GAAY,GAAnB;AACH,GAvCM,CAuCJnB,IAvCI,CAAP;AAwCH,CAxDD","sourcesContent":["'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n"]},"metadata":{},"sourceType":"script"}