{"ast":null,"code":"\"use strict\";\n/**\n * Kubernetes\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: v1.15.5\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst localVarRequest = require(\"request\");\n\nconst models_1 = require(\"../model/models\");\n\nconst models_2 = require(\"../model/models\");\n\nlet defaultBasePath = 'http://localhost'; // ===============================================\n// This file is autogenerated - Please do not edit\n// ===============================================\n\nvar AdmissionregistrationV1beta1ApiApiKeys;\n\n(function (AdmissionregistrationV1beta1ApiApiKeys) {\n  AdmissionregistrationV1beta1ApiApiKeys[AdmissionregistrationV1beta1ApiApiKeys[\"BearerToken\"] = 0] = \"BearerToken\";\n})(AdmissionregistrationV1beta1ApiApiKeys = exports.AdmissionregistrationV1beta1ApiApiKeys || (exports.AdmissionregistrationV1beta1ApiApiKeys = {}));\n\nclass AdmissionregistrationV1beta1Api {\n  constructor(basePathOrUsername, password, basePath) {\n    this._basePath = defaultBasePath;\n    this.defaultHeaders = {};\n    this._useQuerystring = false;\n    this.authentications = {\n      'default': new models_1.VoidAuth(),\n      'BearerToken': new models_2.ApiKeyAuth('header', 'authorization')\n    };\n\n    if (password) {\n      if (basePath) {\n        this.basePath = basePath;\n      }\n    } else {\n      if (basePathOrUsername) {\n        this.basePath = basePathOrUsername;\n      }\n    }\n  }\n\n  set useQuerystring(value) {\n    this._useQuerystring = value;\n  }\n\n  set basePath(basePath) {\n    this._basePath = basePath;\n  }\n\n  get basePath() {\n    return this._basePath;\n  }\n\n  setDefaultAuthentication(auth) {\n    this.authentications.default = auth;\n  }\n\n  setApiKey(key, value) {\n    this.authentications[AdmissionregistrationV1beta1ApiApiKeys[key]].apiKey = value;\n  }\n  /**\n   * create a MutatingWebhookConfiguration\n   * @param body\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n   */\n\n\n  createMutatingWebhookConfiguration(body, pretty, dryRun, fieldManager, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations';\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'body' is not null or undefined\n\n      if (body === null || body === undefined) {\n        throw new Error('Required parameter body was null or undefined when calling createMutatingWebhookConfiguration.');\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (fieldManager !== undefined) {\n        localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'POST',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"V1beta1MutatingWebhookConfiguration\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1MutatingWebhookConfiguration\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * create a ValidatingWebhookConfiguration\n   * @param body\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n   */\n\n\n  createValidatingWebhookConfiguration(body, pretty, dryRun, fieldManager, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations';\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'body' is not null or undefined\n\n      if (body === null || body === undefined) {\n        throw new Error('Required parameter body was null or undefined when calling createValidatingWebhookConfiguration.');\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (fieldManager !== undefined) {\n        localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'POST',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"V1beta1ValidatingWebhookConfiguration\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1ValidatingWebhookConfiguration\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * delete collection of MutatingWebhookConfiguration\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param allowWatchBookmarks allowWatchBookmarks requests watch events with type \\&quot;BOOKMARK\\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is alpha and can be changed or removed without notice.\n   * @param _continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \\&quot;next key\\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.\n   * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.\n   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.\n   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.\n   * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \\&quot;orphan\\&quot; finalizer will be added to/removed from the object\\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.\n   * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \\&#39;Orphan\\&#39; - orphan the dependents; \\&#39;Background\\&#39; - allow the garbage collector to delete the dependents in the background; \\&#39;Foreground\\&#39; - a cascading policy that deletes all dependents in the foreground.\n   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it\\&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.\n   * @param timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.\n   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.\n   * @param body\n   */\n\n\n  deleteCollectionMutatingWebhookConfiguration(pretty, allowWatchBookmarks, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch, body, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations';\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {};\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (allowWatchBookmarks !== undefined) {\n        localVarQueryParameters['allowWatchBookmarks'] = models_1.ObjectSerializer.serialize(allowWatchBookmarks, \"boolean\");\n      }\n\n      if (_continue !== undefined) {\n        localVarQueryParameters['continue'] = models_1.ObjectSerializer.serialize(_continue, \"string\");\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (fieldSelector !== undefined) {\n        localVarQueryParameters['fieldSelector'] = models_1.ObjectSerializer.serialize(fieldSelector, \"string\");\n      }\n\n      if (gracePeriodSeconds !== undefined) {\n        localVarQueryParameters['gracePeriodSeconds'] = models_1.ObjectSerializer.serialize(gracePeriodSeconds, \"number\");\n      }\n\n      if (labelSelector !== undefined) {\n        localVarQueryParameters['labelSelector'] = models_1.ObjectSerializer.serialize(labelSelector, \"string\");\n      }\n\n      if (limit !== undefined) {\n        localVarQueryParameters['limit'] = models_1.ObjectSerializer.serialize(limit, \"number\");\n      }\n\n      if (orphanDependents !== undefined) {\n        localVarQueryParameters['orphanDependents'] = models_1.ObjectSerializer.serialize(orphanDependents, \"boolean\");\n      }\n\n      if (propagationPolicy !== undefined) {\n        localVarQueryParameters['propagationPolicy'] = models_1.ObjectSerializer.serialize(propagationPolicy, \"string\");\n      }\n\n      if (resourceVersion !== undefined) {\n        localVarQueryParameters['resourceVersion'] = models_1.ObjectSerializer.serialize(resourceVersion, \"string\");\n      }\n\n      if (timeoutSeconds !== undefined) {\n        localVarQueryParameters['timeoutSeconds'] = models_1.ObjectSerializer.serialize(timeoutSeconds, \"number\");\n      }\n\n      if (watch !== undefined) {\n        localVarQueryParameters['watch'] = models_1.ObjectSerializer.serialize(watch, \"boolean\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'DELETE',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"V1DeleteOptions\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1Status\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * delete collection of ValidatingWebhookConfiguration\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param allowWatchBookmarks allowWatchBookmarks requests watch events with type \\&quot;BOOKMARK\\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is alpha and can be changed or removed without notice.\n   * @param _continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \\&quot;next key\\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.\n   * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.\n   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.\n   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.\n   * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \\&quot;orphan\\&quot; finalizer will be added to/removed from the object\\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.\n   * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \\&#39;Orphan\\&#39; - orphan the dependents; \\&#39;Background\\&#39; - allow the garbage collector to delete the dependents in the background; \\&#39;Foreground\\&#39; - a cascading policy that deletes all dependents in the foreground.\n   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it\\&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.\n   * @param timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.\n   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.\n   * @param body\n   */\n\n\n  deleteCollectionValidatingWebhookConfiguration(pretty, allowWatchBookmarks, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch, body, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations';\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {};\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (allowWatchBookmarks !== undefined) {\n        localVarQueryParameters['allowWatchBookmarks'] = models_1.ObjectSerializer.serialize(allowWatchBookmarks, \"boolean\");\n      }\n\n      if (_continue !== undefined) {\n        localVarQueryParameters['continue'] = models_1.ObjectSerializer.serialize(_continue, \"string\");\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (fieldSelector !== undefined) {\n        localVarQueryParameters['fieldSelector'] = models_1.ObjectSerializer.serialize(fieldSelector, \"string\");\n      }\n\n      if (gracePeriodSeconds !== undefined) {\n        localVarQueryParameters['gracePeriodSeconds'] = models_1.ObjectSerializer.serialize(gracePeriodSeconds, \"number\");\n      }\n\n      if (labelSelector !== undefined) {\n        localVarQueryParameters['labelSelector'] = models_1.ObjectSerializer.serialize(labelSelector, \"string\");\n      }\n\n      if (limit !== undefined) {\n        localVarQueryParameters['limit'] = models_1.ObjectSerializer.serialize(limit, \"number\");\n      }\n\n      if (orphanDependents !== undefined) {\n        localVarQueryParameters['orphanDependents'] = models_1.ObjectSerializer.serialize(orphanDependents, \"boolean\");\n      }\n\n      if (propagationPolicy !== undefined) {\n        localVarQueryParameters['propagationPolicy'] = models_1.ObjectSerializer.serialize(propagationPolicy, \"string\");\n      }\n\n      if (resourceVersion !== undefined) {\n        localVarQueryParameters['resourceVersion'] = models_1.ObjectSerializer.serialize(resourceVersion, \"string\");\n      }\n\n      if (timeoutSeconds !== undefined) {\n        localVarQueryParameters['timeoutSeconds'] = models_1.ObjectSerializer.serialize(timeoutSeconds, \"number\");\n      }\n\n      if (watch !== undefined) {\n        localVarQueryParameters['watch'] = models_1.ObjectSerializer.serialize(watch, \"boolean\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'DELETE',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"V1DeleteOptions\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1Status\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * delete a MutatingWebhookConfiguration\n   * @param name name of the MutatingWebhookConfiguration\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.\n   * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \\&quot;orphan\\&quot; finalizer will be added to/removed from the object\\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.\n   * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \\&#39;Orphan\\&#39; - orphan the dependents; \\&#39;Background\\&#39; - allow the garbage collector to delete the dependents in the background; \\&#39;Foreground\\&#39; - a cascading policy that deletes all dependents in the foreground.\n   * @param body\n   */\n\n\n  deleteMutatingWebhookConfiguration(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, body, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}'.replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'name' is not null or undefined\n\n      if (name === null || name === undefined) {\n        throw new Error('Required parameter name was null or undefined when calling deleteMutatingWebhookConfiguration.');\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (gracePeriodSeconds !== undefined) {\n        localVarQueryParameters['gracePeriodSeconds'] = models_1.ObjectSerializer.serialize(gracePeriodSeconds, \"number\");\n      }\n\n      if (orphanDependents !== undefined) {\n        localVarQueryParameters['orphanDependents'] = models_1.ObjectSerializer.serialize(orphanDependents, \"boolean\");\n      }\n\n      if (propagationPolicy !== undefined) {\n        localVarQueryParameters['propagationPolicy'] = models_1.ObjectSerializer.serialize(propagationPolicy, \"string\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'DELETE',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"V1DeleteOptions\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1Status\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * delete a ValidatingWebhookConfiguration\n   * @param name name of the ValidatingWebhookConfiguration\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.\n   * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \\&quot;orphan\\&quot; finalizer will be added to/removed from the object\\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.\n   * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \\&#39;Orphan\\&#39; - orphan the dependents; \\&#39;Background\\&#39; - allow the garbage collector to delete the dependents in the background; \\&#39;Foreground\\&#39; - a cascading policy that deletes all dependents in the foreground.\n   * @param body\n   */\n\n\n  deleteValidatingWebhookConfiguration(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, body, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}'.replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'name' is not null or undefined\n\n      if (name === null || name === undefined) {\n        throw new Error('Required parameter name was null or undefined when calling deleteValidatingWebhookConfiguration.');\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (gracePeriodSeconds !== undefined) {\n        localVarQueryParameters['gracePeriodSeconds'] = models_1.ObjectSerializer.serialize(gracePeriodSeconds, \"number\");\n      }\n\n      if (orphanDependents !== undefined) {\n        localVarQueryParameters['orphanDependents'] = models_1.ObjectSerializer.serialize(orphanDependents, \"boolean\");\n      }\n\n      if (propagationPolicy !== undefined) {\n        localVarQueryParameters['propagationPolicy'] = models_1.ObjectSerializer.serialize(propagationPolicy, \"string\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'DELETE',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"V1DeleteOptions\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1Status\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * get available resources\n   */\n\n\n  getAPIResources(options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/';\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {};\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'GET',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1APIResourceList\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * list or watch objects of kind MutatingWebhookConfiguration\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param allowWatchBookmarks allowWatchBookmarks requests watch events with type \\&quot;BOOKMARK\\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is alpha and can be changed or removed without notice.\n   * @param _continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \\&quot;next key\\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.\n   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.\n   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.\n   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.\n   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it\\&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.\n   * @param timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.\n   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.\n   */\n\n\n  listMutatingWebhookConfiguration(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations';\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {};\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (allowWatchBookmarks !== undefined) {\n        localVarQueryParameters['allowWatchBookmarks'] = models_1.ObjectSerializer.serialize(allowWatchBookmarks, \"boolean\");\n      }\n\n      if (_continue !== undefined) {\n        localVarQueryParameters['continue'] = models_1.ObjectSerializer.serialize(_continue, \"string\");\n      }\n\n      if (fieldSelector !== undefined) {\n        localVarQueryParameters['fieldSelector'] = models_1.ObjectSerializer.serialize(fieldSelector, \"string\");\n      }\n\n      if (labelSelector !== undefined) {\n        localVarQueryParameters['labelSelector'] = models_1.ObjectSerializer.serialize(labelSelector, \"string\");\n      }\n\n      if (limit !== undefined) {\n        localVarQueryParameters['limit'] = models_1.ObjectSerializer.serialize(limit, \"number\");\n      }\n\n      if (resourceVersion !== undefined) {\n        localVarQueryParameters['resourceVersion'] = models_1.ObjectSerializer.serialize(resourceVersion, \"string\");\n      }\n\n      if (timeoutSeconds !== undefined) {\n        localVarQueryParameters['timeoutSeconds'] = models_1.ObjectSerializer.serialize(timeoutSeconds, \"number\");\n      }\n\n      if (watch !== undefined) {\n        localVarQueryParameters['watch'] = models_1.ObjectSerializer.serialize(watch, \"boolean\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'GET',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1MutatingWebhookConfigurationList\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * list or watch objects of kind ValidatingWebhookConfiguration\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param allowWatchBookmarks allowWatchBookmarks requests watch events with type \\&quot;BOOKMARK\\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is alpha and can be changed or removed without notice.\n   * @param _continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \\&quot;next key\\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.\n   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.\n   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.\n   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.\n   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it\\&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.\n   * @param timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.\n   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.\n   */\n\n\n  listValidatingWebhookConfiguration(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations';\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {};\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (allowWatchBookmarks !== undefined) {\n        localVarQueryParameters['allowWatchBookmarks'] = models_1.ObjectSerializer.serialize(allowWatchBookmarks, \"boolean\");\n      }\n\n      if (_continue !== undefined) {\n        localVarQueryParameters['continue'] = models_1.ObjectSerializer.serialize(_continue, \"string\");\n      }\n\n      if (fieldSelector !== undefined) {\n        localVarQueryParameters['fieldSelector'] = models_1.ObjectSerializer.serialize(fieldSelector, \"string\");\n      }\n\n      if (labelSelector !== undefined) {\n        localVarQueryParameters['labelSelector'] = models_1.ObjectSerializer.serialize(labelSelector, \"string\");\n      }\n\n      if (limit !== undefined) {\n        localVarQueryParameters['limit'] = models_1.ObjectSerializer.serialize(limit, \"number\");\n      }\n\n      if (resourceVersion !== undefined) {\n        localVarQueryParameters['resourceVersion'] = models_1.ObjectSerializer.serialize(resourceVersion, \"string\");\n      }\n\n      if (timeoutSeconds !== undefined) {\n        localVarQueryParameters['timeoutSeconds'] = models_1.ObjectSerializer.serialize(timeoutSeconds, \"number\");\n      }\n\n      if (watch !== undefined) {\n        localVarQueryParameters['watch'] = models_1.ObjectSerializer.serialize(watch, \"boolean\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'GET',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1ValidatingWebhookConfigurationList\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * partially update the specified MutatingWebhookConfiguration\n   * @param name name of the MutatingWebhookConfiguration\n   * @param body\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).\n   * @param force Force is going to \\&quot;force\\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.\n   */\n\n\n  patchMutatingWebhookConfiguration(name, body, pretty, dryRun, fieldManager, force, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}'.replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'name' is not null or undefined\n\n      if (name === null || name === undefined) {\n        throw new Error('Required parameter name was null or undefined when calling patchMutatingWebhookConfiguration.');\n      } // verify required parameter 'body' is not null or undefined\n\n\n      if (body === null || body === undefined) {\n        throw new Error('Required parameter body was null or undefined when calling patchMutatingWebhookConfiguration.');\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (fieldManager !== undefined) {\n        localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n      }\n\n      if (force !== undefined) {\n        localVarQueryParameters['force'] = models_1.ObjectSerializer.serialize(force, \"boolean\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'PATCH',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"object\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1MutatingWebhookConfiguration\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * partially update the specified ValidatingWebhookConfiguration\n   * @param name name of the ValidatingWebhookConfiguration\n   * @param body\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).\n   * @param force Force is going to \\&quot;force\\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.\n   */\n\n\n  patchValidatingWebhookConfiguration(name, body, pretty, dryRun, fieldManager, force, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}'.replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'name' is not null or undefined\n\n      if (name === null || name === undefined) {\n        throw new Error('Required parameter name was null or undefined when calling patchValidatingWebhookConfiguration.');\n      } // verify required parameter 'body' is not null or undefined\n\n\n      if (body === null || body === undefined) {\n        throw new Error('Required parameter body was null or undefined when calling patchValidatingWebhookConfiguration.');\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (fieldManager !== undefined) {\n        localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n      }\n\n      if (force !== undefined) {\n        localVarQueryParameters['force'] = models_1.ObjectSerializer.serialize(force, \"boolean\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'PATCH',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"object\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1ValidatingWebhookConfiguration\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * read the specified MutatingWebhookConfiguration\n   * @param name name of the MutatingWebhookConfiguration\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param exact Should the export be exact.  Exact export maintains cluster-specific fields like \\&#39;Namespace\\&#39;. Deprecated. Planned for removal in 1.18.\n   * @param _export Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.\n   */\n\n\n  readMutatingWebhookConfiguration(name, pretty, exact, _export, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}'.replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'name' is not null or undefined\n\n      if (name === null || name === undefined) {\n        throw new Error('Required parameter name was null or undefined when calling readMutatingWebhookConfiguration.');\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (exact !== undefined) {\n        localVarQueryParameters['exact'] = models_1.ObjectSerializer.serialize(exact, \"boolean\");\n      }\n\n      if (_export !== undefined) {\n        localVarQueryParameters['export'] = models_1.ObjectSerializer.serialize(_export, \"boolean\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'GET',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1MutatingWebhookConfiguration\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * read the specified ValidatingWebhookConfiguration\n   * @param name name of the ValidatingWebhookConfiguration\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param exact Should the export be exact.  Exact export maintains cluster-specific fields like \\&#39;Namespace\\&#39;. Deprecated. Planned for removal in 1.18.\n   * @param _export Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.\n   */\n\n\n  readValidatingWebhookConfiguration(name, pretty, exact, _export, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}'.replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'name' is not null or undefined\n\n      if (name === null || name === undefined) {\n        throw new Error('Required parameter name was null or undefined when calling readValidatingWebhookConfiguration.');\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (exact !== undefined) {\n        localVarQueryParameters['exact'] = models_1.ObjectSerializer.serialize(exact, \"boolean\");\n      }\n\n      if (_export !== undefined) {\n        localVarQueryParameters['export'] = models_1.ObjectSerializer.serialize(_export, \"boolean\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'GET',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1ValidatingWebhookConfiguration\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * replace the specified MutatingWebhookConfiguration\n   * @param name name of the MutatingWebhookConfiguration\n   * @param body\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n   */\n\n\n  replaceMutatingWebhookConfiguration(name, body, pretty, dryRun, fieldManager, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}'.replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'name' is not null or undefined\n\n      if (name === null || name === undefined) {\n        throw new Error('Required parameter name was null or undefined when calling replaceMutatingWebhookConfiguration.');\n      } // verify required parameter 'body' is not null or undefined\n\n\n      if (body === null || body === undefined) {\n        throw new Error('Required parameter body was null or undefined when calling replaceMutatingWebhookConfiguration.');\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (fieldManager !== undefined) {\n        localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'PUT',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"V1beta1MutatingWebhookConfiguration\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1MutatingWebhookConfiguration\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * replace the specified ValidatingWebhookConfiguration\n   * @param name name of the ValidatingWebhookConfiguration\n   * @param body\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n   */\n\n\n  replaceValidatingWebhookConfiguration(name, body, pretty, dryRun, fieldManager, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}'.replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'name' is not null or undefined\n\n      if (name === null || name === undefined) {\n        throw new Error('Required parameter name was null or undefined when calling replaceValidatingWebhookConfiguration.');\n      } // verify required parameter 'body' is not null or undefined\n\n\n      if (body === null || body === undefined) {\n        throw new Error('Required parameter body was null or undefined when calling replaceValidatingWebhookConfiguration.');\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (fieldManager !== undefined) {\n        localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'PUT',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"V1beta1ValidatingWebhookConfiguration\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1ValidatingWebhookConfiguration\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n\n}\n\nexports.AdmissionregistrationV1beta1Api = AdmissionregistrationV1beta1Api;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/@kubernetes/client-node/dist/gen/api/admissionregistrationV1beta1Api.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","localVarRequest","models_1","models_2","defaultBasePath","AdmissionregistrationV1beta1ApiApiKeys","AdmissionregistrationV1beta1Api","constructor","basePathOrUsername","password","basePath","_basePath","defaultHeaders","_useQuerystring","authentications","VoidAuth","ApiKeyAuth","useQuerystring","setDefaultAuthentication","auth","default","setApiKey","key","apiKey","createMutatingWebhookConfiguration","body","pretty","dryRun","fieldManager","options","headers","__awaiter","localVarPath","localVarQueryParameters","localVarHeaderParams","assign","localVarFormParams","undefined","Error","ObjectSerializer","serialize","localVarUseFormData","localVarRequestOptions","method","qs","uri","json","authenticationPromise","Promise","resolve","then","BearerToken","applyToRequest","keys","length","formData","form","reject","error","response","deserialize","statusCode","createValidatingWebhookConfiguration","deleteCollectionMutatingWebhookConfiguration","allowWatchBookmarks","_continue","fieldSelector","gracePeriodSeconds","labelSelector","limit","orphanDependents","propagationPolicy","resourceVersion","timeoutSeconds","watch","deleteCollectionValidatingWebhookConfiguration","deleteMutatingWebhookConfiguration","name","replace","encodeURIComponent","String","deleteValidatingWebhookConfiguration","getAPIResources","listMutatingWebhookConfiguration","listValidatingWebhookConfiguration","patchMutatingWebhookConfiguration","force","patchValidatingWebhookConfiguration","readMutatingWebhookConfiguration","exact","_export","readValidatingWebhookConfiguration","replaceMutatingWebhookConfiguration","replaceValidatingWebhookConfiguration"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Kubernetes\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: v1.15.5\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst localVarRequest = require(\"request\");\nconst models_1 = require(\"../model/models\");\nconst models_2 = require(\"../model/models\");\nlet defaultBasePath = 'http://localhost';\n// ===============================================\n// This file is autogenerated - Please do not edit\n// ===============================================\nvar AdmissionregistrationV1beta1ApiApiKeys;\n(function (AdmissionregistrationV1beta1ApiApiKeys) {\n    AdmissionregistrationV1beta1ApiApiKeys[AdmissionregistrationV1beta1ApiApiKeys[\"BearerToken\"] = 0] = \"BearerToken\";\n})(AdmissionregistrationV1beta1ApiApiKeys = exports.AdmissionregistrationV1beta1ApiApiKeys || (exports.AdmissionregistrationV1beta1ApiApiKeys = {}));\nclass AdmissionregistrationV1beta1Api {\n    constructor(basePathOrUsername, password, basePath) {\n        this._basePath = defaultBasePath;\n        this.defaultHeaders = {};\n        this._useQuerystring = false;\n        this.authentications = {\n            'default': new models_1.VoidAuth(),\n            'BearerToken': new models_2.ApiKeyAuth('header', 'authorization'),\n        };\n        if (password) {\n            if (basePath) {\n                this.basePath = basePath;\n            }\n        }\n        else {\n            if (basePathOrUsername) {\n                this.basePath = basePathOrUsername;\n            }\n        }\n    }\n    set useQuerystring(value) {\n        this._useQuerystring = value;\n    }\n    set basePath(basePath) {\n        this._basePath = basePath;\n    }\n    get basePath() {\n        return this._basePath;\n    }\n    setDefaultAuthentication(auth) {\n        this.authentications.default = auth;\n    }\n    setApiKey(key, value) {\n        this.authentications[AdmissionregistrationV1beta1ApiApiKeys[key]].apiKey = value;\n    }\n    /**\n     * create a MutatingWebhookConfiguration\n     * @param body\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n     */\n    createMutatingWebhookConfiguration(body, pretty, dryRun, fieldManager, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations';\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'body' is not null or undefined\n            if (body === null || body === undefined) {\n                throw new Error('Required parameter body was null or undefined when calling createMutatingWebhookConfiguration.');\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (fieldManager !== undefined) {\n                localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'POST',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"V1beta1MutatingWebhookConfiguration\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1MutatingWebhookConfiguration\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * create a ValidatingWebhookConfiguration\n     * @param body\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n     */\n    createValidatingWebhookConfiguration(body, pretty, dryRun, fieldManager, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations';\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'body' is not null or undefined\n            if (body === null || body === undefined) {\n                throw new Error('Required parameter body was null or undefined when calling createValidatingWebhookConfiguration.');\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (fieldManager !== undefined) {\n                localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'POST',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"V1beta1ValidatingWebhookConfiguration\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1ValidatingWebhookConfiguration\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * delete collection of MutatingWebhookConfiguration\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param allowWatchBookmarks allowWatchBookmarks requests watch events with type \\&quot;BOOKMARK\\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is alpha and can be changed or removed without notice.\n     * @param _continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \\&quot;next key\\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.\n     * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.\n     * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.\n     * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.\n     * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \\&quot;orphan\\&quot; finalizer will be added to/removed from the object\\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.\n     * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \\&#39;Orphan\\&#39; - orphan the dependents; \\&#39;Background\\&#39; - allow the garbage collector to delete the dependents in the background; \\&#39;Foreground\\&#39; - a cascading policy that deletes all dependents in the foreground.\n     * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it\\&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.\n     * @param timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.\n     * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.\n     * @param body\n     */\n    deleteCollectionMutatingWebhookConfiguration(pretty, allowWatchBookmarks, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch, body, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations';\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (allowWatchBookmarks !== undefined) {\n                localVarQueryParameters['allowWatchBookmarks'] = models_1.ObjectSerializer.serialize(allowWatchBookmarks, \"boolean\");\n            }\n            if (_continue !== undefined) {\n                localVarQueryParameters['continue'] = models_1.ObjectSerializer.serialize(_continue, \"string\");\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (fieldSelector !== undefined) {\n                localVarQueryParameters['fieldSelector'] = models_1.ObjectSerializer.serialize(fieldSelector, \"string\");\n            }\n            if (gracePeriodSeconds !== undefined) {\n                localVarQueryParameters['gracePeriodSeconds'] = models_1.ObjectSerializer.serialize(gracePeriodSeconds, \"number\");\n            }\n            if (labelSelector !== undefined) {\n                localVarQueryParameters['labelSelector'] = models_1.ObjectSerializer.serialize(labelSelector, \"string\");\n            }\n            if (limit !== undefined) {\n                localVarQueryParameters['limit'] = models_1.ObjectSerializer.serialize(limit, \"number\");\n            }\n            if (orphanDependents !== undefined) {\n                localVarQueryParameters['orphanDependents'] = models_1.ObjectSerializer.serialize(orphanDependents, \"boolean\");\n            }\n            if (propagationPolicy !== undefined) {\n                localVarQueryParameters['propagationPolicy'] = models_1.ObjectSerializer.serialize(propagationPolicy, \"string\");\n            }\n            if (resourceVersion !== undefined) {\n                localVarQueryParameters['resourceVersion'] = models_1.ObjectSerializer.serialize(resourceVersion, \"string\");\n            }\n            if (timeoutSeconds !== undefined) {\n                localVarQueryParameters['timeoutSeconds'] = models_1.ObjectSerializer.serialize(timeoutSeconds, \"number\");\n            }\n            if (watch !== undefined) {\n                localVarQueryParameters['watch'] = models_1.ObjectSerializer.serialize(watch, \"boolean\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'DELETE',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"V1DeleteOptions\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1Status\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * delete collection of ValidatingWebhookConfiguration\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param allowWatchBookmarks allowWatchBookmarks requests watch events with type \\&quot;BOOKMARK\\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is alpha and can be changed or removed without notice.\n     * @param _continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \\&quot;next key\\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.\n     * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.\n     * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.\n     * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.\n     * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \\&quot;orphan\\&quot; finalizer will be added to/removed from the object\\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.\n     * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \\&#39;Orphan\\&#39; - orphan the dependents; \\&#39;Background\\&#39; - allow the garbage collector to delete the dependents in the background; \\&#39;Foreground\\&#39; - a cascading policy that deletes all dependents in the foreground.\n     * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it\\&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.\n     * @param timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.\n     * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.\n     * @param body\n     */\n    deleteCollectionValidatingWebhookConfiguration(pretty, allowWatchBookmarks, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch, body, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations';\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (allowWatchBookmarks !== undefined) {\n                localVarQueryParameters['allowWatchBookmarks'] = models_1.ObjectSerializer.serialize(allowWatchBookmarks, \"boolean\");\n            }\n            if (_continue !== undefined) {\n                localVarQueryParameters['continue'] = models_1.ObjectSerializer.serialize(_continue, \"string\");\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (fieldSelector !== undefined) {\n                localVarQueryParameters['fieldSelector'] = models_1.ObjectSerializer.serialize(fieldSelector, \"string\");\n            }\n            if (gracePeriodSeconds !== undefined) {\n                localVarQueryParameters['gracePeriodSeconds'] = models_1.ObjectSerializer.serialize(gracePeriodSeconds, \"number\");\n            }\n            if (labelSelector !== undefined) {\n                localVarQueryParameters['labelSelector'] = models_1.ObjectSerializer.serialize(labelSelector, \"string\");\n            }\n            if (limit !== undefined) {\n                localVarQueryParameters['limit'] = models_1.ObjectSerializer.serialize(limit, \"number\");\n            }\n            if (orphanDependents !== undefined) {\n                localVarQueryParameters['orphanDependents'] = models_1.ObjectSerializer.serialize(orphanDependents, \"boolean\");\n            }\n            if (propagationPolicy !== undefined) {\n                localVarQueryParameters['propagationPolicy'] = models_1.ObjectSerializer.serialize(propagationPolicy, \"string\");\n            }\n            if (resourceVersion !== undefined) {\n                localVarQueryParameters['resourceVersion'] = models_1.ObjectSerializer.serialize(resourceVersion, \"string\");\n            }\n            if (timeoutSeconds !== undefined) {\n                localVarQueryParameters['timeoutSeconds'] = models_1.ObjectSerializer.serialize(timeoutSeconds, \"number\");\n            }\n            if (watch !== undefined) {\n                localVarQueryParameters['watch'] = models_1.ObjectSerializer.serialize(watch, \"boolean\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'DELETE',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"V1DeleteOptions\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1Status\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * delete a MutatingWebhookConfiguration\n     * @param name name of the MutatingWebhookConfiguration\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.\n     * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \\&quot;orphan\\&quot; finalizer will be added to/removed from the object\\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.\n     * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \\&#39;Orphan\\&#39; - orphan the dependents; \\&#39;Background\\&#39; - allow the garbage collector to delete the dependents in the background; \\&#39;Foreground\\&#39; - a cascading policy that deletes all dependents in the foreground.\n     * @param body\n     */\n    deleteMutatingWebhookConfiguration(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, body, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}'\n                .replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'name' is not null or undefined\n            if (name === null || name === undefined) {\n                throw new Error('Required parameter name was null or undefined when calling deleteMutatingWebhookConfiguration.');\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (gracePeriodSeconds !== undefined) {\n                localVarQueryParameters['gracePeriodSeconds'] = models_1.ObjectSerializer.serialize(gracePeriodSeconds, \"number\");\n            }\n            if (orphanDependents !== undefined) {\n                localVarQueryParameters['orphanDependents'] = models_1.ObjectSerializer.serialize(orphanDependents, \"boolean\");\n            }\n            if (propagationPolicy !== undefined) {\n                localVarQueryParameters['propagationPolicy'] = models_1.ObjectSerializer.serialize(propagationPolicy, \"string\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'DELETE',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"V1DeleteOptions\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1Status\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * delete a ValidatingWebhookConfiguration\n     * @param name name of the ValidatingWebhookConfiguration\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.\n     * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \\&quot;orphan\\&quot; finalizer will be added to/removed from the object\\&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.\n     * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: \\&#39;Orphan\\&#39; - orphan the dependents; \\&#39;Background\\&#39; - allow the garbage collector to delete the dependents in the background; \\&#39;Foreground\\&#39; - a cascading policy that deletes all dependents in the foreground.\n     * @param body\n     */\n    deleteValidatingWebhookConfiguration(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, body, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}'\n                .replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'name' is not null or undefined\n            if (name === null || name === undefined) {\n                throw new Error('Required parameter name was null or undefined when calling deleteValidatingWebhookConfiguration.');\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (gracePeriodSeconds !== undefined) {\n                localVarQueryParameters['gracePeriodSeconds'] = models_1.ObjectSerializer.serialize(gracePeriodSeconds, \"number\");\n            }\n            if (orphanDependents !== undefined) {\n                localVarQueryParameters['orphanDependents'] = models_1.ObjectSerializer.serialize(orphanDependents, \"boolean\");\n            }\n            if (propagationPolicy !== undefined) {\n                localVarQueryParameters['propagationPolicy'] = models_1.ObjectSerializer.serialize(propagationPolicy, \"string\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'DELETE',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"V1DeleteOptions\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1Status\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * get available resources\n     */\n    getAPIResources(options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/';\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'GET',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1APIResourceList\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * list or watch objects of kind MutatingWebhookConfiguration\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param allowWatchBookmarks allowWatchBookmarks requests watch events with type \\&quot;BOOKMARK\\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is alpha and can be changed or removed without notice.\n     * @param _continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \\&quot;next key\\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.\n     * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.\n     * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.\n     * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.\n     * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it\\&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.\n     * @param timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.\n     * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.\n     */\n    listMutatingWebhookConfiguration(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations';\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (allowWatchBookmarks !== undefined) {\n                localVarQueryParameters['allowWatchBookmarks'] = models_1.ObjectSerializer.serialize(allowWatchBookmarks, \"boolean\");\n            }\n            if (_continue !== undefined) {\n                localVarQueryParameters['continue'] = models_1.ObjectSerializer.serialize(_continue, \"string\");\n            }\n            if (fieldSelector !== undefined) {\n                localVarQueryParameters['fieldSelector'] = models_1.ObjectSerializer.serialize(fieldSelector, \"string\");\n            }\n            if (labelSelector !== undefined) {\n                localVarQueryParameters['labelSelector'] = models_1.ObjectSerializer.serialize(labelSelector, \"string\");\n            }\n            if (limit !== undefined) {\n                localVarQueryParameters['limit'] = models_1.ObjectSerializer.serialize(limit, \"number\");\n            }\n            if (resourceVersion !== undefined) {\n                localVarQueryParameters['resourceVersion'] = models_1.ObjectSerializer.serialize(resourceVersion, \"string\");\n            }\n            if (timeoutSeconds !== undefined) {\n                localVarQueryParameters['timeoutSeconds'] = models_1.ObjectSerializer.serialize(timeoutSeconds, \"number\");\n            }\n            if (watch !== undefined) {\n                localVarQueryParameters['watch'] = models_1.ObjectSerializer.serialize(watch, \"boolean\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'GET',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1MutatingWebhookConfigurationList\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * list or watch objects of kind ValidatingWebhookConfiguration\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param allowWatchBookmarks allowWatchBookmarks requests watch events with type \\&quot;BOOKMARK\\&quot;. Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\\&#39;s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is alpha and can be changed or removed without notice.\n     * @param _continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \\&quot;next key\\&quot;.  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.\n     * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.\n     * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.\n     * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.\n     * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it\\&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.\n     * @param timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.\n     * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.\n     */\n    listValidatingWebhookConfiguration(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations';\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (allowWatchBookmarks !== undefined) {\n                localVarQueryParameters['allowWatchBookmarks'] = models_1.ObjectSerializer.serialize(allowWatchBookmarks, \"boolean\");\n            }\n            if (_continue !== undefined) {\n                localVarQueryParameters['continue'] = models_1.ObjectSerializer.serialize(_continue, \"string\");\n            }\n            if (fieldSelector !== undefined) {\n                localVarQueryParameters['fieldSelector'] = models_1.ObjectSerializer.serialize(fieldSelector, \"string\");\n            }\n            if (labelSelector !== undefined) {\n                localVarQueryParameters['labelSelector'] = models_1.ObjectSerializer.serialize(labelSelector, \"string\");\n            }\n            if (limit !== undefined) {\n                localVarQueryParameters['limit'] = models_1.ObjectSerializer.serialize(limit, \"number\");\n            }\n            if (resourceVersion !== undefined) {\n                localVarQueryParameters['resourceVersion'] = models_1.ObjectSerializer.serialize(resourceVersion, \"string\");\n            }\n            if (timeoutSeconds !== undefined) {\n                localVarQueryParameters['timeoutSeconds'] = models_1.ObjectSerializer.serialize(timeoutSeconds, \"number\");\n            }\n            if (watch !== undefined) {\n                localVarQueryParameters['watch'] = models_1.ObjectSerializer.serialize(watch, \"boolean\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'GET',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1ValidatingWebhookConfigurationList\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * partially update the specified MutatingWebhookConfiguration\n     * @param name name of the MutatingWebhookConfiguration\n     * @param body\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).\n     * @param force Force is going to \\&quot;force\\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.\n     */\n    patchMutatingWebhookConfiguration(name, body, pretty, dryRun, fieldManager, force, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}'\n                .replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'name' is not null or undefined\n            if (name === null || name === undefined) {\n                throw new Error('Required parameter name was null or undefined when calling patchMutatingWebhookConfiguration.');\n            }\n            // verify required parameter 'body' is not null or undefined\n            if (body === null || body === undefined) {\n                throw new Error('Required parameter body was null or undefined when calling patchMutatingWebhookConfiguration.');\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (fieldManager !== undefined) {\n                localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n            }\n            if (force !== undefined) {\n                localVarQueryParameters['force'] = models_1.ObjectSerializer.serialize(force, \"boolean\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'PATCH',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"object\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1MutatingWebhookConfiguration\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * partially update the specified ValidatingWebhookConfiguration\n     * @param name name of the ValidatingWebhookConfiguration\n     * @param body\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).\n     * @param force Force is going to \\&quot;force\\&quot; Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.\n     */\n    patchValidatingWebhookConfiguration(name, body, pretty, dryRun, fieldManager, force, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}'\n                .replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'name' is not null or undefined\n            if (name === null || name === undefined) {\n                throw new Error('Required parameter name was null or undefined when calling patchValidatingWebhookConfiguration.');\n            }\n            // verify required parameter 'body' is not null or undefined\n            if (body === null || body === undefined) {\n                throw new Error('Required parameter body was null or undefined when calling patchValidatingWebhookConfiguration.');\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (fieldManager !== undefined) {\n                localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n            }\n            if (force !== undefined) {\n                localVarQueryParameters['force'] = models_1.ObjectSerializer.serialize(force, \"boolean\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'PATCH',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"object\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1ValidatingWebhookConfiguration\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * read the specified MutatingWebhookConfiguration\n     * @param name name of the MutatingWebhookConfiguration\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param exact Should the export be exact.  Exact export maintains cluster-specific fields like \\&#39;Namespace\\&#39;. Deprecated. Planned for removal in 1.18.\n     * @param _export Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.\n     */\n    readMutatingWebhookConfiguration(name, pretty, exact, _export, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}'\n                .replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'name' is not null or undefined\n            if (name === null || name === undefined) {\n                throw new Error('Required parameter name was null or undefined when calling readMutatingWebhookConfiguration.');\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (exact !== undefined) {\n                localVarQueryParameters['exact'] = models_1.ObjectSerializer.serialize(exact, \"boolean\");\n            }\n            if (_export !== undefined) {\n                localVarQueryParameters['export'] = models_1.ObjectSerializer.serialize(_export, \"boolean\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'GET',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1MutatingWebhookConfiguration\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * read the specified ValidatingWebhookConfiguration\n     * @param name name of the ValidatingWebhookConfiguration\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param exact Should the export be exact.  Exact export maintains cluster-specific fields like \\&#39;Namespace\\&#39;. Deprecated. Planned for removal in 1.18.\n     * @param _export Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.\n     */\n    readValidatingWebhookConfiguration(name, pretty, exact, _export, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}'\n                .replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'name' is not null or undefined\n            if (name === null || name === undefined) {\n                throw new Error('Required parameter name was null or undefined when calling readValidatingWebhookConfiguration.');\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (exact !== undefined) {\n                localVarQueryParameters['exact'] = models_1.ObjectSerializer.serialize(exact, \"boolean\");\n            }\n            if (_export !== undefined) {\n                localVarQueryParameters['export'] = models_1.ObjectSerializer.serialize(_export, \"boolean\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'GET',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1ValidatingWebhookConfiguration\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * replace the specified MutatingWebhookConfiguration\n     * @param name name of the MutatingWebhookConfiguration\n     * @param body\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n     */\n    replaceMutatingWebhookConfiguration(name, body, pretty, dryRun, fieldManager, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}'\n                .replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'name' is not null or undefined\n            if (name === null || name === undefined) {\n                throw new Error('Required parameter name was null or undefined when calling replaceMutatingWebhookConfiguration.');\n            }\n            // verify required parameter 'body' is not null or undefined\n            if (body === null || body === undefined) {\n                throw new Error('Required parameter body was null or undefined when calling replaceMutatingWebhookConfiguration.');\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (fieldManager !== undefined) {\n                localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'PUT',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"V1beta1MutatingWebhookConfiguration\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1MutatingWebhookConfiguration\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * replace the specified ValidatingWebhookConfiguration\n     * @param name name of the ValidatingWebhookConfiguration\n     * @param body\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n     */\n    replaceValidatingWebhookConfiguration(name, body, pretty, dryRun, fieldManager, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}'\n                .replace('{' + 'name' + '}', encodeURIComponent(String(name)));\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'name' is not null or undefined\n            if (name === null || name === undefined) {\n                throw new Error('Required parameter name was null or undefined when calling replaceValidatingWebhookConfiguration.');\n            }\n            // verify required parameter 'body' is not null or undefined\n            if (body === null || body === undefined) {\n                throw new Error('Required parameter body was null or undefined when calling replaceValidatingWebhookConfiguration.');\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (fieldManager !== undefined) {\n                localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'PUT',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"V1beta1ValidatingWebhookConfiguration\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1ValidatingWebhookConfiguration\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n}\nexports.AdmissionregistrationV1beta1Api = AdmissionregistrationV1beta1Api;\n//# sourceMappingURL=admissionregistrationV1beta1Api.js.map"]},"metadata":{},"sourceType":"script"}