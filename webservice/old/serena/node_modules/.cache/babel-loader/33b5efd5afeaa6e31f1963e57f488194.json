{"ast":null,"code":"/*!\n * deps/ciphermodes/pack.js - Pack/Unpack Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar Long = require(\"long\");\n\nvar pack = module.exports = {\n  intToBigEndian: function (n, bs, off) {\n    if (typeof n === \"number\") {\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(4);\n          pack.intToBigEndian(n, bs, 0);\n          break;\n\n        case 3:\n          bs[off] = 0xff & n >>> 24;\n          bs[++off] = 0xff & n >>> 16;\n          bs[++off] = 0xff & n >>> 8;\n          bs[++off] = 0xff & n;\n          break;\n\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    } else {\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(4 * n.length);\n          pack.intToBigEndian(n, bs, 0);\n          break;\n\n        case 3:\n          for (var i = 0; i < n.length; ++i) {\n            pack.intToBigEndian(n[i], bs, off);\n            off += 4;\n          }\n\n          break;\n\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    }\n\n    return bs;\n  },\n  longToBigEndian: function (n, bs, off) {\n    if (!Array.isArray(n)) {\n      // Single\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(8);\n          pack.longToBigEndian(n, bs, 0);\n          break;\n\n        case 3:\n          var lo = n.low,\n              hi = n.high;\n          pack.intToBigEndian(hi, bs, off);\n          pack.intToBigEndian(lo, bs, off + 4);\n          break;\n\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    } else {\n      // Array\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(8 * n.length);\n          pack.longToBigEndian(n, bs, 0);\n          break;\n\n        case 3:\n          for (var i = 0; i < n.length; ++i) {\n            pack.longToBigEndian(n[i], bs, off);\n            off += 8;\n          }\n\n          break;\n\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    }\n\n    return bs;\n  },\n  bigEndianToInt: function (bs, off, ns) {\n    switch (arguments.length) {\n      case 2:\n        var n = bs[off] << 24;\n        n |= (bs[++off] & 0xff) << 16;\n        n |= (bs[++off] & 0xff) << 8;\n        n |= bs[++off] & 0xff;\n        return n;\n\n      case 3:\n        for (var i = 0; i < ns.length; ++i) {\n          ns[i] = pack.bigEndianToInt(bs, off);\n          off += 4;\n        }\n\n        break;\n\n      default:\n        throw new TypeError(\"Expected 2 or 3 arguments.\");\n    }\n  },\n  bigEndianToLong: function (bs, off, ns) {\n    switch (arguments.length) {\n      case 2:\n        var hi = pack.bigEndianToInt(bs, off);\n        var lo = pack.bigEndianToInt(bs, off + 4);\n        var num = new Long(lo, hi);\n        return num;\n\n      case 3:\n        for (var i = 0; i < ns.length; ++i) {\n          ns[i] = pack.bigEndianToLong(bs, off);\n          off += 8;\n        }\n\n        break;\n\n      default:\n        throw new TypeError(\"Expected 2 or 3 arguments.\");\n    }\n  }\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/deps/ciphermodes/pack.js"],"names":["Long","require","pack","module","exports","intToBigEndian","n","bs","off","arguments","length","Buffer","alloc","TypeError","i","longToBigEndian","Array","isArray","lo","low","hi","high","bigEndianToInt","ns","bigEndianToLong","num"],"mappings":"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","sourcesContent":["/*!\n * deps/ciphermodes/pack.js - Pack/Unpack Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar Long = require(\"long\");\n\nvar pack = module.exports = {\n  intToBigEndian: function(n, bs, off) {\n    if (typeof n === \"number\") {\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(4);\n          pack.intToBigEndian(n, bs, 0);\n          break;\n        case 3:\n          bs[off] = 0xff & (n >>> 24);\n          bs[++off] = 0xff & (n >>> 16);\n          bs[++off] = 0xff & (n >>> 8);\n          bs[++off] = 0xff & (n);\n          break;\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    } else {\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(4 * n.length);\n          pack.intToBigEndian(n, bs, 0);\n          break;\n        case 3:\n          for (var i = 0; i < n.length; ++i) {\n            pack.intToBigEndian(n[i], bs, off);\n            off += 4;\n          }\n          break;\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    }\n\n    return bs;\n  },\n  longToBigEndian: function(n, bs, off) {\n    if (!Array.isArray(n)) {\n      // Single\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(8);\n          pack.longToBigEndian(n, bs, 0);\n          break;\n        case 3:\n          var lo = n.low,\n              hi = n.high;\n          pack.intToBigEndian(hi, bs, off);\n          pack.intToBigEndian(lo, bs, off + 4);\n          break;\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    } else {\n      // Array\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(8 * n.length);\n          pack.longToBigEndian(n, bs, 0);\n          break;\n        case 3:\n          for (var i = 0; i < n.length; ++i) {\n            pack.longToBigEndian(n[i], bs, off);\n            off += 8;\n          }\n          break;\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    }\n\n    return bs;\n  },\n\n  bigEndianToInt: function(bs, off, ns) {\n    switch (arguments.length) {\n      case 2:\n        var n = bs[off] << 24;\n        n |= (bs[++off] & 0xff) << 16;\n        n |= (bs[++off] & 0xff) << 8;\n        n |= (bs[++off] & 0xff);\n        return n;\n      case 3:\n        for (var i = 0; i < ns.length; ++i) {\n          ns[i] = pack.bigEndianToInt(bs, off);\n          off += 4;\n        }\n        break;\n      default:\n        throw new TypeError(\"Expected 2 or 3 arguments.\");\n    }\n  },\n  bigEndianToLong: function(bs, off, ns) {\n    switch (arguments.length) {\n      case 2:\n        var hi = pack.bigEndianToInt(bs, off);\n        var lo = pack.bigEndianToInt(bs, off + 4);\n        var num = new Long(lo, hi);\n        return num;\n      case 3:\n        for (var i = 0; i < ns.length; ++i) {\n          ns[i] = pack.bigEndianToLong(bs, off);\n          off += 8;\n        }\n        break;\n      default:\n        throw new TypeError(\"Expected 2 or 3 arguments.\");\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}