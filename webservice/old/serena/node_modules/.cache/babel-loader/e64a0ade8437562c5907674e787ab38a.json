{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && unmountOnExit) return null;\n  var pane = React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return React.createElement(TabContext.Provider, {\n    value: null\n  }, React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/react-bootstrap/esm/TabPane.js"],"names":["_extends","_objectWithoutPropertiesLoose","classNames","React","useContext","useBootstrapPrefix","TabContext","SelectableContext","makeEventKey","Fade","useTabContext","props","context","activeKey","getControlledId","getControllerId","rest","shouldTransition","transition","key","eventKey","active","id","mountOnEnter","unmountOnExit","TabPane","forwardRef","ref","_useTabContext","bsPrefix","className","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","as","Component","_","prefix","pane","createElement","role","in","Provider","value","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && unmountOnExit) return null;\n  var pane = React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return React.createElement(TabContext.Provider, {\n    value: null\n  }, React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;"]},"metadata":{},"sourceType":"module"}