{"ast":null,"code":"// CoreV1Api is used to perform all basic operations available here\n// https://github.com/scality/kubernetes-client-javascript/blob/browser/src/gen/api/coreV1Api.ts\n// CustomObjectsApi is used to perform all operations on CRD available here\n// https://github.com/scality/kubernetes-client-javascript/blob/browser/src/gen/api/customObjectsApi.ts\nimport { Config, CoreV1Api, CustomObjectsApi, watch } from '@kubernetes/client-node';\nimport { UserManager } from 'oidc-client';\n/*\n*\n* UserManager section, handles the oidc authZ\n*\n* uncomment the `document.body.append(loginButton);` to see the button and test oidc\n* (need to provide a working OIDC_PROVIDER_URL and OIDC_CLIENT_ID)\n*\n* */\n\nconst userManager = new UserManager({\n  authority: \"OIDC_PROVIDER_URL\",\n  client_id: \"OIDC_CLIENT_ID\",\n  redirect_uri: 'http://localhost:8000/callback',\n  post_logout_redirect_uri: '/logout',\n  response_type: 'id_token',\n  scope: 'openid email profile',\n  loadUserInfo: false\n});\n\nif (window.location.pathname === '/callback') {\n  userManager.signinRedirectCallback().then(user => {\n    window.location = '/';\n  }).catch(e => {\n    console.error(e);\n    alert('Error oidc callback, see console');\n  });\n} else if (window.location.pathname === '/logout') {\n  userManager.signoutRedirectCallback().then(function () {\n    const h1 = document.createElement('h1');\n    h1.innerText = 'Logged out';\n    document.body.append(h1);\n    const link = document.createElement('a');\n    link.href = '/';\n    link.innerText = 'Return to homepage';\n    document.body.append(link);\n  });\n} else {\n  userManager.getUser().then(user => {\n    if (!user) {\n      const loginButton = document.createElement('button');\n      loginButton.innerText = 'Login';\n      loginButton.addEventListener('click', function () {\n        userManager.signinRedirect();\n      }, false); //document.body.append(loginButton);\n    } else {\n      render(user);\n    }\n  });\n} //Manually Bypassing authN :)\n\n\nconst user = userManager.getUser();\nuser.token = \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImVFa0U1Q2FjVjhMRk9VT3NpdzNGRGR1aTAtcmUxbl84OVVoOGhWTTIyLUUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tZndnMjUiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImU0ZmJmNTA1LTQxYjItNGM2OS05OTU3LTNhMGYxY2I1ZDZiMyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.FtWSBY7SHTIq7HS9IL-7ePyJkq6br35P5iiTryAZ2T2COoW3AH_b6ONvwe535v-TyPtp0CbAei-dLb0GCJ4hYhZwQOkRs7NK2ffTWzalrRdHyzhvS1oTeSWLfMZEPGV8_14vUVs2zVYa5hdHahfYKO69UgWFcCrNeNcGtcpx8pqvfrGQse109WKadtUygaIBmlNuq1FyVVniGrf1dYtHWT0FTHPzVYCAs_YQwjIoq4cQDMl4U8uEO5pnSS8-JDEawPneXw7fvk9z-7yUgazTNVddOzUWrr9GR2z6WCjiH7b1FZpAGjjoO9dP54_Kke-ksm9vQv9TK-env6dCLCMQLQ\";\nuser.token_type = \"Bearer\";\nrender(user);\n/*\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n*/\n\n/*\n*\n* KubernetesJavascript client section\n*\n*\n* */\n\nexport function render(user) {\n  // Variable used to track which CRD the user has selected\n  let selectedCRD = \"\"; // Creating Table to render cluster events\n\n  const textarea_label = document.createElement('h2');\n  const textarea = document.createElement('textarea', \"rows=\\\"4\\\" cols=\\\"50\\\"\");\n  textarea.innerText = \"cluster events will be written here\";\n  textarea_label.innerText = \"Cluster Events\";\n  document.body.append(textarea_label);\n  document.body.append(textarea); //Creating Status field to display current used resource status\n\n  const status = document.createElement('h2');\n  const status_content = document.createElement('span');\n  status_content.innerText = \"No running CRD\";\n  status.innerText = 'Status';\n  document.body.append(status);\n  document.body.append(status_content);\n  const course_selected = document.createElement('h2');\n  const course_selected_content = document.createElement('span');\n  course_selected_content.innerText = \"No course selected\";\n  course_selected.innerText = \"Selected Course\";\n  document.body.append(course_selected);\n  document.body.append(course_selected_content); // Creating available courses section\n\n  const courses = document.createElement('h2');\n  courses.innerText = 'Available courses';\n  document.body.append(courses); // Creating start btn\n\n  const start = document.createElement('BUTTON');\n  start.innerText = \"Start\";\n\n  start.onclick = () => {\n    if (selectedCRD !== \"\") {\n      //Create the CRD object\n      // TODO : fill studentID and the name correctly according to the assigned one\n      k8sApi_crd.createNamespacedCustomObject(\"instance.crown.team.com\", \"v1\", \"default\", \"labinstances\", {\n        apiVersion: \"instance.crown.team.com/v1\",\n        kind: \"LabInstance\",\n        metadata: {\n          \"name\": \"web-applications-course-instance\"\n        },\n        spec: {\n          labTemplateName: selectedCRD,\n          studentId: \"123456\"\n        }\n      }).then(response => {\n        status_content.innerText = \"RUNNING \" + selectedCRD;\n      }, err => {\n        alert('Error running CRD, check console');\n        console.log('Error!: ' + err);\n      });\n    } else {\n      alert(\"No CRD selected, please choose one\");\n    }\n  };\n\n  document.body.append(start); // Creating stop btn\n\n  const stop = document.createElement('BUTTON');\n  stop.innerText = \"Stop\";\n\n  stop.onclick = () => {\n    // Dumb check\n    if (status_content.textContent.includes(\"RUNNING\")) {\n      k8sApi_crd.deleteNamespacedCustomObject(\"instance.crown.team.com\", \"v1\", \"default\", \"labinstances\", \"web-applications-course-instance\", {}).then(() => {\n        status_content.innerText = \"No Running CRDs\";\n      }, err => {\n        alert('Error deleting CRD, check console');\n        console.log('Error!: ' + err);\n      });\n    } else {\n      alert(\"There's nothing to stop\");\n    }\n  };\n\n  document.body.append(stop); // Creating connect btn\n  // TODO : add window.open(IP:PORT), where the service is reachable\n\n  const connect = document.createElement('BUTTON');\n  connect.innerText = \"Connect\";\n\n  connect.onclick = () => {\n    if (status_content.textContent.includes(\"RUNNING\")) {\n      window.open(\"https://google.it\");\n    } else {\n      alert('No running CRD to connect to');\n    }\n  };\n\n  document.body.append(connect); // Loading config from cluster authenticating via token\n\n  const kc = new Config(\"APISERVER_URL\", user.token, user.token_type); // Base api, not used right now since we need to work with CRDs\n  //const k8sApi_base = kc.makeApiClient(CoreV1Api);\n  // CRD api\n\n  const k8sApi_crd = kc.makeApiClient(CustomObjectsApi); // Install watcher for all Cluster Events\n\n  watch(kc, '/api/v1/watch/events', {}, (type, object) => {\n    const node = document.createTextNode(\"NEW EVENT:\" + type + object.message + \"\\n\");\n    textarea.appendChild(node);\n  }, e => {\n    console.log('Stream ended', e);\n  }); // Retrieving CRD labtemplates\n  // TODO : once updated courses, repeat this operation for each course\n\n  k8sApi_crd.listClusterCustomObject(\"template.crown.team.com\", \"v1\", \"labtemplates\").then(nodesResponse => {\n    const nodes = nodesResponse.body.items;\n    const ul = document.createElement('ul');\n\n    for (const idx in nodes) {\n      const li = document.createElement('li');\n      const btn = document.createElement(\"BUTTON\");\n      btn.innerText = nodes[idx].metadata.name;\n\n      btn.onclick = () => {\n        selectedCRD = nodes[idx].metadata.name;\n        course_selected_content.innerText = nodes[idx].metadata.name;\n      };\n\n      li.appendChild(btn);\n      ul.append(li);\n    }\n\n    document.body.append(ul);\n  }).catch(error => {\n    alert('Error retrieving nodes, check console');\n    console.error('Error retrieving nodes', error.body ? error.body : error);\n  });\n}\n/*k8sApi.listCustomResourceDefinition()\n    .then(function(nodesResponse) {\n        const header = document.createElement('h2');\n        header.innerText = 'Custom Objects';\n        document.body.append(header);\n\n        const nodes = nodesResponse.body.items;\n        const ul = document.createElement('ul');\n        for(const idx in nodes) {\n            const li = document.createElement('li');\n            li.innerText = nodes[idx].metadata.name;\n            ul.append(li);\n        }\n        document.body.append(ul);\n    })\n    .catch(function(error) {\n        console.error('Error retrieving nodes', error.body ? error.body : error);\n    });\n    */\n\n/*\nk8sApi.listNode()\n    .then(function(nodesResponse) {\n        const header = document.createElement('h2');\n        header.innerText = 'Cluster Nodes';\n        document.body.append(header);\n\n        const nodes = nodesResponse.body.items;\n        const ul = document.createElement('ul');\n        for(const idx in nodes) {\n            const li = document.createElement('li');\n            li.innerText = nodes[idx].metadata.name;\n            ul.append(li);\n        }\n        document.body.append(ul);\n    })\n    .catch(function(error) {\n        console.error('Error retrieving nodes', error.body ? error.body : error);\n    });\n\nk8sApi.listPodForAllNamespaces()\n    .then(function(nodesResponse) {\n        const header = document.createElement('h2');\n        header.innerText = 'Cluster Pods';\n        document.body.append(header);\n\n        const nodes = nodesResponse.body.items;\n        const ul = document.createElement('ul');\n        for(const idx in nodes) {\n            const li = document.createElement('li');\n            li.innerText = nodes[idx].metadata.name;\n            ul.append(li);\n        }\n        document.body.append(ul);\n    })\n    .catch(function(error) {\n        console.error('Error retrieving nodes', error.body ? error.body : error);\n    });\n*/","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/src/k8s.js"],"names":["Config","CoreV1Api","CustomObjectsApi","watch","UserManager","userManager","authority","client_id","redirect_uri","post_logout_redirect_uri","response_type","scope","loadUserInfo","window","location","pathname","signinRedirectCallback","then","user","catch","e","console","error","alert","signoutRedirectCallback","h1","document","createElement","innerText","body","append","link","href","getUser","loginButton","addEventListener","signinRedirect","render","token","token_type","selectedCRD","textarea_label","textarea","status","status_content","course_selected","course_selected_content","courses","start","onclick","k8sApi_crd","createNamespacedCustomObject","apiVersion","kind","metadata","spec","labTemplateName","studentId","response","err","log","stop","textContent","includes","deleteNamespacedCustomObject","connect","open","kc","makeApiClient","type","object","node","createTextNode","message","appendChild","listClusterCustomObject","nodesResponse","nodes","items","ul","idx","li","btn","name"],"mappings":"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","sourcesContent":["// CoreV1Api is used to perform all basic operations available here\n// https://github.com/scality/kubernetes-client-javascript/blob/browser/src/gen/api/coreV1Api.ts\n\n// CustomObjectsApi is used to perform all operations on CRD available here\n// https://github.com/scality/kubernetes-client-javascript/blob/browser/src/gen/api/customObjectsApi.ts\nimport { Config, CoreV1Api, CustomObjectsApi, watch } from '@kubernetes/client-node';\nimport { UserManager } from 'oidc-client';\n\n/*\n*\n* UserManager section, handles the oidc authZ\n*\n* uncomment the `document.body.append(loginButton);` to see the button and test oidc\n* (need to provide a working OIDC_PROVIDER_URL and OIDC_CLIENT_ID)\n*\n* */\nconst userManager = new UserManager({\n    authority: \"OIDC_PROVIDER_URL\",\n    client_id: \"OIDC_CLIENT_ID\",\n    redirect_uri: 'http://localhost:8000/callback',\n    post_logout_redirect_uri: '/logout',\n    response_type: 'id_token',\n    scope: 'openid email profile',\n    loadUserInfo: false,\n});\n\nif (window.location.pathname === '/callback') {\n    userManager.signinRedirectCallback()\n        .then((user) => {\n            window.location = '/';\n        })\n        .catch((e) => {\n            console.error(e);\n            alert('Error oidc callback, see console');\n        });\n} else if (window.location.pathname === '/logout') {\n    userManager.signoutRedirectCallback().then(function() {\n        const h1 = document.createElement('h1');\n        h1.innerText = 'Logged out';\n        document.body.append(h1);\n\n        const link = document.createElement('a');\n        link.href = '/';\n        link.innerText = 'Return to homepage';\n        document.body.append(link);\n    });\n} else {\n    userManager.getUser()\n        .then((user) => {\n            if (!user) {\n                const loginButton = document.createElement('button');\n                loginButton.innerText = 'Login';\n                loginButton.addEventListener('click', function() {\n                    userManager.signinRedirect();\n                }, false);\n                //document.body.append(loginButton);\n            } else {\n                render(user);\n            }\n        });\n}\n\n//Manually Bypassing authN :)\nconst user = userManager.getUser();\nuser.token = \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImVFa0U1Q2FjVjhMRk9VT3NpdzNGRGR1aTAtcmUxbl84OVVoOGhWTTIyLUUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tZndnMjUiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImU0ZmJmNTA1LTQxYjItNGM2OS05OTU3LTNhMGYxY2I1ZDZiMyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.FtWSBY7SHTIq7HS9IL-7ePyJkq6br35P5iiTryAZ2T2COoW3AH_b6ONvwe535v-TyPtp0CbAei-dLb0GCJ4hYhZwQOkRs7NK2ffTWzalrRdHyzhvS1oTeSWLfMZEPGV8_14vUVs2zVYa5hdHahfYKO69UgWFcCrNeNcGtcpx8pqvfrGQse109WKadtUygaIBmlNuq1FyVVniGrf1dYtHWT0FTHPzVYCAs_YQwjIoq4cQDMl4U8uEO5pnSS8-JDEawPneXw7fvk9z-7yUgazTNVddOzUWrr9GR2z6WCjiH7b1FZpAGjjoO9dP54_Kke-ksm9vQv9TK-env6dCLCMQLQ\";\nuser.token_type = \"Bearer\";\nrender(user);\n\n/*\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n*/\n\n\n/*\n*\n* KubernetesJavascript client section\n*\n*\n* */\n\nexport function render(user){\n    // Variable used to track which CRD the user has selected\n    let selectedCRD = \"\";\n\n    // Creating Table to render cluster events\n    const textarea_label = document.createElement('h2');\n    const textarea = document.createElement('textarea', \"rows=\\\"4\\\" cols=\\\"50\\\"\");\n    textarea.innerText = \"cluster events will be written here\";\n    textarea_label.innerText = \"Cluster Events\";\n    document.body.append(textarea_label);\n    document.body.append(textarea);\n\n    //Creating Status field to display current used resource status\n    const status = document.createElement('h2');\n    const status_content = document.createElement('span');\n    status_content.innerText = \"No running CRD\";\n    status.innerText = 'Status';\n    document.body.append(status);\n    document.body.append(status_content);\n\n    const course_selected = document.createElement('h2');\n    const course_selected_content = document.createElement('span');\n    course_selected_content.innerText = \"No course selected\";\n    course_selected.innerText = \"Selected Course\";\n    document.body.append(course_selected);\n    document.body.append(course_selected_content);\n\n    // Creating available courses section\n    const courses = document.createElement('h2');\n    courses.innerText = 'Available courses';\n    document.body.append(courses);\n\n    // Creating start btn\n    const start = document.createElement('BUTTON');\n    start.innerText = \"Start\";\n    start.onclick = () => {\n        if(selectedCRD !== \"\") {\n            //Create the CRD object\n            // TODO : fill studentID and the name correctly according to the assigned one\n            k8sApi_crd.createNamespacedCustomObject(\"instance.crown.team.com\", \"v1\", \"default\", \"labinstances\", {\n                apiVersion: \"instance.crown.team.com/v1\",\n                kind: \"LabInstance\",\n                metadata: {\n                    \"name\": \"web-applications-course-instance\",\n                },\n                spec: {\n                    labTemplateName: selectedCRD,\n                    studentId: \"123456\"\n                }\n            })\n                .then(\n                    (response) => {\n                        status_content.innerText = \"RUNNING \" + selectedCRD;\n                    },\n                    (err) => {\n                        alert('Error running CRD, check console');\n                        console.log('Error!: ' + err);\n                    }\n                );\n        } else {\n            alert(\"No CRD selected, please choose one\");\n        }\n\n    };\n    document.body.append(start);\n\n    // Creating stop btn\n    const stop = document.createElement('BUTTON');\n    stop.innerText = \"Stop\";\n    stop.onclick = () => {\n        // Dumb check\n        if(status_content.textContent.includes(\"RUNNING\")) {\n            k8sApi_crd.deleteNamespacedCustomObject(\"instance.crown.team.com\", \"v1\", \"default\", \"labinstances\", \"web-applications-course-instance\", {})\n                .then(\n                    () => {\n                        status_content.innerText = \"No Running CRDs\";\n                    },\n                    (err) => {\n                        alert('Error deleting CRD, check console');\n                        console.log('Error!: ' + err);\n                    }\n                );\n        } else {\n            alert(\"There's nothing to stop\");\n        }\n    };\n    document.body.append(stop);\n\n    // Creating connect btn\n    // TODO : add window.open(IP:PORT), where the service is reachable\n    const connect = document.createElement('BUTTON');\n    connect.innerText = \"Connect\";\n    connect.onclick = () => {\n        if(status_content.textContent.includes(\"RUNNING\")) {\n            window.open(\"https://google.it\");\n        } else {\n            alert('No running CRD to connect to');\n        }\n    };\n    document.body.append(connect);\n\n    // Loading config from cluster authenticating via token\n    const kc = new Config(\"APISERVER_URL\", user.token, user.token_type);\n    // Base api, not used right now since we need to work with CRDs\n    //const k8sApi_base = kc.makeApiClient(CoreV1Api);\n    // CRD api\n    const k8sApi_crd = kc.makeApiClient(CustomObjectsApi);\n\n    // Install watcher for all Cluster Events\n    watch(kc, '/api/v1/watch/events', {},\n        (type, object) => {\n            const node = document.createTextNode(\"NEW EVENT:\" + type + object.message + \"\\n\");\n            textarea.appendChild(node);\n        },\n        (e) => {\n            console.log('Stream ended', e);\n        });\n\n    // Retrieving CRD labtemplates\n    // TODO : once updated courses, repeat this operation for each course\n    k8sApi_crd.listClusterCustomObject(\"template.crown.team.com\", \"v1\", \"labtemplates\")\n        .then((nodesResponse) => {\n            const nodes = nodesResponse.body.items;\n            const ul = document.createElement('ul');\n            for (const idx in nodes) {\n                const li = document.createElement('li');\n                const btn = document.createElement(\"BUTTON\");\n                btn.innerText = nodes[idx].metadata.name;\n                btn.onclick = () => {\n                    selectedCRD = nodes[idx].metadata.name;\n                    course_selected_content.innerText = nodes[idx].metadata.name;\n                };\n                li.appendChild(btn);\n                ul.append(li);\n            }\n            document.body.append(ul);\n        })\n        .catch((error) => {\n            alert('Error retrieving nodes, check console');\n            console.error('Error retrieving nodes', error.body ? error.body : error);\n        });\n\n}\n\n/*k8sApi.listCustomResourceDefinition()\n    .then(function(nodesResponse) {\n        const header = document.createElement('h2');\n        header.innerText = 'Custom Objects';\n        document.body.append(header);\n\n        const nodes = nodesResponse.body.items;\n        const ul = document.createElement('ul');\n        for(const idx in nodes) {\n            const li = document.createElement('li');\n            li.innerText = nodes[idx].metadata.name;\n            ul.append(li);\n        }\n        document.body.append(ul);\n    })\n    .catch(function(error) {\n        console.error('Error retrieving nodes', error.body ? error.body : error);\n    });\n    */\n\n/*\nk8sApi.listNode()\n    .then(function(nodesResponse) {\n        const header = document.createElement('h2');\n        header.innerText = 'Cluster Nodes';\n        document.body.append(header);\n\n        const nodes = nodesResponse.body.items;\n        const ul = document.createElement('ul');\n        for(const idx in nodes) {\n            const li = document.createElement('li');\n            li.innerText = nodes[idx].metadata.name;\n            ul.append(li);\n        }\n        document.body.append(ul);\n    })\n    .catch(function(error) {\n        console.error('Error retrieving nodes', error.body ? error.body : error);\n    });\n\nk8sApi.listPodForAllNamespaces()\n    .then(function(nodesResponse) {\n        const header = document.createElement('h2');\n        header.innerText = 'Cluster Pods';\n        document.body.append(header);\n\n        const nodes = nodesResponse.body.items;\n        const ul = document.createElement('ul');\n        for(const idx in nodes) {\n            const li = document.createElement('li');\n            li.innerText = nodes[idx].metadata.name;\n            ul.append(li);\n        }\n        document.body.append(ul);\n    })\n    .catch(function(error) {\n        console.error('Error retrieving nodes', error.body ? error.body : error);\n    });\n*/\n"]},"metadata":{},"sourceType":"module"}