{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\n\n\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\n\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/fbjs/lib/emptyFunction.js"],"names":["makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;;AASA,SAASA,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,SAAO,YAAY;AACjB,WAAOA,GAAP;AACD,GAFD;AAGD;AAED;;;;;;;AAKA,IAAIC,aAAa,GAAG,SAASA,aAAT,GAAyB,CAAE,CAA/C;;AAEAA,aAAa,CAACC,WAAd,GAA4BH,iBAA5B;AACAE,aAAa,CAACE,gBAAd,GAAiCJ,iBAAiB,CAAC,KAAD,CAAlD;AACAE,aAAa,CAACG,eAAd,GAAgCL,iBAAiB,CAAC,IAAD,CAAjD;AACAE,aAAa,CAACI,eAAd,GAAgCN,iBAAiB,CAAC,IAAD,CAAjD;;AACAE,aAAa,CAACK,eAAd,GAAgC,YAAY;AAC1C,SAAO,IAAP;AACD,CAFD;;AAGAL,aAAa,CAACM,mBAAd,GAAoC,UAAUP,GAAV,EAAe;AACjD,SAAOA,GAAP;AACD,CAFD;;AAIAQ,MAAM,CAACC,OAAP,GAAiBR,aAAjB","sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;"]},"metadata":{},"sourceType":"script"}