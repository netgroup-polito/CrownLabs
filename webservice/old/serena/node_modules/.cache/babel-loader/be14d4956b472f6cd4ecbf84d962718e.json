{"ast":null,"code":"/*!\n * algorithms/sha.js - Cryptographic Secure Hash Algorithms, versions 1 and 2\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    helpers = require(\"./helpers.js\");\n\nfunction hashDigestFN(hash) {\n  var md = hash.replace(\"SHA-\", \"SHA\").toLowerCase();\n  var alg = {\n    name: hash\n  }; // ### Fallback Implementation -- uses forge\n\n  var fallback = function (pdata\n  /* props */\n  ) {\n    var digest = forge.md[md].create();\n    digest.update(pdata);\n    digest = digest.digest().native();\n    return Promise.resolve(digest);\n  }; // ### WebCryptoAPI Implementation\n\n\n  var webcrypto = function (pdata\n  /* props */\n  ) {\n    var promise;\n    promise = helpers.subtleCrypto.digest(alg, pdata);\n    promise = promise.then(function (result) {\n      result = Buffer.from(result);\n      return result;\n    });\n    return promise;\n  }; // ### nodejs Implementation\n\n\n  var nodejs = function (pdata\n  /* props */\n  ) {\n    var digest = helpers.nodeCrypto.createHash(md);\n    digest.update(pdata);\n    return digest.digest();\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n} // Public API\n// * [name].digest\n\n\nvar sha = {};\n[\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"].forEach(function (name) {\n  sha[name] = {\n    digest: hashDigestFN(name)\n  };\n});\nmodule.exports = sha;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/algorithms/sha.js"],"names":["forge","require","helpers","hashDigestFN","hash","md","replace","toLowerCase","alg","name","fallback","pdata","digest","create","update","native","Promise","resolve","webcrypto","promise","subtleCrypto","then","result","Buffer","from","nodejs","nodeCrypto","createHash","setupFallback","sha","forEach","module","exports"],"mappings":"AAAA;;;;;AAKA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAAnB;AAAA,IACIC,OAAO,GAAGD,OAAO,CAAC,cAAD,CADrB;;AAGA,SAASE,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAIC,EAAE,GAAGD,IAAI,CAACE,OAAL,CAAa,MAAb,EAAqB,KAArB,EAA4BC,WAA5B,EAAT;AAEA,MAAIC,GAAG,GAAG;AACRC,IAAAA,IAAI,EAAEL;AADE,GAAV,CAH0B,CAO1B;;AACA,MAAIM,QAAQ,GAAG,UAASC;AAAM;AAAf,IAA4B;AACzC,QAAIC,MAAM,GAAGZ,KAAK,CAACK,EAAN,CAASA,EAAT,EAAaQ,MAAb,EAAb;AACAD,IAAAA,MAAM,CAACE,MAAP,CAAcH,KAAd;AACAC,IAAAA,MAAM,GAAGA,MAAM,CAACA,MAAP,GAAgBG,MAAhB,EAAT;AAEA,WAAOC,OAAO,CAACC,OAAR,CAAgBL,MAAhB,CAAP;AACD,GAND,CAR0B,CAgB1B;;;AACA,MAAIM,SAAS,GAAG,UAASP;AAAM;AAAf,IAA4B;AAC1C,QAAIQ,OAAJ;AACAA,IAAAA,OAAO,GAAGjB,OAAO,CAACkB,YAAR,CAAqBR,MAArB,CAA4BJ,GAA5B,EAAiCG,KAAjC,CAAV;AACAQ,IAAAA,OAAO,GAAGA,OAAO,CAACE,IAAR,CAAa,UAASC,MAAT,EAAiB;AACtCA,MAAAA,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAAT;AACA,aAAOA,MAAP;AACD,KAHS,CAAV;AAIA,WAAOH,OAAP;AACD,GARD,CAjB0B,CA2B1B;;;AACA,MAAIM,MAAM,GAAG,UAASd;AAAM;AAAf,IAA4B;AACvC,QAAIC,MAAM,GAAGV,OAAO,CAACwB,UAAR,CAAmBC,UAAnB,CAA8BtB,EAA9B,CAAb;AACAO,IAAAA,MAAM,CAACE,MAAP,CAAcH,KAAd;AACA,WAAOC,MAAM,CAACA,MAAP,EAAP;AACD,GAJD;;AAMA,SAAOV,OAAO,CAAC0B,aAAR,CAAsBH,MAAtB,EAA8BP,SAA9B,EAAyCR,QAAzC,CAAP;AACD,C,CAED;AACA;;;AACA,IAAImB,GAAG,GAAG,EAAV;AACA,CACE,OADF,EAEE,SAFF,EAGE,SAHF,EAIE,SAJF,EAKEC,OALF,CAKU,UAASrB,IAAT,EAAe;AACvBoB,EAAAA,GAAG,CAACpB,IAAD,CAAH,GAAY;AACVG,IAAAA,MAAM,EAAET,YAAY,CAACM,IAAD;AADV,GAAZ;AAGD,CATD;AAWAsB,MAAM,CAACC,OAAP,GAAiBH,GAAjB","sourcesContent":["/*!\n * algorithms/sha.js - Cryptographic Secure Hash Algorithms, versions 1 and 2\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    helpers = require(\"./helpers.js\");\n\nfunction hashDigestFN(hash) {\n  var md = hash.replace(\"SHA-\", \"SHA\").toLowerCase();\n\n  var alg = {\n    name: hash\n  };\n\n  // ### Fallback Implementation -- uses forge\n  var fallback = function(pdata /* props */) {\n    var digest = forge.md[md].create();\n    digest.update(pdata);\n    digest = digest.digest().native();\n\n    return Promise.resolve(digest);\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto = function(pdata /* props */) {\n    var promise;\n    promise = helpers.subtleCrypto.digest(alg, pdata);\n    promise = promise.then(function(result) {\n      result = Buffer.from(result);\n      return result;\n    });\n    return promise;\n  };\n\n  // ### nodejs Implementation\n  var nodejs = function(pdata /* props */) {\n    var digest = helpers.nodeCrypto.createHash(md);\n    digest.update(pdata);\n    return digest.digest();\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\n// Public API\n// * [name].digest\nvar sha = {};\n[\n  \"SHA-1\",\n  \"SHA-256\",\n  \"SHA-384\",\n  \"SHA-512\"\n].forEach(function(name) {\n  sha[name] = {\n    digest: hashDigestFN(name)\n  };\n});\n\nmodule.exports = sha;\n"]},"metadata":{},"sourceType":"script"}