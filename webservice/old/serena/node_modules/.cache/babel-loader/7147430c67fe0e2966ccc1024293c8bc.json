{"ast":null,"code":"'use strict';\n\nvar inherits = require('inherits');\n\nvar Legacy = require('./legacy');\n\nvar Base = require('cipher-base');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar md5 = require('create-hash/md5');\n\nvar RIPEMD160 = require('ripemd160');\n\nvar sha = require('sha.js');\n\nvar ZEROS = Buffer.alloc(128);\n\nfunction Hmac(alg, key) {\n  Base.call(this, 'digest');\n\n  if (typeof key === 'string') {\n    key = Buffer.from(key);\n  }\n\n  var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;\n  this._alg = alg;\n  this._key = key;\n\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg);\n    key = hash.update(key).digest();\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize);\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize);\n  var opad = this._opad = Buffer.allocUnsafe(blocksize);\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36;\n    opad[i] = key[i] ^ 0x5C;\n  }\n\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg);\n\n  this._hash.update(ipad);\n}\n\ninherits(Hmac, Base);\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data);\n};\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest();\n\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg);\n  return hash.update(this._opad).update(h).digest();\n};\n\nmodule.exports = function createHmac(alg, key) {\n  alg = alg.toLowerCase();\n\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key);\n  }\n\n  if (alg === 'md5') {\n    return new Legacy(md5, key);\n  }\n\n  return new Hmac(alg, key);\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/create-hmac/browser.js"],"names":["inherits","require","Legacy","Base","Buffer","md5","RIPEMD160","sha","ZEROS","alloc","Hmac","alg","key","call","from","blocksize","_alg","_key","length","hash","update","digest","concat","ipad","_ipad","allocUnsafe","opad","_opad","i","_hash","prototype","_update","data","_final","h","module","exports","createHmac","toLowerCase"],"mappings":"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","sourcesContent":["'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n"]},"metadata":{},"sourceType":"script"}