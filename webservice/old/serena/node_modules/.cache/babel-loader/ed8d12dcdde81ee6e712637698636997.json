{"ast":null,"code":"/*!\n * algorithms/index.js - Cryptographic Algorithms Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\"; // setup implementations\n\nvar implementations = [require(\"./aes-cbc-hmac-sha2.js\"), require(\"./aes-gcm.js\"), require(\"./aes-kw.js\"), require(\"./concat.js\"), require(\"./dir.js\"), require(\"./ecdh.js\"), require(\"./ecdsa.js\"), require(\"./hkdf.js\"), require(\"./hmac.js\"), require(\"./pbes2.js\"), require(\"./rsaes.js\"), require(\"./rsassa.js\"), require(\"./sha.js\")];\nvar ALGS_DIGEST = {};\nvar ALGS_DERIVE = {};\nvar ALGS_SIGN = {},\n    ALGS_VRFY = {};\nvar ALGS_ENC = {},\n    ALGS_DEC = {};\nimplementations.forEach(function (mod) {\n  Object.keys(mod).forEach(function (alg) {\n    var op = mod[alg];\n\n    if (\"function\" === typeof op.encrypt) {\n      ALGS_ENC[alg] = op.encrypt;\n    }\n\n    if (\"function\" === typeof op.decrypt) {\n      ALGS_DEC[alg] = op.decrypt;\n    }\n\n    if (\"function\" === typeof op.sign) {\n      ALGS_SIGN[alg] = op.sign;\n    }\n\n    if (\"function\" === typeof op.verify) {\n      ALGS_VRFY[alg] = op.verify;\n    }\n\n    if (\"function\" === typeof op.digest) {\n      ALGS_DIGEST[alg] = op.digest;\n    }\n\n    if (\"function\" === typeof op.derive) {\n      ALGS_DERIVE[alg] = op.derive;\n    }\n  });\n}); // public API\n\nexports.digest = function (alg, data, props) {\n  var op = ALGS_DIGEST[alg];\n\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(data, props);\n};\n\nexports.derive = function (alg, key, props) {\n  var op = ALGS_DERIVE[alg];\n\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, props);\n};\n\nexports.sign = function (alg, key, pdata, props) {\n  var op = ALGS_SIGN[alg];\n\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, pdata, props || {});\n};\n\nexports.verify = function (alg, key, pdata, mac, props) {\n  var op = ALGS_VRFY[alg];\n\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, pdata, mac, props || {});\n};\n\nexports.encrypt = function (alg, key, pdata, props) {\n  var op = ALGS_ENC[alg];\n\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, pdata, props || {});\n};\n\nexports.decrypt = function (alg, key, cdata, props) {\n  var op = ALGS_DEC[alg];\n\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, cdata, props || {});\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/algorithms/index.js"],"names":["implementations","require","ALGS_DIGEST","ALGS_DERIVE","ALGS_SIGN","ALGS_VRFY","ALGS_ENC","ALGS_DEC","forEach","mod","Object","keys","alg","op","encrypt","decrypt","sign","verify","digest","derive","exports","data","props","Promise","reject","Error","key","pdata","mac","cdata"],"mappings":"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","sourcesContent":["/*!\n * algorithms/index.js - Cryptographic Algorithms Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\n// setup implementations\nvar implementations = [\n  require(\"./aes-cbc-hmac-sha2.js\"),\n  require(\"./aes-gcm.js\"),\n  require(\"./aes-kw.js\"),\n  require(\"./concat.js\"),\n  require(\"./dir.js\"),\n  require(\"./ecdh.js\"),\n  require(\"./ecdsa.js\"),\n  require(\"./hkdf.js\"),\n  require(\"./hmac.js\"),\n  require(\"./pbes2.js\"),\n  require(\"./rsaes.js\"),\n  require(\"./rsassa.js\"),\n  require(\"./sha.js\")\n];\n\nvar ALGS_DIGEST = {};\nvar ALGS_DERIVE = {};\nvar ALGS_SIGN = {},\n    ALGS_VRFY = {};\nvar ALGS_ENC = {},\n    ALGS_DEC = {};\n\nimplementations.forEach(function(mod) {\n  Object.keys(mod).forEach(function(alg) {\n    var op = mod[alg];\n\n    if (\"function\" === typeof op.encrypt) {\n      ALGS_ENC[alg] = op.encrypt;\n    }\n    if (\"function\" === typeof op.decrypt) {\n      ALGS_DEC[alg] = op.decrypt;\n    }\n    if (\"function\" === typeof op.sign) {\n      ALGS_SIGN[alg] = op.sign;\n    }\n    if (\"function\" === typeof op.verify) {\n      ALGS_VRFY[alg] = op.verify;\n    }\n    if (\"function\" === typeof op.digest) {\n      ALGS_DIGEST[alg] = op.digest;\n    }\n    if (\"function\" === typeof op.derive) {\n      ALGS_DERIVE[alg] = op.derive;\n    }\n  });\n});\n\n// public API\nexports.digest = function(alg, data, props) {\n  var op = ALGS_DIGEST[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(data, props);\n};\n\nexports.derive = function(alg, key, props) {\n  var op = ALGS_DERIVE[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, props);\n};\n\nexports.sign = function(alg, key, pdata, props) {\n  var op = ALGS_SIGN[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, pdata, props || {});\n};\n\nexports.verify = function(alg, key, pdata, mac, props) {\n  var op = ALGS_VRFY[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, pdata, mac, props || {});\n};\n\nexports.encrypt = function(alg, key, pdata, props) {\n  var op = ALGS_ENC[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, pdata, props || {});\n};\n\nexports.decrypt = function(alg, key, cdata, props) {\n  var op = ALGS_DEC[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, cdata, props || {});\n};\n"]},"metadata":{},"sourceType":"script"}