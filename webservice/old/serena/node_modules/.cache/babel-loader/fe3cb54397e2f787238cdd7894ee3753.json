{"ast":null,"code":"'use strict';\n\nvar jsonSafeStringify = require('json-stringify-safe');\n\nvar crypto = require('crypto');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar defer = typeof setImmediate === 'undefined' ? process.nextTick : setImmediate;\n\nfunction paramsHaveRequestBody(params) {\n  return params.body || params.requestBodyStream || params.json && typeof params.json !== 'boolean' || params.multipart;\n}\n\nfunction safeStringify(obj, replacer) {\n  var ret;\n\n  try {\n    ret = JSON.stringify(obj, replacer);\n  } catch (e) {\n    ret = jsonSafeStringify(obj, replacer);\n  }\n\n  return ret;\n}\n\nfunction md5(str) {\n  return crypto.createHash('md5').update(str).digest('hex');\n}\n\nfunction isReadStream(rs) {\n  return rs.readable && rs.path && rs.mode;\n}\n\nfunction toBase64(str) {\n  return Buffer.from(str || '', 'utf8').toString('base64');\n}\n\nfunction copy(obj) {\n  var o = {};\n  Object.keys(obj).forEach(function (i) {\n    o[i] = obj[i];\n  });\n  return o;\n}\n\nfunction version() {\n  var numbers = process.version.replace('v', '').split('.');\n  return {\n    major: parseInt(numbers[0], 10),\n    minor: parseInt(numbers[1], 10),\n    patch: parseInt(numbers[2], 10)\n  };\n}\n\nexports.paramsHaveRequestBody = paramsHaveRequestBody;\nexports.safeStringify = safeStringify;\nexports.md5 = md5;\nexports.isReadStream = isReadStream;\nexports.toBase64 = toBase64;\nexports.copy = copy;\nexports.version = version;\nexports.defer = defer;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/request/lib/helpers.js"],"names":["jsonSafeStringify","require","crypto","Buffer","defer","setImmediate","process","nextTick","paramsHaveRequestBody","params","body","requestBodyStream","json","multipart","safeStringify","obj","replacer","ret","JSON","stringify","e","md5","str","createHash","update","digest","isReadStream","rs","readable","path","mode","toBase64","from","toString","copy","o","Object","keys","forEach","i","version","numbers","replace","split","major","parseInt","minor","patch","exports"],"mappings":"AAAA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,MAApC;;AAEA,IAAIC,KAAK,GAAG,OAAOC,YAAP,KAAwB,WAAxB,GACRC,OAAO,CAACC,QADA,GAERF,YAFJ;;AAIA,SAASG,qBAAT,CAAgCC,MAAhC,EAAwC;AACtC,SACEA,MAAM,CAACC,IAAP,IACAD,MAAM,CAACE,iBADP,IAECF,MAAM,CAACG,IAAP,IAAe,OAAOH,MAAM,CAACG,IAAd,KAAuB,SAFvC,IAGAH,MAAM,CAACI,SAJT;AAMD;;AAED,SAASC,aAAT,CAAwBC,GAAxB,EAA6BC,QAA7B,EAAuC;AACrC,MAAIC,GAAJ;;AACA,MAAI;AACFA,IAAAA,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAeJ,GAAf,EAAoBC,QAApB,CAAN;AACD,GAFD,CAEE,OAAOI,CAAP,EAAU;AACVH,IAAAA,GAAG,GAAGjB,iBAAiB,CAACe,GAAD,EAAMC,QAAN,CAAvB;AACD;;AACD,SAAOC,GAAP;AACD;;AAED,SAASI,GAAT,CAAcC,GAAd,EAAmB;AACjB,SAAOpB,MAAM,CAACqB,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgCF,GAAhC,EAAqCG,MAArC,CAA4C,KAA5C,CAAP;AACD;;AAED,SAASC,YAAT,CAAuBC,EAAvB,EAA2B;AACzB,SAAOA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACE,IAAlB,IAA0BF,EAAE,CAACG,IAApC;AACD;;AAED,SAASC,QAAT,CAAmBT,GAAnB,EAAwB;AACtB,SAAOnB,MAAM,CAAC6B,IAAP,CAAYV,GAAG,IAAI,EAAnB,EAAuB,MAAvB,EAA+BW,QAA/B,CAAwC,QAAxC,CAAP;AACD;;AAED,SAASC,IAAT,CAAenB,GAAf,EAAoB;AAClB,MAAIoB,CAAC,GAAG,EAAR;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYtB,GAAZ,EAAiBuB,OAAjB,CAAyB,UAAUC,CAAV,EAAa;AACpCJ,IAAAA,CAAC,CAACI,CAAD,CAAD,GAAOxB,GAAG,CAACwB,CAAD,CAAV;AACD,GAFD;AAGA,SAAOJ,CAAP;AACD;;AAED,SAASK,OAAT,GAAoB;AAClB,MAAIC,OAAO,GAAGnC,OAAO,CAACkC,OAAR,CAAgBE,OAAhB,CAAwB,GAAxB,EAA6B,EAA7B,EAAiCC,KAAjC,CAAuC,GAAvC,CAAd;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEC,QAAQ,CAACJ,OAAO,CAAC,CAAD,CAAR,EAAa,EAAb,CADV;AAELK,IAAAA,KAAK,EAAED,QAAQ,CAACJ,OAAO,CAAC,CAAD,CAAR,EAAa,EAAb,CAFV;AAGLM,IAAAA,KAAK,EAAEF,QAAQ,CAACJ,OAAO,CAAC,CAAD,CAAR,EAAa,EAAb;AAHV,GAAP;AAKD;;AAEDO,OAAO,CAACxC,qBAAR,GAAgCA,qBAAhC;AACAwC,OAAO,CAAClC,aAAR,GAAwBA,aAAxB;AACAkC,OAAO,CAAC3B,GAAR,GAAcA,GAAd;AACA2B,OAAO,CAACtB,YAAR,GAAuBA,YAAvB;AACAsB,OAAO,CAACjB,QAAR,GAAmBA,QAAnB;AACAiB,OAAO,CAACd,IAAR,GAAeA,IAAf;AACAc,OAAO,CAACR,OAAR,GAAkBA,OAAlB;AACAQ,OAAO,CAAC5C,KAAR,GAAgBA,KAAhB","sourcesContent":["'use strict'\n\nvar jsonSafeStringify = require('json-stringify-safe')\nvar crypto = require('crypto')\nvar Buffer = require('safe-buffer').Buffer\n\nvar defer = typeof setImmediate === 'undefined'\n  ? process.nextTick\n  : setImmediate\n\nfunction paramsHaveRequestBody (params) {\n  return (\n    params.body ||\n    params.requestBodyStream ||\n    (params.json && typeof params.json !== 'boolean') ||\n    params.multipart\n  )\n}\n\nfunction safeStringify (obj, replacer) {\n  var ret\n  try {\n    ret = JSON.stringify(obj, replacer)\n  } catch (e) {\n    ret = jsonSafeStringify(obj, replacer)\n  }\n  return ret\n}\n\nfunction md5 (str) {\n  return crypto.createHash('md5').update(str).digest('hex')\n}\n\nfunction isReadStream (rs) {\n  return rs.readable && rs.path && rs.mode\n}\n\nfunction toBase64 (str) {\n  return Buffer.from(str || '', 'utf8').toString('base64')\n}\n\nfunction copy (obj) {\n  var o = {}\n  Object.keys(obj).forEach(function (i) {\n    o[i] = obj[i]\n  })\n  return o\n}\n\nfunction version () {\n  var numbers = process.version.replace('v', '').split('.')\n  return {\n    major: parseInt(numbers[0], 10),\n    minor: parseInt(numbers[1], 10),\n    patch: parseInt(numbers[2], 10)\n  }\n}\n\nexports.paramsHaveRequestBody = paramsHaveRequestBody\nexports.safeStringify = safeStringify\nexports.md5 = md5\nexports.isReadStream = isReadStream\nexports.toBase64 = toBase64\nexports.copy = copy\nexports.version = version\nexports.defer = defer\n"]},"metadata":{},"sourceType":"script"}