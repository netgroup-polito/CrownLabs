{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\n\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js'); // Backwards-compat with node 0.4.x\n\nStream.Stream = Stream; // old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function (dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain); // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n    dest.end();\n  }\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n    if (typeof dest.destroy === 'function') dest.destroy();\n  } // don't leave dangling pipes when there are errors.\n\n\n  function onerror(er) {\n    cleanup();\n\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror); // remove all the event listeners that were added.\n\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n  dest.on('close', cleanup);\n  dest.emit('pipe', source); // Allow for unix-like usage: A.pipe(B).pipe(C)\n\n  return dest;\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/stream-browserify/index.js"],"names":["module","exports","Stream","EE","require","EventEmitter","inherits","Readable","Writable","Duplex","Transform","PassThrough","call","prototype","pipe","dest","options","source","ondata","chunk","writable","write","pause","on","ondrain","readable","resume","_isStdio","end","onend","onclose","didOnEnd","destroy","onerror","er","cleanup","listenerCount","removeListener","emit"],"mappings":"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","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n"]},"metadata":{},"sourceType":"script"}