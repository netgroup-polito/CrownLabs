{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\n\nconst http = require('http');\n\nconst https = require('https');\n\nconst PassThrough = require('stream').PassThrough;\n\nconst Transform = require('stream').Transform;\n\nconst urlLib = require('url');\n\nconst fs = require('fs');\n\nconst querystring = require('querystring');\n\nconst CacheableRequest = require('cacheable-request');\n\nconst duplexer3 = require('duplexer3');\n\nconst intoStream = require('into-stream');\n\nconst is = require('@sindresorhus/is');\n\nconst getStream = require('get-stream');\n\nconst timedOut = require('timed-out');\n\nconst urlParseLax = require('url-parse-lax');\n\nconst urlToOptions = require('url-to-options');\n\nconst lowercaseKeys = require('lowercase-keys');\n\nconst decompressResponse = require('decompress-response');\n\nconst mimicResponse = require('mimic-response');\n\nconst isRetryAllowed = require('is-retry-allowed');\n\nconst isURL = require('isurl');\n\nconst PCancelable = require('p-cancelable');\n\nconst pTimeout = require('p-timeout');\n\nconst pify = require('pify');\n\nconst Buffer = require('safe-buffer').Buffer;\n\nconst pkg = require('./package.json');\n\nconst errors = require('./errors');\n\nconst getMethodRedirectCodes = new Set([300, 301, 302, 303, 304, 305, 307, 308]);\nconst allMethodRedirectCodes = new Set([300, 303, 307, 308]);\n\nconst isFormData = body => is.nodeStream(body) && is.function(body.getBoundary);\n\nconst getBodySize = opts => {\n  const body = opts.body;\n\n  if (opts.headers['content-length']) {\n    return Number(opts.headers['content-length']);\n  }\n\n  if (!body && !opts.stream) {\n    return 0;\n  }\n\n  if (is.string(body)) {\n    return Buffer.byteLength(body);\n  }\n\n  if (isFormData(body)) {\n    return pify(body.getLength.bind(body))();\n  }\n\n  if (body instanceof fs.ReadStream) {\n    return pify(fs.stat)(body.path).then(stat => stat.size);\n  }\n\n  if (is.nodeStream(body) && is.buffer(body._buffer)) {\n    return body._buffer.length;\n  }\n\n  return null;\n};\n\nfunction requestAsEventEmitter(opts) {\n  opts = opts || {};\n  const ee = new EventEmitter();\n  const requestUrl = opts.href || urlLib.resolve(urlLib.format(opts), opts.path);\n  const redirects = [];\n  const agents = is.object(opts.agent) ? opts.agent : null;\n  let retryCount = 0;\n  let redirectUrl;\n  let uploadBodySize;\n  let uploaded = 0;\n\n  const get = opts => {\n    if (opts.protocol !== 'http:' && opts.protocol !== 'https:') {\n      ee.emit('error', new got.UnsupportedProtocolError(opts));\n      return;\n    }\n\n    let fn = opts.protocol === 'https:' ? https : http;\n\n    if (agents) {\n      const protocolName = opts.protocol === 'https:' ? 'https' : 'http';\n      opts.agent = agents[protocolName] || opts.agent;\n    }\n\n    if (opts.useElectronNet && process.versions.electron) {\n      const electron = require('electron');\n\n      fn = electron.net || electron.remote.net;\n    }\n\n    let progressInterval;\n    const cacheableRequest = new CacheableRequest(fn.request, opts.cache);\n    const cacheReq = cacheableRequest(opts, res => {\n      clearInterval(progressInterval);\n      ee.emit('uploadProgress', {\n        percent: 1,\n        transferred: uploaded,\n        total: uploadBodySize\n      });\n      const statusCode = res.statusCode;\n      res.url = redirectUrl || requestUrl;\n      res.requestUrl = requestUrl;\n      const followRedirect = opts.followRedirect && 'location' in res.headers;\n      const redirectGet = followRedirect && getMethodRedirectCodes.has(statusCode);\n      const redirectAll = followRedirect && allMethodRedirectCodes.has(statusCode);\n\n      if (redirectAll || redirectGet && (opts.method === 'GET' || opts.method === 'HEAD')) {\n        res.resume();\n\n        if (statusCode === 303) {\n          // Server responded with \"see other\", indicating that the resource exists at another location,\n          // and the client should request it from that location via GET or HEAD.\n          opts.method = 'GET';\n        }\n\n        if (redirects.length >= 10) {\n          ee.emit('error', new got.MaxRedirectsError(statusCode, redirects, opts), null, res);\n          return;\n        }\n\n        const bufferString = Buffer.from(res.headers.location, 'binary').toString();\n        redirectUrl = urlLib.resolve(urlLib.format(opts), bufferString);\n        redirects.push(redirectUrl);\n        const redirectOpts = Object.assign({}, opts, urlLib.parse(redirectUrl));\n        ee.emit('redirect', res, redirectOpts);\n        get(redirectOpts);\n        return;\n      }\n\n      setImmediate(() => {\n        try {\n          getResponse(res, opts, ee, redirects);\n        } catch (e) {\n          ee.emit('error', e);\n        }\n      });\n    });\n    cacheReq.on('error', err => {\n      if (err instanceof CacheableRequest.RequestError) {\n        ee.emit('error', new got.RequestError(err, opts));\n      } else {\n        ee.emit('error', new got.CacheError(err, opts));\n      }\n    });\n    cacheReq.once('request', req => {\n      let aborted = false;\n      req.once('abort', _ => {\n        aborted = true;\n      });\n      req.once('error', err => {\n        clearInterval(progressInterval);\n\n        if (aborted) {\n          return;\n        }\n\n        const backoff = opts.retries(++retryCount, err);\n\n        if (backoff) {\n          setTimeout(get, backoff, opts);\n          return;\n        }\n\n        ee.emit('error', new got.RequestError(err, opts));\n      });\n      ee.once('request', req => {\n        ee.emit('uploadProgress', {\n          percent: 0,\n          transferred: 0,\n          total: uploadBodySize\n        });\n        const socket = req.connection;\n\n        if (socket) {\n          // `._connecting` was the old property which was made public in node v6.1.0\n          const isConnecting = socket.connecting === undefined ? socket._connecting : socket.connecting;\n\n          const onSocketConnect = () => {\n            const uploadEventFrequency = 150;\n            progressInterval = setInterval(() => {\n              if (socket.destroyed) {\n                clearInterval(progressInterval);\n                return;\n              }\n\n              const lastUploaded = uploaded;\n              const headersSize = req._header ? Buffer.byteLength(req._header) : 0;\n              uploaded = socket.bytesWritten - headersSize; // Prevent the known issue of `bytesWritten` being larger than body size\n\n              if (uploadBodySize && uploaded > uploadBodySize) {\n                uploaded = uploadBodySize;\n              } // Don't emit events with unchanged progress and\n              // prevent last event from being emitted, because\n              // it's emitted when `response` is emitted\n\n\n              if (uploaded === lastUploaded || uploaded === uploadBodySize) {\n                return;\n              }\n\n              ee.emit('uploadProgress', {\n                percent: uploadBodySize ? uploaded / uploadBodySize : 0,\n                transferred: uploaded,\n                total: uploadBodySize\n              });\n            }, uploadEventFrequency);\n          }; // Only subscribe to 'connect' event if we're actually connecting a new\n          // socket, otherwise if we're already connected (because this is a\n          // keep-alive connection) do not bother. This is important since we won't\n          // get a 'connect' event for an already connected socket.\n\n\n          if (isConnecting) {\n            socket.once('connect', onSocketConnect);\n          } else {\n            onSocketConnect();\n          }\n        }\n      });\n\n      if (opts.gotTimeout) {\n        clearInterval(progressInterval);\n        timedOut(req, opts.gotTimeout);\n      }\n\n      setImmediate(() => {\n        ee.emit('request', req);\n      });\n    });\n  };\n\n  setImmediate(() => {\n    Promise.resolve(getBodySize(opts)).then(size => {\n      uploadBodySize = size;\n\n      if (is.undefined(opts.headers['content-length']) && is.undefined(opts.headers['transfer-encoding']) && isFormData(opts.body)) {\n        opts.headers['content-length'] = size;\n      }\n\n      get(opts);\n    }).catch(err => {\n      ee.emit('error', err);\n    });\n  });\n  return ee;\n}\n\nfunction getResponse(res, opts, ee, redirects) {\n  const downloadBodySize = Number(res.headers['content-length']) || null;\n  let downloaded = 0;\n  const progressStream = new Transform({\n    transform(chunk, encoding, callback) {\n      downloaded += chunk.length;\n      const percent = downloadBodySize ? downloaded / downloadBodySize : 0; // Let flush() be responsible for emitting the last event\n\n      if (percent < 1) {\n        ee.emit('downloadProgress', {\n          percent,\n          transferred: downloaded,\n          total: downloadBodySize\n        });\n      }\n\n      callback(null, chunk);\n    },\n\n    flush(callback) {\n      ee.emit('downloadProgress', {\n        percent: 1,\n        transferred: downloaded,\n        total: downloadBodySize\n      });\n      callback();\n    }\n\n  });\n  mimicResponse(res, progressStream);\n  progressStream.redirectUrls = redirects;\n  const response = opts.decompress === true && is.function(decompressResponse) && opts.method !== 'HEAD' ? decompressResponse(progressStream) : progressStream;\n\n  if (!opts.decompress && ['gzip', 'deflate'].indexOf(res.headers['content-encoding']) !== -1) {\n    opts.encoding = null;\n  }\n\n  ee.emit('response', response);\n  ee.emit('downloadProgress', {\n    percent: 0,\n    transferred: 0,\n    total: downloadBodySize\n  });\n  res.pipe(progressStream);\n}\n\nfunction asPromise(opts) {\n  const timeoutFn = requestPromise => opts.gotTimeout && opts.gotTimeout.request ? pTimeout(requestPromise, opts.gotTimeout.request, new got.RequestError({\n    message: 'Request timed out',\n    code: 'ETIMEDOUT'\n  }, opts)) : requestPromise;\n\n  const proxy = new EventEmitter();\n  const cancelable = new PCancelable((resolve, reject, onCancel) => {\n    const ee = requestAsEventEmitter(opts);\n    let cancelOnRequest = false;\n    onCancel(() => {\n      cancelOnRequest = true;\n    });\n    ee.on('request', req => {\n      if (cancelOnRequest) {\n        req.abort();\n      }\n\n      onCancel(() => {\n        req.abort();\n      });\n\n      if (is.nodeStream(opts.body)) {\n        opts.body.pipe(req);\n        opts.body = undefined;\n        return;\n      }\n\n      req.end(opts.body);\n    });\n    ee.on('response', res => {\n      const stream = is.null(opts.encoding) ? getStream.buffer(res) : getStream(res, opts);\n      stream.catch(err => reject(new got.ReadError(err, opts))).then(data => {\n        const statusCode = res.statusCode;\n        const limitStatusCode = opts.followRedirect ? 299 : 399;\n        res.body = data;\n\n        if (opts.json && res.body) {\n          try {\n            res.body = JSON.parse(res.body);\n          } catch (err) {\n            if (statusCode >= 200 && statusCode < 300) {\n              throw new got.ParseError(err, statusCode, opts, data);\n            }\n          }\n        }\n\n        if (opts.throwHttpErrors && statusCode !== 304 && (statusCode < 200 || statusCode > limitStatusCode)) {\n          throw new got.HTTPError(statusCode, res.statusMessage, res.headers, opts);\n        }\n\n        resolve(res);\n      }).catch(err => {\n        Object.defineProperty(err, 'response', {\n          value: res\n        });\n        reject(err);\n      });\n    });\n    ee.once('error', reject);\n    ee.on('redirect', proxy.emit.bind(proxy, 'redirect'));\n    ee.on('uploadProgress', proxy.emit.bind(proxy, 'uploadProgress'));\n    ee.on('downloadProgress', proxy.emit.bind(proxy, 'downloadProgress'));\n  }); // Preserve backwards-compatibility\n  // TODO: Remove this in the next major version\n\n  Object.defineProperty(cancelable, 'canceled', {\n    get() {\n      return cancelable.isCanceled;\n    }\n\n  });\n  const promise = timeoutFn(cancelable);\n  promise.cancel = cancelable.cancel.bind(cancelable);\n\n  promise.on = (name, fn) => {\n    proxy.on(name, fn);\n    return promise;\n  };\n\n  return promise;\n}\n\nfunction asStream(opts) {\n  opts.stream = true;\n  const input = new PassThrough();\n  const output = new PassThrough();\n  const proxy = duplexer3(input, output);\n  let timeout;\n\n  if (opts.gotTimeout && opts.gotTimeout.request) {\n    timeout = setTimeout(() => {\n      proxy.emit('error', new got.RequestError({\n        message: 'Request timed out',\n        code: 'ETIMEDOUT'\n      }, opts));\n    }, opts.gotTimeout.request);\n  }\n\n  if (opts.json) {\n    throw new Error('Got can not be used as a stream when the `json` option is used');\n  }\n\n  if (opts.body) {\n    proxy.write = () => {\n      throw new Error('Got\\'s stream is not writable when the `body` option is used');\n    };\n  }\n\n  const ee = requestAsEventEmitter(opts);\n  ee.on('request', req => {\n    proxy.emit('request', req);\n\n    if (is.nodeStream(opts.body)) {\n      opts.body.pipe(req);\n      return;\n    }\n\n    if (opts.body) {\n      req.end(opts.body);\n      return;\n    }\n\n    if (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n      input.pipe(req);\n      return;\n    }\n\n    req.end();\n  });\n  ee.on('response', res => {\n    clearTimeout(timeout);\n    const statusCode = res.statusCode;\n    res.on('error', err => {\n      proxy.emit('error', new got.ReadError(err, opts));\n    });\n    res.pipe(output);\n\n    if (opts.throwHttpErrors && statusCode !== 304 && (statusCode < 200 || statusCode > 299)) {\n      proxy.emit('error', new got.HTTPError(statusCode, res.statusMessage, res.headers, opts), null, res);\n      return;\n    }\n\n    proxy.emit('response', res);\n  });\n  ee.on('error', proxy.emit.bind(proxy, 'error'));\n  ee.on('redirect', proxy.emit.bind(proxy, 'redirect'));\n  ee.on('uploadProgress', proxy.emit.bind(proxy, 'uploadProgress'));\n  ee.on('downloadProgress', proxy.emit.bind(proxy, 'downloadProgress'));\n  return proxy;\n}\n\nfunction normalizeArguments(url, opts) {\n  if (!is.string(url) && !is.object(url)) {\n    throw new TypeError(`Parameter \\`url\\` must be a string or object, not ${is(url)}`);\n  } else if (is.string(url)) {\n    url = url.replace(/^unix:/, 'http://$&');\n\n    try {\n      decodeURI(url);\n    } catch (err) {\n      throw new Error('Parameter `url` must contain valid UTF-8 character sequences');\n    }\n\n    url = urlParseLax(url);\n\n    if (url.auth) {\n      throw new Error('Basic authentication must be done with the `auth` option');\n    }\n  } else if (isURL.lenient(url)) {\n    url = urlToOptions(url);\n  }\n\n  opts = Object.assign({\n    path: '',\n    retries: 2,\n    cache: false,\n    decompress: true,\n    useElectronNet: false,\n    throwHttpErrors: true\n  }, url, {\n    protocol: url.protocol || 'http:' // Override both null/undefined with default protocol\n\n  }, opts);\n  const headers = lowercaseKeys(opts.headers);\n\n  for (const key of Object.keys(headers)) {\n    if (is.nullOrUndefined(headers[key])) {\n      delete headers[key];\n    }\n  }\n\n  opts.headers = Object.assign({\n    'user-agent': `${pkg.name}/${pkg.version} (https://github.com/sindresorhus/got)`\n  }, headers);\n\n  if (opts.decompress && is.undefined(opts.headers['accept-encoding'])) {\n    opts.headers['accept-encoding'] = 'gzip, deflate';\n  }\n\n  const query = opts.query;\n\n  if (query) {\n    if (!is.string(query)) {\n      opts.query = querystring.stringify(query);\n    }\n\n    opts.path = `${opts.path.split('?')[0]}?${opts.query}`;\n    delete opts.query;\n  }\n\n  if (opts.json && is.undefined(opts.headers.accept)) {\n    opts.headers.accept = 'application/json';\n  }\n\n  const body = opts.body;\n\n  if (is.nullOrUndefined(body)) {\n    opts.method = (opts.method || 'GET').toUpperCase();\n  } else {\n    const headers = opts.headers;\n\n    if (!is.nodeStream(body) && !is.string(body) && !is.buffer(body) && !(opts.form || opts.json)) {\n      throw new TypeError('The `body` option must be a stream.Readable, string, Buffer or plain Object');\n    }\n\n    const canBodyBeStringified = is.plainObject(body) || is.array(body);\n\n    if ((opts.form || opts.json) && !canBodyBeStringified) {\n      throw new TypeError('The `body` option must be a plain Object or Array when the `form` or `json` option is used');\n    }\n\n    if (isFormData(body)) {\n      // Special case for https://github.com/form-data/form-data\n      headers['content-type'] = headers['content-type'] || `multipart/form-data; boundary=${body.getBoundary()}`;\n    } else if (opts.form && canBodyBeStringified) {\n      headers['content-type'] = headers['content-type'] || 'application/x-www-form-urlencoded';\n      opts.body = querystring.stringify(body);\n    } else if (opts.json && canBodyBeStringified) {\n      headers['content-type'] = headers['content-type'] || 'application/json';\n      opts.body = JSON.stringify(body);\n    }\n\n    if (is.undefined(headers['content-length']) && is.undefined(headers['transfer-encoding']) && !is.nodeStream(body)) {\n      const length = is.string(opts.body) ? Buffer.byteLength(opts.body) : opts.body.length;\n      headers['content-length'] = length;\n    } // Convert buffer to stream to receive upload progress events\n    // see https://github.com/sindresorhus/got/pull/322\n\n\n    if (is.buffer(body)) {\n      opts.body = intoStream(body);\n      opts.body._buffer = body;\n    }\n\n    opts.method = (opts.method || 'POST').toUpperCase();\n  }\n\n  if (opts.hostname === 'unix') {\n    const matches = /(.+?):(.+)/.exec(opts.path);\n\n    if (matches) {\n      opts.socketPath = matches[1];\n      opts.path = matches[2];\n      opts.host = null;\n    }\n  }\n\n  if (!is.function(opts.retries)) {\n    const retries = opts.retries;\n\n    opts.retries = (iter, err) => {\n      if (iter > retries || !isRetryAllowed(err)) {\n        return 0;\n      }\n\n      const noise = Math.random() * 100;\n      return (1 << iter) * 1000 + noise;\n    };\n  }\n\n  if (is.undefined(opts.followRedirect)) {\n    opts.followRedirect = true;\n  }\n\n  if (opts.timeout) {\n    if (is.number(opts.timeout)) {\n      opts.gotTimeout = {\n        request: opts.timeout\n      };\n    } else {\n      opts.gotTimeout = opts.timeout;\n    }\n\n    delete opts.timeout;\n  }\n\n  return opts;\n}\n\nfunction got(url, opts) {\n  try {\n    const normalizedArgs = normalizeArguments(url, opts);\n\n    if (normalizedArgs.stream) {\n      return asStream(normalizedArgs);\n    }\n\n    return asPromise(normalizedArgs);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\ngot.stream = (url, opts) => asStream(normalizeArguments(url, opts));\n\nconst methods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\n\nfor (const method of methods) {\n  got[method] = (url, opts) => got(url, Object.assign({}, opts, {\n    method\n  }));\n\n  got.stream[method] = (url, opts) => got.stream(url, Object.assign({}, opts, {\n    method\n  }));\n}\n\nObject.assign(got, errors);\nmodule.exports = got;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/got/index.js"],"names":["EventEmitter","require","http","https","PassThrough","Transform","urlLib","fs","querystring","CacheableRequest","duplexer3","intoStream","is","getStream","timedOut","urlParseLax","urlToOptions","lowercaseKeys","decompressResponse","mimicResponse","isRetryAllowed","isURL","PCancelable","pTimeout","pify","Buffer","pkg","errors","getMethodRedirectCodes","Set","allMethodRedirectCodes","isFormData","body","nodeStream","function","getBoundary","getBodySize","opts","headers","Number","stream","string","byteLength","getLength","bind","ReadStream","stat","path","then","size","buffer","_buffer","length","requestAsEventEmitter","ee","requestUrl","href","resolve","format","redirects","agents","object","agent","retryCount","redirectUrl","uploadBodySize","uploaded","get","protocol","emit","got","UnsupportedProtocolError","fn","protocolName","useElectronNet","process","versions","electron","net","remote","progressInterval","cacheableRequest","request","cache","cacheReq","res","clearInterval","percent","transferred","total","statusCode","url","followRedirect","redirectGet","has","redirectAll","method","resume","MaxRedirectsError","bufferString","from","location","toString","push","redirectOpts","Object","assign","parse","setImmediate","getResponse","e","on","err","RequestError","CacheError","once","req","aborted","_","backoff","retries","setTimeout","socket","connection","isConnecting","connecting","undefined","_connecting","onSocketConnect","uploadEventFrequency","setInterval","destroyed","lastUploaded","headersSize","_header","bytesWritten","gotTimeout","Promise","catch","downloadBodySize","downloaded","progressStream","transform","chunk","encoding","callback","flush","redirectUrls","response","decompress","indexOf","pipe","asPromise","timeoutFn","requestPromise","message","code","proxy","cancelable","reject","onCancel","cancelOnRequest","abort","end","null","ReadError","data","limitStatusCode","json","JSON","ParseError","throwHttpErrors","HTTPError","statusMessage","defineProperty","value","isCanceled","promise","cancel","name","asStream","input","output","timeout","Error","write","clearTimeout","normalizeArguments","TypeError","replace","decodeURI","auth","lenient","key","keys","nullOrUndefined","version","query","stringify","split","accept","toUpperCase","form","canBodyBeStringified","plainObject","array","hostname","matches","exec","socketPath","host","iter","noise","Math","random","number","normalizedArgs","methods","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst PassThrough = require('stream').PassThrough;\nconst Transform = require('stream').Transform;\nconst urlLib = require('url');\nconst fs = require('fs');\nconst querystring = require('querystring');\nconst CacheableRequest = require('cacheable-request');\nconst duplexer3 = require('duplexer3');\nconst intoStream = require('into-stream');\nconst is = require('@sindresorhus/is');\nconst getStream = require('get-stream');\nconst timedOut = require('timed-out');\nconst urlParseLax = require('url-parse-lax');\nconst urlToOptions = require('url-to-options');\nconst lowercaseKeys = require('lowercase-keys');\nconst decompressResponse = require('decompress-response');\nconst mimicResponse = require('mimic-response');\nconst isRetryAllowed = require('is-retry-allowed');\nconst isURL = require('isurl');\nconst PCancelable = require('p-cancelable');\nconst pTimeout = require('p-timeout');\nconst pify = require('pify');\nconst Buffer = require('safe-buffer').Buffer;\nconst pkg = require('./package.json');\nconst errors = require('./errors');\n\nconst getMethodRedirectCodes = new Set([300, 301, 302, 303, 304, 305, 307, 308]);\nconst allMethodRedirectCodes = new Set([300, 303, 307, 308]);\n\nconst isFormData = body => is.nodeStream(body) && is.function(body.getBoundary);\n\nconst getBodySize = opts => {\n\tconst body = opts.body;\n\n\tif (opts.headers['content-length']) {\n\t\treturn Number(opts.headers['content-length']);\n\t}\n\n\tif (!body && !opts.stream) {\n\t\treturn 0;\n\t}\n\n\tif (is.string(body)) {\n\t\treturn Buffer.byteLength(body);\n\t}\n\n\tif (isFormData(body)) {\n\t\treturn pify(body.getLength.bind(body))();\n\t}\n\n\tif (body instanceof fs.ReadStream) {\n\t\treturn pify(fs.stat)(body.path).then(stat => stat.size);\n\t}\n\n\tif (is.nodeStream(body) && is.buffer(body._buffer)) {\n\t\treturn body._buffer.length;\n\t}\n\n\treturn null;\n};\n\nfunction requestAsEventEmitter(opts) {\n\topts = opts || {};\n\n\tconst ee = new EventEmitter();\n\tconst requestUrl = opts.href || urlLib.resolve(urlLib.format(opts), opts.path);\n\tconst redirects = [];\n\tconst agents = is.object(opts.agent) ? opts.agent : null;\n\tlet retryCount = 0;\n\tlet redirectUrl;\n\tlet uploadBodySize;\n\tlet uploaded = 0;\n\n\tconst get = opts => {\n\t\tif (opts.protocol !== 'http:' && opts.protocol !== 'https:') {\n\t\t\tee.emit('error', new got.UnsupportedProtocolError(opts));\n\t\t\treturn;\n\t\t}\n\n\t\tlet fn = opts.protocol === 'https:' ? https : http;\n\n\t\tif (agents) {\n\t\t\tconst protocolName = opts.protocol === 'https:' ? 'https' : 'http';\n\t\t\topts.agent = agents[protocolName] || opts.agent;\n\t\t}\n\n\t\tif (opts.useElectronNet && process.versions.electron) {\n\t\t\tconst electron = require('electron');\n\t\t\tfn = electron.net || electron.remote.net;\n\t\t}\n\n\t\tlet progressInterval;\n\n\t\tconst cacheableRequest = new CacheableRequest(fn.request, opts.cache);\n\t\tconst cacheReq = cacheableRequest(opts, res => {\n\t\t\tclearInterval(progressInterval);\n\n\t\t\tee.emit('uploadProgress', {\n\t\t\t\tpercent: 1,\n\t\t\t\ttransferred: uploaded,\n\t\t\t\ttotal: uploadBodySize\n\t\t\t});\n\n\t\t\tconst statusCode = res.statusCode;\n\n\t\t\tres.url = redirectUrl || requestUrl;\n\t\t\tres.requestUrl = requestUrl;\n\n\t\t\tconst followRedirect = opts.followRedirect && 'location' in res.headers;\n\t\t\tconst redirectGet = followRedirect && getMethodRedirectCodes.has(statusCode);\n\t\t\tconst redirectAll = followRedirect && allMethodRedirectCodes.has(statusCode);\n\n\t\t\tif (redirectAll || (redirectGet && (opts.method === 'GET' || opts.method === 'HEAD'))) {\n\t\t\t\tres.resume();\n\n\t\t\t\tif (statusCode === 303) {\n\t\t\t\t\t// Server responded with \"see other\", indicating that the resource exists at another location,\n\t\t\t\t\t// and the client should request it from that location via GET or HEAD.\n\t\t\t\t\topts.method = 'GET';\n\t\t\t\t}\n\n\t\t\t\tif (redirects.length >= 10) {\n\t\t\t\t\tee.emit('error', new got.MaxRedirectsError(statusCode, redirects, opts), null, res);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst bufferString = Buffer.from(res.headers.location, 'binary').toString();\n\n\t\t\t\tredirectUrl = urlLib.resolve(urlLib.format(opts), bufferString);\n\n\t\t\t\tredirects.push(redirectUrl);\n\n\t\t\t\tconst redirectOpts = Object.assign({}, opts, urlLib.parse(redirectUrl));\n\n\t\t\t\tee.emit('redirect', res, redirectOpts);\n\n\t\t\t\tget(redirectOpts);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetImmediate(() => {\n\t\t\t\ttry {\n\t\t\t\t\tgetResponse(res, opts, ee, redirects);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tee.emit('error', e);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tcacheReq.on('error', err => {\n\t\t\tif (err instanceof CacheableRequest.RequestError) {\n\t\t\t\tee.emit('error', new got.RequestError(err, opts));\n\t\t\t} else {\n\t\t\t\tee.emit('error', new got.CacheError(err, opts));\n\t\t\t}\n\t\t});\n\n\t\tcacheReq.once('request', req => {\n\t\t\tlet aborted = false;\n\t\t\treq.once('abort', _ => {\n\t\t\t\taborted = true;\n\t\t\t});\n\n\t\t\treq.once('error', err => {\n\t\t\t\tclearInterval(progressInterval);\n\n\t\t\t\tif (aborted) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst backoff = opts.retries(++retryCount, err);\n\n\t\t\t\tif (backoff) {\n\t\t\t\t\tsetTimeout(get, backoff, opts);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tee.emit('error', new got.RequestError(err, opts));\n\t\t\t});\n\n\t\t\tee.once('request', req => {\n\t\t\t\tee.emit('uploadProgress', {\n\t\t\t\t\tpercent: 0,\n\t\t\t\t\ttransferred: 0,\n\t\t\t\t\ttotal: uploadBodySize\n\t\t\t\t});\n\n\t\t\t\tconst socket = req.connection;\n\t\t\t\tif (socket) {\n\t\t\t\t\t// `._connecting` was the old property which was made public in node v6.1.0\n\t\t\t\t\tconst isConnecting = socket.connecting === undefined ? socket._connecting : socket.connecting;\n\n\t\t\t\t\tconst onSocketConnect = () => {\n\t\t\t\t\t\tconst uploadEventFrequency = 150;\n\n\t\t\t\t\t\tprogressInterval = setInterval(() => {\n\t\t\t\t\t\t\tif (socket.destroyed) {\n\t\t\t\t\t\t\t\tclearInterval(progressInterval);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst lastUploaded = uploaded;\n\t\t\t\t\t\t\tconst headersSize = req._header ? Buffer.byteLength(req._header) : 0;\n\t\t\t\t\t\t\tuploaded = socket.bytesWritten - headersSize;\n\n\t\t\t\t\t\t\t// Prevent the known issue of `bytesWritten` being larger than body size\n\t\t\t\t\t\t\tif (uploadBodySize && uploaded > uploadBodySize) {\n\t\t\t\t\t\t\t\tuploaded = uploadBodySize;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Don't emit events with unchanged progress and\n\t\t\t\t\t\t\t// prevent last event from being emitted, because\n\t\t\t\t\t\t\t// it's emitted when `response` is emitted\n\t\t\t\t\t\t\tif (uploaded === lastUploaded || uploaded === uploadBodySize) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tee.emit('uploadProgress', {\n\t\t\t\t\t\t\t\tpercent: uploadBodySize ? uploaded / uploadBodySize : 0,\n\t\t\t\t\t\t\t\ttransferred: uploaded,\n\t\t\t\t\t\t\t\ttotal: uploadBodySize\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, uploadEventFrequency);\n\t\t\t\t\t};\n\n\t\t\t\t\t// Only subscribe to 'connect' event if we're actually connecting a new\n\t\t\t\t\t// socket, otherwise if we're already connected (because this is a\n\t\t\t\t\t// keep-alive connection) do not bother. This is important since we won't\n\t\t\t\t\t// get a 'connect' event for an already connected socket.\n\t\t\t\t\tif (isConnecting) {\n\t\t\t\t\t\tsocket.once('connect', onSocketConnect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonSocketConnect();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (opts.gotTimeout) {\n\t\t\t\tclearInterval(progressInterval);\n\t\t\t\ttimedOut(req, opts.gotTimeout);\n\t\t\t}\n\n\t\t\tsetImmediate(() => {\n\t\t\t\tee.emit('request', req);\n\t\t\t});\n\t\t});\n\t};\n\n\tsetImmediate(() => {\n\t\tPromise.resolve(getBodySize(opts))\n\t\t\t.then(size => {\n\t\t\t\tuploadBodySize = size;\n\n\t\t\t\tif (\n\t\t\t\t\tis.undefined(opts.headers['content-length']) &&\n\t\t\t\t\tis.undefined(opts.headers['transfer-encoding']) &&\n\t\t\t\t\tisFormData(opts.body)\n\t\t\t\t) {\n\t\t\t\t\topts.headers['content-length'] = size;\n\t\t\t\t}\n\n\t\t\t\tget(opts);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tee.emit('error', err);\n\t\t\t});\n\t});\n\n\treturn ee;\n}\n\nfunction getResponse(res, opts, ee, redirects) {\n\tconst downloadBodySize = Number(res.headers['content-length']) || null;\n\tlet downloaded = 0;\n\n\tconst progressStream = new Transform({\n\t\ttransform(chunk, encoding, callback) {\n\t\t\tdownloaded += chunk.length;\n\n\t\t\tconst percent = downloadBodySize ? downloaded / downloadBodySize : 0;\n\n\t\t\t// Let flush() be responsible for emitting the last event\n\t\t\tif (percent < 1) {\n\t\t\t\tee.emit('downloadProgress', {\n\t\t\t\t\tpercent,\n\t\t\t\t\ttransferred: downloaded,\n\t\t\t\t\ttotal: downloadBodySize\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcallback(null, chunk);\n\t\t},\n\n\t\tflush(callback) {\n\t\t\tee.emit('downloadProgress', {\n\t\t\t\tpercent: 1,\n\t\t\t\ttransferred: downloaded,\n\t\t\t\ttotal: downloadBodySize\n\t\t\t});\n\n\t\t\tcallback();\n\t\t}\n\t});\n\n\tmimicResponse(res, progressStream);\n\tprogressStream.redirectUrls = redirects;\n\n\tconst response = opts.decompress === true &&\n\t\tis.function(decompressResponse) &&\n\t\topts.method !== 'HEAD' ? decompressResponse(progressStream) : progressStream;\n\n\tif (!opts.decompress && ['gzip', 'deflate'].indexOf(res.headers['content-encoding']) !== -1) {\n\t\topts.encoding = null;\n\t}\n\n\tee.emit('response', response);\n\n\tee.emit('downloadProgress', {\n\t\tpercent: 0,\n\t\ttransferred: 0,\n\t\ttotal: downloadBodySize\n\t});\n\n\tres.pipe(progressStream);\n}\n\nfunction asPromise(opts) {\n\tconst timeoutFn = requestPromise => opts.gotTimeout && opts.gotTimeout.request ?\n\t\tpTimeout(requestPromise, opts.gotTimeout.request, new got.RequestError({message: 'Request timed out', code: 'ETIMEDOUT'}, opts)) :\n\t\trequestPromise;\n\n\tconst proxy = new EventEmitter();\n\n\tconst cancelable = new PCancelable((resolve, reject, onCancel) => {\n\t\tconst ee = requestAsEventEmitter(opts);\n\t\tlet cancelOnRequest = false;\n\n\t\tonCancel(() => {\n\t\t\tcancelOnRequest = true;\n\t\t});\n\n\t\tee.on('request', req => {\n\t\t\tif (cancelOnRequest) {\n\t\t\t\treq.abort();\n\t\t\t}\n\n\t\t\tonCancel(() => {\n\t\t\t\treq.abort();\n\t\t\t});\n\n\t\t\tif (is.nodeStream(opts.body)) {\n\t\t\t\topts.body.pipe(req);\n\t\t\t\topts.body = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treq.end(opts.body);\n\t\t});\n\n\t\tee.on('response', res => {\n\t\t\tconst stream = is.null(opts.encoding) ? getStream.buffer(res) : getStream(res, opts);\n\n\t\t\tstream\n\t\t\t\t.catch(err => reject(new got.ReadError(err, opts)))\n\t\t\t\t.then(data => {\n\t\t\t\t\tconst statusCode = res.statusCode;\n\t\t\t\t\tconst limitStatusCode = opts.followRedirect ? 299 : 399;\n\n\t\t\t\t\tres.body = data;\n\n\t\t\t\t\tif (opts.json && res.body) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tres.body = JSON.parse(res.body);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tif (statusCode >= 200 && statusCode < 300) {\n\t\t\t\t\t\t\t\tthrow new got.ParseError(err, statusCode, opts, data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.throwHttpErrors && statusCode !== 304 && (statusCode < 200 || statusCode > limitStatusCode)) {\n\t\t\t\t\t\tthrow new got.HTTPError(statusCode, res.statusMessage, res.headers, opts);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(res);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tObject.defineProperty(err, 'response', {value: res});\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t});\n\n\t\tee.once('error', reject);\n\t\tee.on('redirect', proxy.emit.bind(proxy, 'redirect'));\n\t\tee.on('uploadProgress', proxy.emit.bind(proxy, 'uploadProgress'));\n\t\tee.on('downloadProgress', proxy.emit.bind(proxy, 'downloadProgress'));\n\t});\n\n\t// Preserve backwards-compatibility\n\t// TODO: Remove this in the next major version\n\tObject.defineProperty(cancelable, 'canceled', {\n\t\tget() {\n\t\t\treturn cancelable.isCanceled;\n\t\t}\n\t});\n\n\tconst promise = timeoutFn(cancelable);\n\n\tpromise.cancel = cancelable.cancel.bind(cancelable);\n\n\tpromise.on = (name, fn) => {\n\t\tproxy.on(name, fn);\n\t\treturn promise;\n\t};\n\n\treturn promise;\n}\n\nfunction asStream(opts) {\n\topts.stream = true;\n\n\tconst input = new PassThrough();\n\tconst output = new PassThrough();\n\tconst proxy = duplexer3(input, output);\n\tlet timeout;\n\n\tif (opts.gotTimeout && opts.gotTimeout.request) {\n\t\ttimeout = setTimeout(() => {\n\t\t\tproxy.emit('error', new got.RequestError({message: 'Request timed out', code: 'ETIMEDOUT'}, opts));\n\t\t}, opts.gotTimeout.request);\n\t}\n\n\tif (opts.json) {\n\t\tthrow new Error('Got can not be used as a stream when the `json` option is used');\n\t}\n\n\tif (opts.body) {\n\t\tproxy.write = () => {\n\t\t\tthrow new Error('Got\\'s stream is not writable when the `body` option is used');\n\t\t};\n\t}\n\n\tconst ee = requestAsEventEmitter(opts);\n\n\tee.on('request', req => {\n\t\tproxy.emit('request', req);\n\n\t\tif (is.nodeStream(opts.body)) {\n\t\t\topts.body.pipe(req);\n\t\t\treturn;\n\t\t}\n\n\t\tif (opts.body) {\n\t\t\treq.end(opts.body);\n\t\t\treturn;\n\t\t}\n\n\t\tif (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n\t\t\tinput.pipe(req);\n\t\t\treturn;\n\t\t}\n\n\t\treq.end();\n\t});\n\n\tee.on('response', res => {\n\t\tclearTimeout(timeout);\n\n\t\tconst statusCode = res.statusCode;\n\n\t\tres.on('error', err => {\n\t\t\tproxy.emit('error', new got.ReadError(err, opts));\n\t\t});\n\n\t\tres.pipe(output);\n\n\t\tif (opts.throwHttpErrors && statusCode !== 304 && (statusCode < 200 || statusCode > 299)) {\n\t\t\tproxy.emit('error', new got.HTTPError(statusCode, res.statusMessage, res.headers, opts), null, res);\n\t\t\treturn;\n\t\t}\n\n\t\tproxy.emit('response', res);\n\t});\n\n\tee.on('error', proxy.emit.bind(proxy, 'error'));\n\tee.on('redirect', proxy.emit.bind(proxy, 'redirect'));\n\tee.on('uploadProgress', proxy.emit.bind(proxy, 'uploadProgress'));\n\tee.on('downloadProgress', proxy.emit.bind(proxy, 'downloadProgress'));\n\n\treturn proxy;\n}\n\nfunction normalizeArguments(url, opts) {\n\tif (!is.string(url) && !is.object(url)) {\n\t\tthrow new TypeError(`Parameter \\`url\\` must be a string or object, not ${is(url)}`);\n\t} else if (is.string(url)) {\n\t\turl = url.replace(/^unix:/, 'http://$&');\n\n\t\ttry {\n\t\t\tdecodeURI(url);\n\t\t} catch (err) {\n\t\t\tthrow new Error('Parameter `url` must contain valid UTF-8 character sequences');\n\t\t}\n\n\t\turl = urlParseLax(url);\n\t\tif (url.auth) {\n\t\t\tthrow new Error('Basic authentication must be done with the `auth` option');\n\t\t}\n\t} else if (isURL.lenient(url)) {\n\t\turl = urlToOptions(url);\n\t}\n\n\topts = Object.assign(\n\t\t{\n\t\t\tpath: '',\n\t\t\tretries: 2,\n\t\t\tcache: false,\n\t\t\tdecompress: true,\n\t\t\tuseElectronNet: false,\n\t\t\tthrowHttpErrors: true\n\t\t},\n\t\turl,\n\t\t{\n\t\t\tprotocol: url.protocol || 'http:' // Override both null/undefined with default protocol\n\t\t},\n\t\topts\n\t);\n\n\tconst headers = lowercaseKeys(opts.headers);\n\tfor (const key of Object.keys(headers)) {\n\t\tif (is.nullOrUndefined(headers[key])) {\n\t\t\tdelete headers[key];\n\t\t}\n\t}\n\n\topts.headers = Object.assign({\n\t\t'user-agent': `${pkg.name}/${pkg.version} (https://github.com/sindresorhus/got)`\n\t}, headers);\n\n\tif (opts.decompress && is.undefined(opts.headers['accept-encoding'])) {\n\t\topts.headers['accept-encoding'] = 'gzip, deflate';\n\t}\n\n\tconst query = opts.query;\n\n\tif (query) {\n\t\tif (!is.string(query)) {\n\t\t\topts.query = querystring.stringify(query);\n\t\t}\n\n\t\topts.path = `${opts.path.split('?')[0]}?${opts.query}`;\n\t\tdelete opts.query;\n\t}\n\n\tif (opts.json && is.undefined(opts.headers.accept)) {\n\t\topts.headers.accept = 'application/json';\n\t}\n\n\tconst body = opts.body;\n\tif (is.nullOrUndefined(body)) {\n\t\topts.method = (opts.method || 'GET').toUpperCase();\n\t} else {\n\t\tconst headers = opts.headers;\n\t\tif (!is.nodeStream(body) && !is.string(body) && !is.buffer(body) && !(opts.form || opts.json)) {\n\t\t\tthrow new TypeError('The `body` option must be a stream.Readable, string, Buffer or plain Object');\n\t\t}\n\n\t\tconst canBodyBeStringified = is.plainObject(body) || is.array(body);\n\t\tif ((opts.form || opts.json) && !canBodyBeStringified) {\n\t\t\tthrow new TypeError('The `body` option must be a plain Object or Array when the `form` or `json` option is used');\n\t\t}\n\n\t\tif (isFormData(body)) {\n\t\t\t// Special case for https://github.com/form-data/form-data\n\t\t\theaders['content-type'] = headers['content-type'] || `multipart/form-data; boundary=${body.getBoundary()}`;\n\t\t} else if (opts.form && canBodyBeStringified) {\n\t\t\theaders['content-type'] = headers['content-type'] || 'application/x-www-form-urlencoded';\n\t\t\topts.body = querystring.stringify(body);\n\t\t} else if (opts.json && canBodyBeStringified) {\n\t\t\theaders['content-type'] = headers['content-type'] || 'application/json';\n\t\t\topts.body = JSON.stringify(body);\n\t\t}\n\n\t\tif (is.undefined(headers['content-length']) && is.undefined(headers['transfer-encoding']) && !is.nodeStream(body)) {\n\t\t\tconst length = is.string(opts.body) ? Buffer.byteLength(opts.body) : opts.body.length;\n\t\t\theaders['content-length'] = length;\n\t\t}\n\n\t\t// Convert buffer to stream to receive upload progress events\n\t\t// see https://github.com/sindresorhus/got/pull/322\n\t\tif (is.buffer(body)) {\n\t\t\topts.body = intoStream(body);\n\t\t\topts.body._buffer = body;\n\t\t}\n\n\t\topts.method = (opts.method || 'POST').toUpperCase();\n\t}\n\n\tif (opts.hostname === 'unix') {\n\t\tconst matches = /(.+?):(.+)/.exec(opts.path);\n\n\t\tif (matches) {\n\t\t\topts.socketPath = matches[1];\n\t\t\topts.path = matches[2];\n\t\t\topts.host = null;\n\t\t}\n\t}\n\n\tif (!is.function(opts.retries)) {\n\t\tconst retries = opts.retries;\n\n\t\topts.retries = (iter, err) => {\n\t\t\tif (iter > retries || !isRetryAllowed(err)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst noise = Math.random() * 100;\n\n\t\t\treturn ((1 << iter) * 1000) + noise;\n\t\t};\n\t}\n\n\tif (is.undefined(opts.followRedirect)) {\n\t\topts.followRedirect = true;\n\t}\n\n\tif (opts.timeout) {\n\t\tif (is.number(opts.timeout)) {\n\t\t\topts.gotTimeout = {request: opts.timeout};\n\t\t} else {\n\t\t\topts.gotTimeout = opts.timeout;\n\t\t}\n\t\tdelete opts.timeout;\n\t}\n\n\treturn opts;\n}\n\nfunction got(url, opts) {\n\ttry {\n\t\tconst normalizedArgs = normalizeArguments(url, opts);\n\n\t\tif (normalizedArgs.stream) {\n\t\t\treturn asStream(normalizedArgs);\n\t\t}\n\n\t\treturn asPromise(normalizedArgs);\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n}\n\ngot.stream = (url, opts) => asStream(normalizeArguments(url, opts));\n\nconst methods = [\n\t'get',\n\t'post',\n\t'put',\n\t'patch',\n\t'head',\n\t'delete'\n];\n\nfor (const method of methods) {\n\tgot[method] = (url, opts) => got(url, Object.assign({}, opts, {method}));\n\tgot.stream[method] = (url, opts) => got.stream(url, Object.assign({}, opts, {method}));\n}\n\nObject.assign(got, errors);\n\nmodule.exports = got;\n"]},"metadata":{},"sourceType":"script"}