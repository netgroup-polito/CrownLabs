{"ast":null,"code":"// Copyright 2015 Joyent, Inc.\nvar Key = require('./key');\n\nvar Fingerprint = require('./fingerprint');\n\nvar Signature = require('./signature');\n\nvar PrivateKey = require('./private-key');\n\nvar Certificate = require('./certificate');\n\nvar Identity = require('./identity');\n\nvar errs = require('./errors');\n\nmodule.exports = {\n  /* top-level classes */\n  Key: Key,\n  parseKey: Key.parse,\n  Fingerprint: Fingerprint,\n  parseFingerprint: Fingerprint.parse,\n  Signature: Signature,\n  parseSignature: Signature.parse,\n  PrivateKey: PrivateKey,\n  parsePrivateKey: PrivateKey.parse,\n  generatePrivateKey: PrivateKey.generate,\n  Certificate: Certificate,\n  parseCertificate: Certificate.parse,\n  createSelfSignedCertificate: Certificate.createSelfSigned,\n  createCertificate: Certificate.create,\n  Identity: Identity,\n  identityFromDN: Identity.parseDN,\n  identityForHost: Identity.forHost,\n  identityForUser: Identity.forUser,\n  identityForEmail: Identity.forEmail,\n  identityFromArray: Identity.fromArray,\n\n  /* errors */\n  FingerprintFormatError: errs.FingerprintFormatError,\n  InvalidAlgorithmError: errs.InvalidAlgorithmError,\n  KeyParseError: errs.KeyParseError,\n  SignatureParseError: errs.SignatureParseError,\n  KeyEncryptedError: errs.KeyEncryptedError,\n  CertificateParseError: errs.CertificateParseError\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/sshpk/lib/index.js"],"names":["Key","require","Fingerprint","Signature","PrivateKey","Certificate","Identity","errs","module","exports","parseKey","parse","parseFingerprint","parseSignature","parsePrivateKey","generatePrivateKey","generate","parseCertificate","createSelfSignedCertificate","createSelfSigned","createCertificate","create","identityFromDN","parseDN","identityForHost","forHost","identityForUser","forUser","identityForEmail","forEmail","identityFromArray","fromArray","FingerprintFormatError","InvalidAlgorithmError","KeyParseError","SignatureParseError","KeyEncryptedError","CertificateParseError"],"mappings":"AAAA;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIM,IAAI,GAAGN,OAAO,CAAC,UAAD,CAAlB;;AAEAO,MAAM,CAACC,OAAP,GAAiB;AAChB;AACAT,EAAAA,GAAG,EAAEA,GAFW;AAGhBU,EAAAA,QAAQ,EAAEV,GAAG,CAACW,KAHE;AAIhBT,EAAAA,WAAW,EAAEA,WAJG;AAKhBU,EAAAA,gBAAgB,EAAEV,WAAW,CAACS,KALd;AAMhBR,EAAAA,SAAS,EAAEA,SANK;AAOhBU,EAAAA,cAAc,EAAEV,SAAS,CAACQ,KAPV;AAQhBP,EAAAA,UAAU,EAAEA,UARI;AAShBU,EAAAA,eAAe,EAAEV,UAAU,CAACO,KATZ;AAUhBI,EAAAA,kBAAkB,EAAEX,UAAU,CAACY,QAVf;AAWhBX,EAAAA,WAAW,EAAEA,WAXG;AAYhBY,EAAAA,gBAAgB,EAAEZ,WAAW,CAACM,KAZd;AAahBO,EAAAA,2BAA2B,EAAEb,WAAW,CAACc,gBAbzB;AAchBC,EAAAA,iBAAiB,EAAEf,WAAW,CAACgB,MAdf;AAehBf,EAAAA,QAAQ,EAAEA,QAfM;AAgBhBgB,EAAAA,cAAc,EAAEhB,QAAQ,CAACiB,OAhBT;AAiBhBC,EAAAA,eAAe,EAAElB,QAAQ,CAACmB,OAjBV;AAkBhBC,EAAAA,eAAe,EAAEpB,QAAQ,CAACqB,OAlBV;AAmBhBC,EAAAA,gBAAgB,EAAEtB,QAAQ,CAACuB,QAnBX;AAoBhBC,EAAAA,iBAAiB,EAAExB,QAAQ,CAACyB,SApBZ;;AAsBhB;AACAC,EAAAA,sBAAsB,EAAEzB,IAAI,CAACyB,sBAvBb;AAwBhBC,EAAAA,qBAAqB,EAAE1B,IAAI,CAAC0B,qBAxBZ;AAyBhBC,EAAAA,aAAa,EAAE3B,IAAI,CAAC2B,aAzBJ;AA0BhBC,EAAAA,mBAAmB,EAAE5B,IAAI,CAAC4B,mBA1BV;AA2BhBC,EAAAA,iBAAiB,EAAE7B,IAAI,CAAC6B,iBA3BR;AA4BhBC,EAAAA,qBAAqB,EAAE9B,IAAI,CAAC8B;AA5BZ,CAAjB","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nvar Key = require('./key');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar PrivateKey = require('./private-key');\nvar Certificate = require('./certificate');\nvar Identity = require('./identity');\nvar errs = require('./errors');\n\nmodule.exports = {\n\t/* top-level classes */\n\tKey: Key,\n\tparseKey: Key.parse,\n\tFingerprint: Fingerprint,\n\tparseFingerprint: Fingerprint.parse,\n\tSignature: Signature,\n\tparseSignature: Signature.parse,\n\tPrivateKey: PrivateKey,\n\tparsePrivateKey: PrivateKey.parse,\n\tgeneratePrivateKey: PrivateKey.generate,\n\tCertificate: Certificate,\n\tparseCertificate: Certificate.parse,\n\tcreateSelfSignedCertificate: Certificate.createSelfSigned,\n\tcreateCertificate: Certificate.create,\n\tIdentity: Identity,\n\tidentityFromDN: Identity.parseDN,\n\tidentityForHost: Identity.forHost,\n\tidentityForUser: Identity.forUser,\n\tidentityForEmail: Identity.forEmail,\n\tidentityFromArray: Identity.fromArray,\n\n\t/* errors */\n\tFingerprintFormatError: errs.FingerprintFormatError,\n\tInvalidAlgorithmError: errs.InvalidAlgorithmError,\n\tKeyParseError: errs.KeyParseError,\n\tSignatureParseError: errs.SignatureParseError,\n\tKeyEncryptedError: errs.KeyEncryptedError,\n\tCertificateParseError: errs.CertificateParseError\n};\n"]},"metadata":{},"sourceType":"script"}