{"ast":null,"code":"var Buffer = require('safe-buffer').Buffer;\n\nfunction encryptByte(self, byteParam, decrypt) {\n  var pad;\n  var i = -1;\n  var len = 8;\n  var out = 0;\n  var bit, value;\n\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev);\n    bit = byteParam & 1 << 7 - i ? 0x80 : 0;\n    value = pad[0] ^ bit;\n    out += (value & 0x80) >> i % 8;\n    self._prev = shiftIn(self._prev, decrypt ? bit : value);\n  }\n\n  return out;\n}\n\nfunction shiftIn(buffer, value) {\n  var len = buffer.length;\n  var i = -1;\n  var out = Buffer.allocUnsafe(buffer.length);\n  buffer = Buffer.concat([buffer, Buffer.from([value])]);\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> 7;\n  }\n\n  return out;\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length;\n  var out = Buffer.allocUnsafe(len);\n  var i = -1;\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt);\n  }\n\n  return out;\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/browserify-aes/modes/cfb1.js"],"names":["Buffer","require","encryptByte","self","byteParam","decrypt","pad","i","len","out","bit","value","_cipher","encryptBlock","_prev","shiftIn","buffer","length","allocUnsafe","concat","from","exports","encrypt","chunk"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAApC;;AAEA,SAASE,WAAT,CAAsBC,IAAtB,EAA4BC,SAA5B,EAAuCC,OAAvC,EAAgD;AAC9C,MAAIC,GAAJ;AACA,MAAIC,CAAC,GAAG,CAAC,CAAT;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAJ,EAASC,KAAT;;AACA,SAAO,EAAEJ,CAAF,GAAMC,GAAb,EAAkB;AAChBF,IAAAA,GAAG,GAAGH,IAAI,CAACS,OAAL,CAAaC,YAAb,CAA0BV,IAAI,CAACW,KAA/B,CAAN;AACAJ,IAAAA,GAAG,GAAIN,SAAS,GAAI,KAAM,IAAIG,CAAxB,GAA+B,IAA/B,GAAsC,CAA5C;AACAI,IAAAA,KAAK,GAAGL,GAAG,CAAC,CAAD,CAAH,GAASI,GAAjB;AACAD,IAAAA,GAAG,IAAK,CAACE,KAAK,GAAG,IAAT,KAAmBJ,CAAC,GAAG,CAA/B;AACAJ,IAAAA,IAAI,CAACW,KAAL,GAAaC,OAAO,CAACZ,IAAI,CAACW,KAAN,EAAaT,OAAO,GAAGK,GAAH,GAASC,KAA7B,CAApB;AACD;;AACD,SAAOF,GAAP;AACD;;AAED,SAASM,OAAT,CAAkBC,MAAlB,EAA0BL,KAA1B,EAAiC;AAC/B,MAAIH,GAAG,GAAGQ,MAAM,CAACC,MAAjB;AACA,MAAIV,CAAC,GAAG,CAAC,CAAT;AACA,MAAIE,GAAG,GAAGT,MAAM,CAACkB,WAAP,CAAmBF,MAAM,CAACC,MAA1B,CAAV;AACAD,EAAAA,MAAM,GAAGhB,MAAM,CAACmB,MAAP,CAAc,CAACH,MAAD,EAAShB,MAAM,CAACoB,IAAP,CAAY,CAACT,KAAD,CAAZ,CAAT,CAAd,CAAT;;AAEA,SAAO,EAAEJ,CAAF,GAAMC,GAAb,EAAkB;AAChBC,IAAAA,GAAG,CAACF,CAAD,CAAH,GAASS,MAAM,CAACT,CAAD,CAAN,IAAa,CAAb,GAAiBS,MAAM,CAACT,CAAC,GAAG,CAAL,CAAN,IAAkB,CAA5C;AACD;;AAED,SAAOE,GAAP;AACD;;AAEDY,OAAO,CAACC,OAAR,GAAkB,UAAUnB,IAAV,EAAgBoB,KAAhB,EAAuBlB,OAAvB,EAAgC;AAChD,MAAIG,GAAG,GAAGe,KAAK,CAACN,MAAhB;AACA,MAAIR,GAAG,GAAGT,MAAM,CAACkB,WAAP,CAAmBV,GAAnB,CAAV;AACA,MAAID,CAAC,GAAG,CAAC,CAAT;;AAEA,SAAO,EAAEA,CAAF,GAAMC,GAAb,EAAkB;AAChBC,IAAAA,GAAG,CAACF,CAAD,CAAH,GAASL,WAAW,CAACC,IAAD,EAAOoB,KAAK,CAAChB,CAAD,CAAZ,EAAiBF,OAAjB,CAApB;AACD;;AAED,SAAOI,GAAP;AACD,CAVD","sourcesContent":["var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n"]},"metadata":{},"sourceType":"script"}