{"ast":null,"code":"// Copyright 2018 Joyent, Inc.\nmodule.exports = {\n  read: read,\n  write: write\n};\n\nvar assert = require('assert-plus');\n\nvar Buffer = require('safer-buffer').Buffer;\n\nvar utils = require('../utils');\n\nvar Key = require('../key');\n\nvar PrivateKey = require('../private-key');\n\nvar pem = require('./pem');\n\nvar ssh = require('./ssh');\n\nvar rfc4253 = require('./rfc4253');\n\nvar dnssec = require('./dnssec');\n\nvar putty = require('./putty');\n\nvar DNSSEC_PRIVKEY_HEADER_PREFIX = 'Private-key-format: v1';\n\nfunction read(buf, options) {\n  if (typeof buf === 'string') {\n    if (buf.trim().match(/^[-]+[ ]*BEGIN/)) return pem.read(buf, options);\n    if (buf.match(/^\\s*ssh-[a-z]/)) return ssh.read(buf, options);\n    if (buf.match(/^\\s*ecdsa-/)) return ssh.read(buf, options);\n    if (buf.match(/^putty-user-key-file-2:/i)) return putty.read(buf, options);\n    if (findDNSSECHeader(buf)) return dnssec.read(buf, options);\n    buf = Buffer.from(buf, 'binary');\n  } else {\n    assert.buffer(buf);\n    if (findPEMHeader(buf)) return pem.read(buf, options);\n    if (findSSHHeader(buf)) return ssh.read(buf, options);\n    if (findPuTTYHeader(buf)) return putty.read(buf, options);\n    if (findDNSSECHeader(buf)) return dnssec.read(buf, options);\n  }\n\n  if (buf.readUInt32BE(0) < buf.length) return rfc4253.read(buf, options);\n  throw new Error('Failed to auto-detect format of key');\n}\n\nfunction findPuTTYHeader(buf) {\n  var offset = 0;\n\n  while (offset < buf.length && (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9)) ++offset;\n\n  if (offset + 22 <= buf.length && buf.slice(offset, offset + 22).toString('ascii').toLowerCase() === 'putty-user-key-file-2:') return true;\n  return false;\n}\n\nfunction findSSHHeader(buf) {\n  var offset = 0;\n\n  while (offset < buf.length && (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9)) ++offset;\n\n  if (offset + 4 <= buf.length && buf.slice(offset, offset + 4).toString('ascii') === 'ssh-') return true;\n  if (offset + 6 <= buf.length && buf.slice(offset, offset + 6).toString('ascii') === 'ecdsa-') return true;\n  return false;\n}\n\nfunction findPEMHeader(buf) {\n  var offset = 0;\n\n  while (offset < buf.length && (buf[offset] === 32 || buf[offset] === 10)) ++offset;\n\n  if (buf[offset] !== 45) return false;\n\n  while (offset < buf.length && buf[offset] === 45) ++offset;\n\n  while (offset < buf.length && buf[offset] === 32) ++offset;\n\n  if (offset + 5 > buf.length || buf.slice(offset, offset + 5).toString('ascii') !== 'BEGIN') return false;\n  return true;\n}\n\nfunction findDNSSECHeader(buf) {\n  // private case first\n  if (buf.length <= DNSSEC_PRIVKEY_HEADER_PREFIX.length) return false;\n  var headerCheck = buf.slice(0, DNSSEC_PRIVKEY_HEADER_PREFIX.length);\n  if (headerCheck.toString('ascii') === DNSSEC_PRIVKEY_HEADER_PREFIX) return true; // public-key RFC3110 ?\n  // 'domain.com. IN KEY ...' or 'domain.com. IN DNSKEY ...'\n  // skip any comment-lines\n\n  if (typeof buf !== 'string') {\n    buf = buf.toString('ascii');\n  }\n\n  var lines = buf.split('\\n');\n  var line = 0;\n  /* JSSTYLED */\n\n  while (lines[line].match(/^\\;/)) line++;\n\n  if (lines[line].toString('ascii').match(/\\. IN KEY /)) return true;\n  if (lines[line].toString('ascii').match(/\\. IN DNSKEY /)) return true;\n  return false;\n}\n\nfunction write(key, options) {\n  throw new Error('\"auto\" format cannot be used for writing');\n}","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/sshpk/lib/formats/auto.js"],"names":["module","exports","read","write","assert","require","Buffer","utils","Key","PrivateKey","pem","ssh","rfc4253","dnssec","putty","DNSSEC_PRIVKEY_HEADER_PREFIX","buf","options","trim","match","findDNSSECHeader","from","buffer","findPEMHeader","findSSHHeader","findPuTTYHeader","readUInt32BE","length","Error","offset","slice","toString","toLowerCase","headerCheck","lines","split","line","key"],"mappings":"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","sourcesContent":["// Copyright 2018 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\n\nvar pem = require('./pem');\nvar ssh = require('./ssh');\nvar rfc4253 = require('./rfc4253');\nvar dnssec = require('./dnssec');\nvar putty = require('./putty');\n\nvar DNSSEC_PRIVKEY_HEADER_PREFIX = 'Private-key-format: v1';\n\nfunction read(buf, options) {\n\tif (typeof (buf) === 'string') {\n\t\tif (buf.trim().match(/^[-]+[ ]*BEGIN/))\n\t\t\treturn (pem.read(buf, options));\n\t\tif (buf.match(/^\\s*ssh-[a-z]/))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (buf.match(/^\\s*ecdsa-/))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (buf.match(/^putty-user-key-file-2:/i))\n\t\t\treturn (putty.read(buf, options));\n\t\tif (findDNSSECHeader(buf))\n\t\t\treturn (dnssec.read(buf, options));\n\t\tbuf = Buffer.from(buf, 'binary');\n\t} else {\n\t\tassert.buffer(buf);\n\t\tif (findPEMHeader(buf))\n\t\t\treturn (pem.read(buf, options));\n\t\tif (findSSHHeader(buf))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (findPuTTYHeader(buf))\n\t\t\treturn (putty.read(buf, options));\n\t\tif (findDNSSECHeader(buf))\n\t\t\treturn (dnssec.read(buf, options));\n\t}\n\tif (buf.readUInt32BE(0) < buf.length)\n\t\treturn (rfc4253.read(buf, options));\n\tthrow (new Error('Failed to auto-detect format of key'));\n}\n\nfunction findPuTTYHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9))\n\t\t++offset;\n\tif (offset + 22 <= buf.length &&\n\t    buf.slice(offset, offset + 22).toString('ascii').toLowerCase() ===\n\t    'putty-user-key-file-2:')\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction findSSHHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9))\n\t\t++offset;\n\tif (offset + 4 <= buf.length &&\n\t    buf.slice(offset, offset + 4).toString('ascii') === 'ssh-')\n\t\treturn (true);\n\tif (offset + 6 <= buf.length &&\n\t    buf.slice(offset, offset + 6).toString('ascii') === 'ecdsa-')\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction findPEMHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10))\n\t\t++offset;\n\tif (buf[offset] !== 45)\n\t\treturn (false);\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 45))\n\t\t++offset;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32))\n\t\t++offset;\n\tif (offset + 5 > buf.length ||\n\t    buf.slice(offset, offset + 5).toString('ascii') !== 'BEGIN')\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction findDNSSECHeader(buf) {\n\t// private case first\n\tif (buf.length <= DNSSEC_PRIVKEY_HEADER_PREFIX.length)\n\t\treturn (false);\n\tvar headerCheck = buf.slice(0, DNSSEC_PRIVKEY_HEADER_PREFIX.length);\n\tif (headerCheck.toString('ascii') === DNSSEC_PRIVKEY_HEADER_PREFIX)\n\t\treturn (true);\n\n\t// public-key RFC3110 ?\n\t// 'domain.com. IN KEY ...' or 'domain.com. IN DNSKEY ...'\n\t// skip any comment-lines\n\tif (typeof (buf) !== 'string') {\n\t\tbuf = buf.toString('ascii');\n\t}\n\tvar lines = buf.split('\\n');\n\tvar line = 0;\n\t/* JSSTYLED */\n\twhile (lines[line].match(/^\\;/))\n\t\tline++;\n\tif (lines[line].toString('ascii').match(/\\. IN KEY /))\n\t\treturn (true);\n\tif (lines[line].toString('ascii').match(/\\. IN DNSKEY /))\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction write(key, options) {\n\tthrow (new Error('\"auto\" format cannot be used for writing'));\n}\n"]},"metadata":{},"sourceType":"script"}