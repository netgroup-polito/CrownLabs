{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = '';\n        /* istanbul ignore else */\n\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + '$ref' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { ref: \\'' + it.util.escapeQuotes($schema) + '\\' } ';\n\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + it.util.escapeQuotes($schema) + '\\' ';\n          }\n\n          if (it.opts.verbose) {\n            out += ' , schema: ' + it.util.toQuotedString($schema) + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n          }\n\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n\n        var __err = out;\n        out = $$outStack.pop();\n\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + __err + ']); ';\n          } else {\n            out += ' validate.errors = [' + __err + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + $code + ' ';\n\n      if ($breakOnError) {\n        out += ' if (' + $nextValid + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || it.async && $refVal.$async !== false;\n      $refCode = $refVal.code;\n    }\n  }\n\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n\n    if (it.opts.passContext) {\n      out += ' ' + $refCode + '.call(this, ';\n    } else {\n      out += ' ' + $refCode + '( ';\n    }\n\n    out += ' ' + $data + ', (dataPath || \\'\\')';\n\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + it.errorPath;\n    }\n\n    var $parentData = $dataLvl ? 'data' + ($dataLvl - 1 || '') : 'parentData',\n        $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + $parentData + ' , ' + $parentDataProperty + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n\n      if ($breakOnError) {\n        out += ' var ' + $valid + '; ';\n      }\n\n      out += ' try { await ' + __callValidate + '; ';\n\n      if ($breakOnError) {\n        out += ' ' + $valid + ' = true; ';\n      }\n\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n\n      if ($breakOnError) {\n        out += ' ' + $valid + ' = false; ';\n      }\n\n      out += ' } ';\n\n      if ($breakOnError) {\n        out += ' if (' + $valid + ') { ';\n      }\n    } else {\n      out += ' if (!' + __callValidate + ') { if (vErrors === null) vErrors = ' + $refCode + '.errors; else vErrors = vErrors.concat(' + $refCode + '.errors); errors = vErrors.length; } ';\n\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n\n  return out;\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/ajv/lib/dotjs/ref.js"],"names":["module","exports","generate_ref","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$async","$refCode","isRoot","async","root","$refVal","resolveRef","baseId","undefined","$message","MissingRefError","message","missingRefs","logger","error","$$outStack","push","createErrors","errorPath","util","toQuotedString","escapeQuotes","messages","verbose","schemaPath","__err","pop","compositeRule","warn","inline","$it","copy","$nextValid","$code","validate","replace","code","passContext","$parentData","$parentDataProperty","dataPathArr","__callValidate","Error"],"mappings":"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","sourcesContent":["'use strict';\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { await ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}