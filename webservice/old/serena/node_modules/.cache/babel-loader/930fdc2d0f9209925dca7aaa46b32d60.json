{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect, useRef, useMemo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Fade from './Fade';\nimport Header from './ToastHeader';\nimport Body from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nvar defaultProps = {\n  animation: true,\n  autohide: false,\n  delay: 3000,\n  show: true,\n  transition: Fade\n};\nvar Toast = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      Transition = _ref.transition,\n      show = _ref.show,\n      animation = _ref.animation,\n      delay = _ref.delay,\n      autohide = _ref.autohide,\n      onClose = _ref.onClose,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\"]);\n\n  bsPrefix = useBootstrapPrefix('toast');\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose);\n  useEffect(function () {\n    // We use refs for these, because we don't want to restart the autohide\n    // timer in case these values change.\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  var autohideTimeout = useTimeout();\n  var autohideFunc = useCallback(function () {\n    if (!(autohide && show)) {\n      return;\n    }\n\n    onCloseRef.current();\n  }, [autohide, show]);\n  autohideTimeout.set(autohideFunc, delayRef.current);\n  var useAnimation = useMemo(function () {\n    return Transition && animation;\n  }, [Transition, animation]);\n  var toast = React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(bsPrefix, className, !useAnimation && show && 'show'),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n  var toastContext = {\n    onClose: onClose\n  };\n  return React.createElement(ToastContext.Provider, {\n    value: toastContext\n  }, useAnimation ? React.createElement(Transition, {\n    in: show\n  }, toast) : toast);\n});\nToast.defaultProps = defaultProps;\nToast.displayName = 'Toast';\nToast.Body = Body;\nToast.Header = Header;\nexport default Toast;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/react-bootstrap/esm/Toast.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useEffect","useRef","useMemo","useCallback","classNames","useTimeout","Fade","Header","Body","useBootstrapPrefix","ToastContext","defaultProps","animation","autohide","delay","show","transition","Toast","forwardRef","_ref","ref","bsPrefix","className","children","Transition","onClose","props","delayRef","onCloseRef","current","autohideTimeout","autohideFunc","set","useAnimation","toast","createElement","role","toastContext","Provider","value","in","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect, useRef, useMemo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Fade from './Fade';\nimport Header from './ToastHeader';\nimport Body from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nvar defaultProps = {\n  animation: true,\n  autohide: false,\n  delay: 3000,\n  show: true,\n  transition: Fade\n};\nvar Toast = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      Transition = _ref.transition,\n      show = _ref.show,\n      animation = _ref.animation,\n      delay = _ref.delay,\n      autohide = _ref.autohide,\n      onClose = _ref.onClose,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\"]);\n\n  bsPrefix = useBootstrapPrefix('toast');\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose);\n  useEffect(function () {\n    // We use refs for these, because we don't want to restart the autohide\n    // timer in case these values change.\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  var autohideTimeout = useTimeout();\n  var autohideFunc = useCallback(function () {\n    if (!(autohide && show)) {\n      return;\n    }\n\n    onCloseRef.current();\n  }, [autohide, show]);\n  autohideTimeout.set(autohideFunc, delayRef.current);\n  var useAnimation = useMemo(function () {\n    return Transition && animation;\n  }, [Transition, animation]);\n  var toast = React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(bsPrefix, className, !useAnimation && show && 'show'),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n  var toastContext = {\n    onClose: onClose\n  };\n  return React.createElement(ToastContext.Provider, {\n    value: toastContext\n  }, useAnimation ? React.createElement(Transition, {\n    in: show\n  }, toast) : toast);\n});\nToast.defaultProps = defaultProps;\nToast.displayName = 'Toast';\nToast.Body = Body;\nToast.Header = Header;\nexport default Toast;"]},"metadata":{},"sourceType":"module"}