{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n      $schemaValue;\n\n  if ($isData) {\n    out += ' var schema' + $lvl + ' = ' + it.util.getData($schema.$data, $dataLvl, it.dataPathArr) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n\n  if ($isData) {\n    out += ' (' + $schemaValue + ' !== undefined && typeof ' + $schemaValue + ' != \\'number\\') || ';\n  }\n\n  out += ' ' + $data + '.length ' + $op + ' ' + $schemaValue + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = '';\n  /* istanbul ignore else */\n\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { limit: ' + $schemaValue + ' } ';\n\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n\n      out += ' than ';\n\n      if ($isData) {\n        out += '\\' + ' + $schemaValue + ' + \\'';\n      } else {\n        out += '' + $schema;\n      }\n\n      out += ' items\\' ';\n    }\n\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n\n      if ($isData) {\n        out += 'validate.schema' + $schemaPath;\n      } else {\n        out += '' + $schema;\n      }\n\n      out += '         , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n    }\n\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n\n  var __err = out;\n  out = $$outStack.pop();\n\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + __err + ']); ';\n    } else {\n      out += ' validate.errors = [' + __err + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n\n  out += '} ';\n\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n\n  return out;\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/ajv/lib/dotjs/_limitItems.js"],"names":["module","exports","generate__limitItems","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$errorKeyword","$data","$isData","$schemaValue","getData","dataPathArr","$op","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","async"],"mappings":"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","sourcesContent":["'use strict';\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' items\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}