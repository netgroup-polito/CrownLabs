{"ast":null,"code":"'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = typeof cb == 'function' ? cb : cb.pre || function () {};\n\n  var post = cb.post || function () {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n\n    for (var key in schema) {\n      var sch = schema[key];\n\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i = 0; i < sch.length; i++) _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch) _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || opts.allKeys && !(key in traverse.skipKeywords)) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/json-schema-traverse/index.js"],"names":["traverse","module","exports","schema","opts","cb","pre","post","_traverse","keywords","additionalItems","items","contains","additionalProperties","propertyNames","not","arrayKeywords","allOf","anyOf","oneOf","propsKeywords","definitions","properties","patternProperties","dependencies","skipKeywords","default","enum","const","required","maximum","minimum","exclusiveMaximum","exclusiveMinimum","multipleOf","maxLength","minLength","pattern","format","maxItems","minItems","uniqueItems","maxProperties","minProperties","jsonPtr","rootSchema","parentJsonPtr","parentKeyword","parentSchema","keyIndex","Array","isArray","key","sch","i","length","prop","escapeJsonPtr","allKeys","str","replace"],"mappings":"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","sourcesContent":["'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n"]},"metadata":{},"sourceType":"script"}