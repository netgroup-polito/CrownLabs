{"ast":null,"code":"exports.alphasort = alphasort;\nexports.alphasorti = alphasorti;\nexports.setopts = setopts;\nexports.ownProp = ownProp;\nexports.makeAbs = makeAbs;\nexports.finish = finish;\nexports.mark = mark;\nexports.isIgnored = isIgnored;\nexports.childrenIgnored = childrenIgnored;\n\nfunction ownProp(obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field);\n}\n\nvar path = require(\"path\");\n\nvar minimatch = require(\"minimatch\");\n\nvar isAbsolute = require(\"path-is-absolute\");\n\nvar Minimatch = minimatch.Minimatch;\n\nfunction alphasorti(a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase());\n}\n\nfunction alphasort(a, b) {\n  return a.localeCompare(b);\n}\n\nfunction setupIgnores(self, options) {\n  self.ignore = options.ignore || [];\n  if (!Array.isArray(self.ignore)) self.ignore = [self.ignore];\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap);\n  }\n} // ignore patterns are always in dot:true mode.\n\n\nfunction ignoreMap(pattern) {\n  var gmatcher = null;\n\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '');\n    gmatcher = new Minimatch(gpattern, {\n      dot: true\n    });\n  }\n\n  return {\n    matcher: new Minimatch(pattern, {\n      dot: true\n    }),\n    gmatcher: gmatcher\n  };\n}\n\nfunction setopts(self, pattern, options) {\n  if (!options) options = {}; // base-matching: just use globstar for that.\n\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\");\n    }\n\n    pattern = \"**/\" + pattern;\n  }\n\n  self.silent = !!options.silent;\n  self.pattern = pattern;\n  self.strict = options.strict !== false;\n  self.realpath = !!options.realpath;\n  self.realpathCache = options.realpathCache || Object.create(null);\n  self.follow = !!options.follow;\n  self.dot = !!options.dot;\n  self.mark = !!options.mark;\n  self.nodir = !!options.nodir;\n  if (self.nodir) self.mark = true;\n  self.sync = !!options.sync;\n  self.nounique = !!options.nounique;\n  self.nonull = !!options.nonull;\n  self.nosort = !!options.nosort;\n  self.nocase = !!options.nocase;\n  self.stat = !!options.stat;\n  self.noprocess = !!options.noprocess;\n  self.absolute = !!options.absolute;\n  self.maxLength = options.maxLength || Infinity;\n  self.cache = options.cache || Object.create(null);\n  self.statCache = options.statCache || Object.create(null);\n  self.symlinks = options.symlinks || Object.create(null);\n  setupIgnores(self, options);\n  self.changedCwd = false;\n  var cwd = process.cwd();\n  if (!ownProp(options, \"cwd\")) self.cwd = cwd;else {\n    self.cwd = path.resolve(options.cwd);\n    self.changedCwd = self.cwd !== cwd;\n  }\n  self.root = options.root || path.resolve(self.cwd, \"/\");\n  self.root = path.resolve(self.root);\n  if (process.platform === \"win32\") self.root = self.root.replace(/\\\\/g, \"/\"); // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd);\n  if (process.platform === \"win32\") self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\");\n  self.nomount = !!options.nomount; // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n\n  options.nonegate = true;\n  options.nocomment = true;\n  self.minimatch = new Minimatch(pattern, options);\n  self.options = self.minimatch.options;\n}\n\nfunction finish(self) {\n  var nou = self.nounique;\n  var all = nou ? [] : Object.create(null);\n\n  for (var i = 0, l = self.matches.length; i < l; i++) {\n    var matches = self.matches[i];\n\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i];\n        if (nou) all.push(literal);else all[literal] = true;\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches);\n      if (nou) all.push.apply(all, m);else m.forEach(function (m) {\n        all[m] = true;\n      });\n    }\n  }\n\n  if (!nou) all = Object.keys(all);\n  if (!self.nosort) all = all.sort(self.nocase ? alphasorti : alphasort); // at *some* point we statted all of these\n\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i]);\n    }\n\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !/\\/$/.test(e);\n        var c = self.cache[e] || self.cache[makeAbs(self, e)];\n        if (notDir && c) notDir = c !== 'DIR' && !Array.isArray(c);\n        return notDir;\n      });\n    }\n  }\n\n  if (self.ignore.length) all = all.filter(function (m) {\n    return !isIgnored(self, m);\n  });\n  self.found = all;\n}\n\nfunction mark(self, p) {\n  var abs = makeAbs(self, p);\n  var c = self.cache[abs];\n  var m = p;\n\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c);\n    var slash = p.slice(-1) === '/';\n    if (isDir && !slash) m += '/';else if (!isDir && slash) m = m.slice(0, -1);\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m);\n      self.statCache[mabs] = self.statCache[abs];\n      self.cache[mabs] = self.cache[abs];\n    }\n  }\n\n  return m;\n} // lotta situps...\n\n\nfunction makeAbs(self, f) {\n  var abs = f;\n\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f);\n  } else if (isAbsolute(f) || f === '') {\n    abs = f;\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f);\n  } else {\n    abs = path.resolve(f);\n  }\n\n  if (process.platform === 'win32') abs = abs.replace(/\\\\/g, '/');\n  return abs;\n} // Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\n\n\nfunction isIgnored(self, path) {\n  if (!self.ignore.length) return false;\n  return self.ignore.some(function (item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path));\n  });\n}\n\nfunction childrenIgnored(self, path) {\n  if (!self.ignore.length) return false;\n  return self.ignore.some(function (item) {\n    return !!(item.gmatcher && item.gmatcher.match(path));\n  });\n}","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/glob/common.js"],"names":["exports","alphasort","alphasorti","setopts","ownProp","makeAbs","finish","mark","isIgnored","childrenIgnored","obj","field","Object","prototype","hasOwnProperty","call","path","require","minimatch","isAbsolute","Minimatch","a","b","toLowerCase","localeCompare","setupIgnores","self","options","ignore","Array","isArray","length","map","ignoreMap","pattern","gmatcher","slice","gpattern","replace","dot","matcher","matchBase","indexOf","noglobstar","Error","silent","strict","realpath","realpathCache","create","follow","nodir","sync","nounique","nonull","nosort","nocase","stat","noprocess","absolute","maxLength","Infinity","cache","statCache","symlinks","changedCwd","cwd","process","resolve","root","platform","cwdAbs","nomount","nonegate","nocomment","nou","all","i","l","matches","keys","literal","globSet","push","m","apply","forEach","sort","_mark","filter","e","notDir","test","c","found","p","abs","isDir","slash","mabs","f","charAt","join","some","item","match"],"mappings":"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","sourcesContent":["exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n"]},"metadata":{},"sourceType":"script"}