{"ast":null,"code":"/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer');\n\nvar Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\nfunction copyProps(src, dst) {\n  for (var key in src) {\n    dst[key] = src[key];\n  }\n}\n\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer;\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports);\n  exports.Buffer = SafeBuffer;\n}\n\nfunction SafeBuffer(arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length);\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype); // Copy static methods from Buffer\n\ncopyProps(Buffer, SafeBuffer);\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number');\n  }\n\n  return Buffer(arg, encodingOrOffset, length);\n};\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  var buf = Buffer(size);\n\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n  } else {\n    buf.fill(0);\n  }\n\n  return buf;\n};\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return Buffer(size);\n};\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return buffer.SlowBuffer(size);\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/string_decoder/node_modules/safe-buffer/index.js"],"names":["buffer","require","Buffer","copyProps","src","dst","key","from","alloc","allocUnsafe","allocUnsafeSlow","module","exports","SafeBuffer","arg","encodingOrOffset","length","prototype","Object","create","TypeError","size","fill","encoding","buf","undefined","SlowBuffer"],"mappings":"AAAA;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,MAAM,GAAGF,MAAM,CAACE,MAApB,C,CAEA;;AACA,SAASC,SAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B,OAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACnBC,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWF,GAAG,CAACE,GAAD,CAAd;AACD;AACF;;AACD,IAAIJ,MAAM,CAACK,IAAP,IAAeL,MAAM,CAACM,KAAtB,IAA+BN,MAAM,CAACO,WAAtC,IAAqDP,MAAM,CAACQ,eAAhE,EAAiF;AAC/EC,EAAAA,MAAM,CAACC,OAAP,GAAiBZ,MAAjB;AACD,CAFD,MAEO;AACL;AACAG,EAAAA,SAAS,CAACH,MAAD,EAASY,OAAT,CAAT;AACAA,EAAAA,OAAO,CAACV,MAAR,GAAiBW,UAAjB;AACD;;AAED,SAASA,UAAT,CAAqBC,GAArB,EAA0BC,gBAA1B,EAA4CC,MAA5C,EAAoD;AAClD,SAAOd,MAAM,CAACY,GAAD,EAAMC,gBAAN,EAAwBC,MAAxB,CAAb;AACD;;AAEDH,UAAU,CAACI,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAcjB,MAAM,CAACe,SAArB,CAAvB,C,CAEA;;AACAd,SAAS,CAACD,MAAD,EAASW,UAAT,CAAT;;AAEAA,UAAU,CAACN,IAAX,GAAkB,UAAUO,GAAV,EAAeC,gBAAf,EAAiCC,MAAjC,EAAyC;AACzD,MAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIM,SAAJ,CAAc,+BAAd,CAAN;AACD;;AACD,SAAOlB,MAAM,CAACY,GAAD,EAAMC,gBAAN,EAAwBC,MAAxB,CAAb;AACD,CALD;;AAOAH,UAAU,CAACL,KAAX,GAAmB,UAAUa,IAAV,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;AACjD,MAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAID,SAAJ,CAAc,2BAAd,CAAN;AACD;;AACD,MAAII,GAAG,GAAGtB,MAAM,CAACmB,IAAD,CAAhB;;AACA,MAAIC,IAAI,KAAKG,SAAb,EAAwB;AACtB,QAAI,OAAOF,QAAP,KAAoB,QAAxB,EAAkC;AAChCC,MAAAA,GAAG,CAACF,IAAJ,CAASA,IAAT,EAAeC,QAAf;AACD,KAFD,MAEO;AACLC,MAAAA,GAAG,CAACF,IAAJ,CAASA,IAAT;AACD;AACF,GAND,MAMO;AACLE,IAAAA,GAAG,CAACF,IAAJ,CAAS,CAAT;AACD;;AACD,SAAOE,GAAP;AACD,CAfD;;AAiBAX,UAAU,CAACJ,WAAX,GAAyB,UAAUY,IAAV,EAAgB;AACvC,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAID,SAAJ,CAAc,2BAAd,CAAN;AACD;;AACD,SAAOlB,MAAM,CAACmB,IAAD,CAAb;AACD,CALD;;AAOAR,UAAU,CAACH,eAAX,GAA6B,UAAUW,IAAV,EAAgB;AAC3C,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAID,SAAJ,CAAc,2BAAd,CAAN;AACD;;AACD,SAAOpB,MAAM,CAAC0B,UAAP,CAAkBL,IAAlB,CAAP;AACD,CALD","sourcesContent":["/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n"]},"metadata":{},"sourceType":"script"}