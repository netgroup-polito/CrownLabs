{"ast":null,"code":"'use strict';\n\nfunction posix(path) {\n  return path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n  // https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n  var splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n  var result = splitDeviceRe.exec(path);\n  var device = result[1] || '';\n  var isUnc = Boolean(device && device.charAt(1) !== ':'); // UNC paths are always absolute\n\n  return Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/path-is-absolute/index.js"],"names":["posix","path","charAt","win32","splitDeviceRe","result","exec","device","isUnc","Boolean","module","exports","process","platform"],"mappings":"AAAA;;AAEA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACpB,SAAOA,IAAI,CAACC,MAAL,CAAY,CAAZ,MAAmB,GAA1B;AACA;;AAED,SAASC,KAAT,CAAeF,IAAf,EAAqB;AACpB;AACA,MAAIG,aAAa,GAAG,oEAApB;AACA,MAAIC,MAAM,GAAGD,aAAa,CAACE,IAAd,CAAmBL,IAAnB,CAAb;AACA,MAAIM,MAAM,GAAGF,MAAM,CAAC,CAAD,CAAN,IAAa,EAA1B;AACA,MAAIG,KAAK,GAAGC,OAAO,CAACF,MAAM,IAAIA,MAAM,CAACL,MAAP,CAAc,CAAd,MAAqB,GAAhC,CAAnB,CALoB,CAOpB;;AACA,SAAOO,OAAO,CAACJ,MAAM,CAAC,CAAD,CAAN,IAAaG,KAAd,CAAd;AACA;;AAEDE,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAACC,QAAR,KAAqB,OAArB,GAA+BV,KAA/B,GAAuCH,KAAxD;AACAU,MAAM,CAACC,OAAP,CAAeX,KAAf,GAAuBA,KAAvB;AACAU,MAAM,CAACC,OAAP,CAAeR,KAAf,GAAuBA,KAAvB","sourcesContent":["'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n"]},"metadata":{},"sourceType":"script"}