{"ast":null,"code":"(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa; // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa; // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w; // Scan 24-bit chunks and add them to the number\n\n    var off = 0;\n\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/bn.js/lib/bn.js"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","wordSize","Buffer","require","e","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","strip","toArray","Math","ceil","i","j","w","off","parseHex","str","end","r","len","c","charCodeAt","parseBase","mul","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","b","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","self","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","mulTo","x","y","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","ireduce","rlen","split","imulK","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u"],"mappings":"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","sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"]},"metadata":{},"sourceType":"script"}