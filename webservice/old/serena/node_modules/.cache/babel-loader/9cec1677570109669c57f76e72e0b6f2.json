{"ast":null,"code":"'use strict'; // rfc7231 6.1\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar statusCodeCacheableByDefault = [200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501]; // This implementation does not understand partial responses (206)\n\nvar understoodStatuses = [200, 203, 204, 300, 301, 302, 303, 307, 308, 404, 405, 410, 414, 501];\nvar hopByHopHeaders = {\n  'connection': true,\n  'keep-alive': true,\n  'proxy-authenticate': true,\n  'proxy-authorization': true,\n  'te': true,\n  'trailer': true,\n  'transfer-encoding': true,\n  'upgrade': true\n};\nvar excludedFromRevalidationUpdate = {\n  // Since the old body is reused, it doesn't make sense to change properties of the body\n  'content-length': true,\n  'content-encoding': true,\n  'transfer-encoding': true,\n  'content-range': true\n};\n\nfunction parseCacheControl(header) {\n  var cc = {};\n  if (!header) return cc; // TODO: When there is more than one value present for a given directive (e.g., two Expires header fields, multiple Cache-Control: max-age directives),\n  // the directive's value is considered invalid. Caches are encouraged to consider responses that have invalid freshness information to be stale\n\n  var parts = header.trim().split(/\\s*,\\s*/); // TODO: lame parsing\n\n  for (var _iterator = parts, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var part = _ref;\n\n    var _part$split = part.split(/\\s*=\\s*/, 2),\n        k = _part$split[0],\n        v = _part$split[1];\n\n    cc[k] = v === undefined ? true : v.replace(/^\"|\"$/g, ''); // TODO: lame unquoting\n  }\n\n  return cc;\n}\n\nfunction formatCacheControl(cc) {\n  var parts = [];\n\n  for (var k in cc) {\n    var v = cc[k];\n    parts.push(v === true ? k : k + '=' + v);\n  }\n\n  if (!parts.length) {\n    return undefined;\n  }\n\n  return parts.join(', ');\n}\n\nmodule.exports = function () {\n  function CachePolicy(req, res) {\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        shared = _ref2.shared,\n        cacheHeuristic = _ref2.cacheHeuristic,\n        immutableMinTimeToLive = _ref2.immutableMinTimeToLive,\n        ignoreCargoCult = _ref2.ignoreCargoCult,\n        _fromObject = _ref2._fromObject;\n\n    _classCallCheck(this, CachePolicy);\n\n    if (_fromObject) {\n      this._fromObject(_fromObject);\n\n      return;\n    }\n\n    if (!res || !res.headers) {\n      throw Error(\"Response headers missing\");\n    }\n\n    this._assertRequestHasHeaders(req);\n\n    this._responseTime = this.now();\n    this._isShared = shared !== false;\n    this._cacheHeuristic = undefined !== cacheHeuristic ? cacheHeuristic : 0.1; // 10% matches IE\n\n    this._immutableMinTtl = undefined !== immutableMinTimeToLive ? immutableMinTimeToLive : 24 * 3600 * 1000;\n    this._status = 'status' in res ? res.status : 200;\n    this._resHeaders = res.headers;\n    this._rescc = parseCacheControl(res.headers['cache-control']);\n    this._method = 'method' in req ? req.method : 'GET';\n    this._url = req.url;\n    this._host = req.headers.host;\n    this._noAuthorization = !req.headers.authorization;\n    this._reqHeaders = res.headers.vary ? req.headers : null; // Don't keep all request headers if they won't be used\n\n    this._reqcc = parseCacheControl(req.headers['cache-control']); // Assume that if someone uses legacy, non-standard uncecessary options they don't understand caching,\n    // so there's no point stricly adhering to the blindly copy&pasted directives.\n\n    if (ignoreCargoCult && \"pre-check\" in this._rescc && \"post-check\" in this._rescc) {\n      delete this._rescc['pre-check'];\n      delete this._rescc['post-check'];\n      delete this._rescc['no-cache'];\n      delete this._rescc['no-store'];\n      delete this._rescc['must-revalidate'];\n      this._resHeaders = Object.assign({}, this._resHeaders, {\n        'cache-control': formatCacheControl(this._rescc)\n      });\n      delete this._resHeaders.expires;\n      delete this._resHeaders.pragma;\n    } // When the Cache-Control header field is not present in a request, caches MUST consider the no-cache request pragma-directive\n    // as having the same effect as if \"Cache-Control: no-cache\" were present (see Section 5.2.1).\n\n\n    if (!res.headers['cache-control'] && /no-cache/.test(res.headers.pragma)) {\n      this._rescc['no-cache'] = true;\n    }\n  }\n\n  CachePolicy.prototype.now = function now() {\n    return Date.now();\n  };\n\n  CachePolicy.prototype.storable = function storable() {\n    // The \"no-store\" request directive indicates that a cache MUST NOT store any part of either this request or any response to it.\n    return !!(!this._reqcc['no-store'] && ( // A cache MUST NOT store a response to any request, unless:\n    // The request method is understood by the cache and defined as being cacheable, and\n    'GET' === this._method || 'HEAD' === this._method || 'POST' === this._method && this._hasExplicitExpiration()) && // the response status code is understood by the cache, and\n    understoodStatuses.indexOf(this._status) !== -1 && // the \"no-store\" cache directive does not appear in request or response header fields, and\n    !this._rescc['no-store'] && ( // the \"private\" response directive does not appear in the response, if the cache is shared, and\n    !this._isShared || !this._rescc.private) && ( // the Authorization header field does not appear in the request, if the cache is shared,\n    !this._isShared || this._noAuthorization || this._allowsStoringAuthenticated()) && ( // the response either:\n    // contains an Expires header field, or\n    this._resHeaders.expires || // contains a max-age response directive, or\n    // contains a s-maxage response directive and the cache is shared, or\n    // contains a public response directive.\n    this._rescc.public || this._rescc['max-age'] || this._rescc['s-maxage'] || // has a status code that is defined as cacheable by default\n    statusCodeCacheableByDefault.indexOf(this._status) !== -1));\n  };\n\n  CachePolicy.prototype._hasExplicitExpiration = function _hasExplicitExpiration() {\n    // 4.2.1 Calculating Freshness Lifetime\n    return this._isShared && this._rescc['s-maxage'] || this._rescc['max-age'] || this._resHeaders.expires;\n  };\n\n  CachePolicy.prototype._assertRequestHasHeaders = function _assertRequestHasHeaders(req) {\n    if (!req || !req.headers) {\n      throw Error(\"Request headers missing\");\n    }\n  };\n\n  CachePolicy.prototype.satisfiesWithoutRevalidation = function satisfiesWithoutRevalidation(req) {\n    this._assertRequestHasHeaders(req); // When presented with a request, a cache MUST NOT reuse a stored response, unless:\n    // the presented request does not contain the no-cache pragma (Section 5.4), nor the no-cache cache directive,\n    // unless the stored response is successfully validated (Section 4.3), and\n\n\n    var requestCC = parseCacheControl(req.headers['cache-control']);\n\n    if (requestCC['no-cache'] || /no-cache/.test(req.headers.pragma)) {\n      return false;\n    }\n\n    if (requestCC['max-age'] && this.age() > requestCC['max-age']) {\n      return false;\n    }\n\n    if (requestCC['min-fresh'] && this.timeToLive() < 1000 * requestCC['min-fresh']) {\n      return false;\n    } // the stored response is either:\n    // fresh, or allowed to be served stale\n\n\n    if (this.stale()) {\n      var allowsStale = requestCC['max-stale'] && !this._rescc['must-revalidate'] && (true === requestCC['max-stale'] || requestCC['max-stale'] > this.age() - this.maxAge());\n\n      if (!allowsStale) {\n        return false;\n      }\n    }\n\n    return this._requestMatches(req, false);\n  };\n\n  CachePolicy.prototype._requestMatches = function _requestMatches(req, allowHeadMethod) {\n    // The presented effective request URI and that of the stored response match, and\n    return (!this._url || this._url === req.url) && this._host === req.headers.host && ( // the request method associated with the stored response allows it to be used for the presented request, and\n    !req.method || this._method === req.method || allowHeadMethod && 'HEAD' === req.method) && // selecting header fields nominated by the stored response (if any) match those presented, and\n    this._varyMatches(req);\n  };\n\n  CachePolicy.prototype._allowsStoringAuthenticated = function _allowsStoringAuthenticated() {\n    //  following Cache-Control response directives (Section 5.2.2) have such an effect: must-revalidate, public, and s-maxage.\n    return this._rescc['must-revalidate'] || this._rescc.public || this._rescc['s-maxage'];\n  };\n\n  CachePolicy.prototype._varyMatches = function _varyMatches(req) {\n    if (!this._resHeaders.vary) {\n      return true;\n    } // A Vary header field-value of \"*\" always fails to match\n\n\n    if (this._resHeaders.vary === '*') {\n      return false;\n    }\n\n    var fields = this._resHeaders.vary.trim().toLowerCase().split(/\\s*,\\s*/);\n\n    for (var _iterator2 = fields, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var name = _ref3;\n      if (req.headers[name] !== this._reqHeaders[name]) return false;\n    }\n\n    return true;\n  };\n\n  CachePolicy.prototype._copyWithoutHopByHopHeaders = function _copyWithoutHopByHopHeaders(inHeaders) {\n    var headers = {};\n\n    for (var name in inHeaders) {\n      if (hopByHopHeaders[name]) continue;\n      headers[name] = inHeaders[name];\n    } // 9.1.  Connection\n\n\n    if (inHeaders.connection) {\n      var tokens = inHeaders.connection.trim().split(/\\s*,\\s*/);\n\n      for (var _iterator3 = tokens, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref4 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref4 = _i3.value;\n        }\n\n        var _name = _ref4;\n        delete headers[_name];\n      }\n    }\n\n    if (headers.warning) {\n      var warnings = headers.warning.split(/,/).filter(function (warning) {\n        return !/^\\s*1[0-9][0-9]/.test(warning);\n      });\n\n      if (!warnings.length) {\n        delete headers.warning;\n      } else {\n        headers.warning = warnings.join(',').trim();\n      }\n    }\n\n    return headers;\n  };\n\n  CachePolicy.prototype.responseHeaders = function responseHeaders() {\n    var headers = this._copyWithoutHopByHopHeaders(this._resHeaders);\n\n    var age = this.age(); // A cache SHOULD generate 113 warning if it heuristically chose a freshness\n    // lifetime greater than 24 hours and the response's age is greater than 24 hours.\n\n    if (age > 3600 * 24 && !this._hasExplicitExpiration() && this.maxAge() > 3600 * 24) {\n      headers.warning = (headers.warning ? `${headers.warning}, ` : '') + '113 - \"rfc7234 5.5.4\"';\n    }\n\n    headers.age = `${Math.round(age)}`;\n    return headers;\n  };\n  /**\n   * Value of the Date response header or current time if Date was demed invalid\n   * @return timestamp\n   */\n\n\n  CachePolicy.prototype.date = function date() {\n    var dateValue = Date.parse(this._resHeaders.date);\n    var maxClockDrift = 8 * 3600 * 1000;\n\n    if (Number.isNaN(dateValue) || dateValue < this._responseTime - maxClockDrift || dateValue > this._responseTime + maxClockDrift) {\n      return this._responseTime;\n    }\n\n    return dateValue;\n  };\n  /**\n   * Value of the Age header, in seconds, updated for the current time.\n   * May be fractional.\n   *\n   * @return Number\n   */\n\n\n  CachePolicy.prototype.age = function age() {\n    var age = Math.max(0, (this._responseTime - this.date()) / 1000);\n\n    if (this._resHeaders.age) {\n      var ageValue = this._ageValue();\n\n      if (ageValue > age) age = ageValue;\n    }\n\n    var residentTime = (this.now() - this._responseTime) / 1000;\n    return age + residentTime;\n  };\n\n  CachePolicy.prototype._ageValue = function _ageValue() {\n    var ageValue = parseInt(this._resHeaders.age);\n    return isFinite(ageValue) ? ageValue : 0;\n  };\n  /**\n   * Value of applicable max-age (or heuristic equivalent) in seconds. This counts since response's `Date`.\n   *\n   * For an up-to-date value, see `timeToLive()`.\n   *\n   * @return Number\n   */\n\n\n  CachePolicy.prototype.maxAge = function maxAge() {\n    if (!this.storable() || this._rescc['no-cache']) {\n      return 0;\n    } // Shared responses with cookies are cacheable according to the RFC, but IMHO it'd be unwise to do so by default\n    // so this implementation requires explicit opt-in via public header\n\n\n    if (this._isShared && this._resHeaders['set-cookie'] && !this._rescc.public && !this._rescc.immutable) {\n      return 0;\n    }\n\n    if (this._resHeaders.vary === '*') {\n      return 0;\n    }\n\n    if (this._isShared) {\n      if (this._rescc['proxy-revalidate']) {\n        return 0;\n      } // if a response includes the s-maxage directive, a shared cache recipient MUST ignore the Expires field.\n\n\n      if (this._rescc['s-maxage']) {\n        return parseInt(this._rescc['s-maxage'], 10);\n      }\n    } // If a response includes a Cache-Control field with the max-age directive, a recipient MUST ignore the Expires field.\n\n\n    if (this._rescc['max-age']) {\n      return parseInt(this._rescc['max-age'], 10);\n    }\n\n    var defaultMinTtl = this._rescc.immutable ? this._immutableMinTtl : 0;\n    var dateValue = this.date();\n\n    if (this._resHeaders.expires) {\n      var expires = Date.parse(this._resHeaders.expires); // A cache recipient MUST interpret invalid date formats, especially the value \"0\", as representing a time in the past (i.e., \"already expired\").\n\n      if (Number.isNaN(expires) || expires < dateValue) {\n        return 0;\n      }\n\n      return Math.max(defaultMinTtl, (expires - dateValue) / 1000);\n    }\n\n    if (this._resHeaders['last-modified']) {\n      var lastModified = Date.parse(this._resHeaders['last-modified']);\n\n      if (isFinite(lastModified) && dateValue > lastModified) {\n        return Math.max(defaultMinTtl, (dateValue - lastModified) / 1000 * this._cacheHeuristic);\n      }\n    }\n\n    return defaultMinTtl;\n  };\n\n  CachePolicy.prototype.timeToLive = function timeToLive() {\n    return Math.max(0, this.maxAge() - this.age()) * 1000;\n  };\n\n  CachePolicy.prototype.stale = function stale() {\n    return this.maxAge() <= this.age();\n  };\n\n  CachePolicy.fromObject = function fromObject(obj) {\n    return new this(undefined, undefined, {\n      _fromObject: obj\n    });\n  };\n\n  CachePolicy.prototype._fromObject = function _fromObject(obj) {\n    if (this._responseTime) throw Error(\"Reinitialized\");\n    if (!obj || obj.v !== 1) throw Error(\"Invalid serialization\");\n    this._responseTime = obj.t;\n    this._isShared = obj.sh;\n    this._cacheHeuristic = obj.ch;\n    this._immutableMinTtl = obj.imm !== undefined ? obj.imm : 24 * 3600 * 1000;\n    this._status = obj.st;\n    this._resHeaders = obj.resh;\n    this._rescc = obj.rescc;\n    this._method = obj.m;\n    this._url = obj.u;\n    this._host = obj.h;\n    this._noAuthorization = obj.a;\n    this._reqHeaders = obj.reqh;\n    this._reqcc = obj.reqcc;\n  };\n\n  CachePolicy.prototype.toObject = function toObject() {\n    return {\n      v: 1,\n      t: this._responseTime,\n      sh: this._isShared,\n      ch: this._cacheHeuristic,\n      imm: this._immutableMinTtl,\n      st: this._status,\n      resh: this._resHeaders,\n      rescc: this._rescc,\n      m: this._method,\n      u: this._url,\n      h: this._host,\n      a: this._noAuthorization,\n      reqh: this._reqHeaders,\n      reqcc: this._reqcc\n    };\n  };\n  /**\n   * Headers for sending to the origin server to revalidate stale response.\n   * Allows server to return 304 to allow reuse of the previous response.\n   *\n   * Hop by hop headers are always stripped.\n   * Revalidation headers may be added or removed, depending on request.\n   */\n\n\n  CachePolicy.prototype.revalidationHeaders = function revalidationHeaders(incomingReq) {\n    this._assertRequestHasHeaders(incomingReq);\n\n    var headers = this._copyWithoutHopByHopHeaders(incomingReq.headers); // This implementation does not understand range requests\n\n\n    delete headers['if-range'];\n\n    if (!this._requestMatches(incomingReq, true) || !this.storable()) {\n      // revalidation allowed via HEAD\n      // not for the same resource, or wasn't allowed to be cached anyway\n      delete headers['if-none-match'];\n      delete headers['if-modified-since'];\n      return headers;\n    }\n    /* MUST send that entity-tag in any cache validation request (using If-Match or If-None-Match) if an entity-tag has been provided by the origin server. */\n\n\n    if (this._resHeaders.etag) {\n      headers['if-none-match'] = headers['if-none-match'] ? `${headers['if-none-match']}, ${this._resHeaders.etag}` : this._resHeaders.etag;\n    } // Clients MAY issue simple (non-subrange) GET requests with either weak validators or strong validators. Clients MUST NOT use weak validators in other forms of request.\n\n\n    var forbidsWeakValidators = headers['accept-ranges'] || headers['if-match'] || headers['if-unmodified-since'] || this._method && this._method != 'GET';\n    /* SHOULD send the Last-Modified value in non-subrange cache validation requests (using If-Modified-Since) if only a Last-Modified value has been provided by the origin server.\n    Note: This implementation does not understand partial responses (206) */\n\n    if (forbidsWeakValidators) {\n      delete headers['if-modified-since'];\n\n      if (headers['if-none-match']) {\n        var etags = headers['if-none-match'].split(/,/).filter(function (etag) {\n          return !/^\\s*W\\//.test(etag);\n        });\n\n        if (!etags.length) {\n          delete headers['if-none-match'];\n        } else {\n          headers['if-none-match'] = etags.join(',').trim();\n        }\n      }\n    } else if (this._resHeaders['last-modified'] && !headers['if-modified-since']) {\n      headers['if-modified-since'] = this._resHeaders['last-modified'];\n    }\n\n    return headers;\n  };\n  /**\n   * Creates new CachePolicy with information combined from the previews response,\n   * and the new revalidation response.\n   *\n   * Returns {policy, modified} where modified is a boolean indicating\n   * whether the response body has been modified, and old cached body can't be used.\n   *\n   * @return {Object} {policy: CachePolicy, modified: Boolean}\n   */\n\n\n  CachePolicy.prototype.revalidatedPolicy = function revalidatedPolicy(request, response) {\n    this._assertRequestHasHeaders(request);\n\n    if (!response || !response.headers) {\n      throw Error(\"Response headers missing\");\n    } // These aren't going to be supported exactly, since one CachePolicy object\n    // doesn't know about all the other cached objects.\n\n\n    var matches = false;\n\n    if (response.status !== undefined && response.status != 304) {\n      matches = false;\n    } else if (response.headers.etag && !/^\\s*W\\//.test(response.headers.etag)) {\n      // \"All of the stored responses with the same strong validator are selected.\n      // If none of the stored responses contain the same strong validator,\n      // then the cache MUST NOT use the new response to update any stored responses.\"\n      matches = this._resHeaders.etag && this._resHeaders.etag.replace(/^\\s*W\\//, '') === response.headers.etag;\n    } else if (this._resHeaders.etag && response.headers.etag) {\n      // \"If the new response contains a weak validator and that validator corresponds\n      // to one of the cache's stored responses,\n      // then the most recent of those matching stored responses is selected for update.\"\n      matches = this._resHeaders.etag.replace(/^\\s*W\\//, '') === response.headers.etag.replace(/^\\s*W\\//, '');\n    } else if (this._resHeaders['last-modified']) {\n      matches = this._resHeaders['last-modified'] === response.headers['last-modified'];\n    } else {\n      // If the new response does not include any form of validator (such as in the case where\n      // a client generates an If-Modified-Since request from a source other than the Last-Modified\n      // response header field), and there is only one stored response, and that stored response also\n      // lacks a validator, then that stored response is selected for update.\n      if (!this._resHeaders.etag && !this._resHeaders['last-modified'] && !response.headers.etag && !response.headers['last-modified']) {\n        matches = true;\n      }\n    }\n\n    if (!matches) {\n      return {\n        policy: new this.constructor(request, response),\n        modified: true\n      };\n    } // use other header fields provided in the 304 (Not Modified) response to replace all instances\n    // of the corresponding header fields in the stored response.\n\n\n    var headers = {};\n\n    for (var k in this._resHeaders) {\n      headers[k] = k in response.headers && !excludedFromRevalidationUpdate[k] ? response.headers[k] : this._resHeaders[k];\n    }\n\n    var newResponse = Object.assign({}, response, {\n      status: this._status,\n      method: this._method,\n      headers\n    });\n    return {\n      policy: new this.constructor(request, newResponse),\n      modified: false\n    };\n  };\n\n  return CachePolicy;\n}();","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/http-cache-semantics/node4/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","statusCodeCacheableByDefault","understoodStatuses","hopByHopHeaders","excludedFromRevalidationUpdate","parseCacheControl","header","cc","parts","trim","split","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","part","_part$split","k","v","undefined","replace","formatCacheControl","push","join","module","exports","CachePolicy","req","res","_ref2","arguments","shared","cacheHeuristic","immutableMinTimeToLive","ignoreCargoCult","_fromObject","headers","Error","_assertRequestHasHeaders","_responseTime","now","_isShared","_cacheHeuristic","_immutableMinTtl","_status","status","_resHeaders","_rescc","_method","method","_url","url","_host","host","_noAuthorization","authorization","_reqHeaders","vary","_reqcc","Object","assign","expires","pragma","test","prototype","Date","storable","_hasExplicitExpiration","indexOf","private","_allowsStoringAuthenticated","public","satisfiesWithoutRevalidation","requestCC","age","timeToLive","stale","allowsStale","maxAge","_requestMatches","allowHeadMethod","_varyMatches","fields","toLowerCase","_iterator2","_isArray2","_i2","_ref3","name","_copyWithoutHopByHopHeaders","inHeaders","connection","tokens","_iterator3","_isArray3","_i3","_ref4","_name","warning","warnings","filter","responseHeaders","Math","round","date","dateValue","parse","maxClockDrift","Number","isNaN","max","ageValue","_ageValue","residentTime","parseInt","isFinite","immutable","defaultMinTtl","lastModified","fromObject","obj","t","sh","ch","imm","st","resh","rescc","m","u","h","a","reqh","reqcc","toObject","revalidationHeaders","incomingReq","etag","forbidsWeakValidators","etags","revalidatedPolicy","request","response","matches","policy","constructor","modified","newResponse"],"mappings":"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","sourcesContent":["'use strict';\n// rfc7231 6.1\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar statusCodeCacheableByDefault = [200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501];\n\n// This implementation does not understand partial responses (206)\nvar understoodStatuses = [200, 203, 204, 300, 301, 302, 303, 307, 308, 404, 405, 410, 414, 501];\n\nvar hopByHopHeaders = { 'connection': true, 'keep-alive': true, 'proxy-authenticate': true, 'proxy-authorization': true, 'te': true, 'trailer': true, 'transfer-encoding': true, 'upgrade': true };\nvar excludedFromRevalidationUpdate = {\n    // Since the old body is reused, it doesn't make sense to change properties of the body\n    'content-length': true, 'content-encoding': true, 'transfer-encoding': true,\n    'content-range': true\n};\n\nfunction parseCacheControl(header) {\n    var cc = {};\n    if (!header) return cc;\n\n    // TODO: When there is more than one value present for a given directive (e.g., two Expires header fields, multiple Cache-Control: max-age directives),\n    // the directive's value is considered invalid. Caches are encouraged to consider responses that have invalid freshness information to be stale\n    var parts = header.trim().split(/\\s*,\\s*/); // TODO: lame parsing\n    for (var _iterator = parts, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n        } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n        }\n\n        var part = _ref;\n\n        var _part$split = part.split(/\\s*=\\s*/, 2),\n            k = _part$split[0],\n            v = _part$split[1];\n\n        cc[k] = v === undefined ? true : v.replace(/^\"|\"$/g, ''); // TODO: lame unquoting\n    }\n\n    return cc;\n}\n\nfunction formatCacheControl(cc) {\n    var parts = [];\n    for (var k in cc) {\n        var v = cc[k];\n        parts.push(v === true ? k : k + '=' + v);\n    }\n    if (!parts.length) {\n        return undefined;\n    }\n    return parts.join(', ');\n}\n\nmodule.exports = function () {\n    function CachePolicy(req, res) {\n        var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n            shared = _ref2.shared,\n            cacheHeuristic = _ref2.cacheHeuristic,\n            immutableMinTimeToLive = _ref2.immutableMinTimeToLive,\n            ignoreCargoCult = _ref2.ignoreCargoCult,\n            _fromObject = _ref2._fromObject;\n\n        _classCallCheck(this, CachePolicy);\n\n        if (_fromObject) {\n            this._fromObject(_fromObject);\n            return;\n        }\n\n        if (!res || !res.headers) {\n            throw Error(\"Response headers missing\");\n        }\n        this._assertRequestHasHeaders(req);\n\n        this._responseTime = this.now();\n        this._isShared = shared !== false;\n        this._cacheHeuristic = undefined !== cacheHeuristic ? cacheHeuristic : 0.1; // 10% matches IE\n        this._immutableMinTtl = undefined !== immutableMinTimeToLive ? immutableMinTimeToLive : 24 * 3600 * 1000;\n\n        this._status = 'status' in res ? res.status : 200;\n        this._resHeaders = res.headers;\n        this._rescc = parseCacheControl(res.headers['cache-control']);\n        this._method = 'method' in req ? req.method : 'GET';\n        this._url = req.url;\n        this._host = req.headers.host;\n        this._noAuthorization = !req.headers.authorization;\n        this._reqHeaders = res.headers.vary ? req.headers : null; // Don't keep all request headers if they won't be used\n        this._reqcc = parseCacheControl(req.headers['cache-control']);\n\n        // Assume that if someone uses legacy, non-standard uncecessary options they don't understand caching,\n        // so there's no point stricly adhering to the blindly copy&pasted directives.\n        if (ignoreCargoCult && \"pre-check\" in this._rescc && \"post-check\" in this._rescc) {\n            delete this._rescc['pre-check'];\n            delete this._rescc['post-check'];\n            delete this._rescc['no-cache'];\n            delete this._rescc['no-store'];\n            delete this._rescc['must-revalidate'];\n            this._resHeaders = Object.assign({}, this._resHeaders, { 'cache-control': formatCacheControl(this._rescc) });\n            delete this._resHeaders.expires;\n            delete this._resHeaders.pragma;\n        }\n\n        // When the Cache-Control header field is not present in a request, caches MUST consider the no-cache request pragma-directive\n        // as having the same effect as if \"Cache-Control: no-cache\" were present (see Section 5.2.1).\n        if (!res.headers['cache-control'] && /no-cache/.test(res.headers.pragma)) {\n            this._rescc['no-cache'] = true;\n        }\n    }\n\n    CachePolicy.prototype.now = function now() {\n        return Date.now();\n    };\n\n    CachePolicy.prototype.storable = function storable() {\n        // The \"no-store\" request directive indicates that a cache MUST NOT store any part of either this request or any response to it.\n        return !!(!this._reqcc['no-store'] && (\n        // A cache MUST NOT store a response to any request, unless:\n        // The request method is understood by the cache and defined as being cacheable, and\n        'GET' === this._method || 'HEAD' === this._method || 'POST' === this._method && this._hasExplicitExpiration()) &&\n        // the response status code is understood by the cache, and\n        understoodStatuses.indexOf(this._status) !== -1 &&\n        // the \"no-store\" cache directive does not appear in request or response header fields, and\n        !this._rescc['no-store'] && (\n        // the \"private\" response directive does not appear in the response, if the cache is shared, and\n        !this._isShared || !this._rescc.private) && (\n        // the Authorization header field does not appear in the request, if the cache is shared,\n        !this._isShared || this._noAuthorization || this._allowsStoringAuthenticated()) && (\n        // the response either:\n\n        // contains an Expires header field, or\n        this._resHeaders.expires ||\n        // contains a max-age response directive, or\n        // contains a s-maxage response directive and the cache is shared, or\n        // contains a public response directive.\n        this._rescc.public || this._rescc['max-age'] || this._rescc['s-maxage'] ||\n        // has a status code that is defined as cacheable by default\n        statusCodeCacheableByDefault.indexOf(this._status) !== -1));\n    };\n\n    CachePolicy.prototype._hasExplicitExpiration = function _hasExplicitExpiration() {\n        // 4.2.1 Calculating Freshness Lifetime\n        return this._isShared && this._rescc['s-maxage'] || this._rescc['max-age'] || this._resHeaders.expires;\n    };\n\n    CachePolicy.prototype._assertRequestHasHeaders = function _assertRequestHasHeaders(req) {\n        if (!req || !req.headers) {\n            throw Error(\"Request headers missing\");\n        }\n    };\n\n    CachePolicy.prototype.satisfiesWithoutRevalidation = function satisfiesWithoutRevalidation(req) {\n        this._assertRequestHasHeaders(req);\n\n        // When presented with a request, a cache MUST NOT reuse a stored response, unless:\n        // the presented request does not contain the no-cache pragma (Section 5.4), nor the no-cache cache directive,\n        // unless the stored response is successfully validated (Section 4.3), and\n        var requestCC = parseCacheControl(req.headers['cache-control']);\n        if (requestCC['no-cache'] || /no-cache/.test(req.headers.pragma)) {\n            return false;\n        }\n\n        if (requestCC['max-age'] && this.age() > requestCC['max-age']) {\n            return false;\n        }\n\n        if (requestCC['min-fresh'] && this.timeToLive() < 1000 * requestCC['min-fresh']) {\n            return false;\n        }\n\n        // the stored response is either:\n        // fresh, or allowed to be served stale\n        if (this.stale()) {\n            var allowsStale = requestCC['max-stale'] && !this._rescc['must-revalidate'] && (true === requestCC['max-stale'] || requestCC['max-stale'] > this.age() - this.maxAge());\n            if (!allowsStale) {\n                return false;\n            }\n        }\n\n        return this._requestMatches(req, false);\n    };\n\n    CachePolicy.prototype._requestMatches = function _requestMatches(req, allowHeadMethod) {\n        // The presented effective request URI and that of the stored response match, and\n        return (!this._url || this._url === req.url) && this._host === req.headers.host && (\n        // the request method associated with the stored response allows it to be used for the presented request, and\n        !req.method || this._method === req.method || allowHeadMethod && 'HEAD' === req.method) &&\n        // selecting header fields nominated by the stored response (if any) match those presented, and\n        this._varyMatches(req);\n    };\n\n    CachePolicy.prototype._allowsStoringAuthenticated = function _allowsStoringAuthenticated() {\n        //  following Cache-Control response directives (Section 5.2.2) have such an effect: must-revalidate, public, and s-maxage.\n        return this._rescc['must-revalidate'] || this._rescc.public || this._rescc['s-maxage'];\n    };\n\n    CachePolicy.prototype._varyMatches = function _varyMatches(req) {\n        if (!this._resHeaders.vary) {\n            return true;\n        }\n\n        // A Vary header field-value of \"*\" always fails to match\n        if (this._resHeaders.vary === '*') {\n            return false;\n        }\n\n        var fields = this._resHeaders.vary.trim().toLowerCase().split(/\\s*,\\s*/);\n        for (var _iterator2 = fields, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref3;\n\n            if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref3 = _iterator2[_i2++];\n            } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref3 = _i2.value;\n            }\n\n            var name = _ref3;\n\n            if (req.headers[name] !== this._reqHeaders[name]) return false;\n        }\n        return true;\n    };\n\n    CachePolicy.prototype._copyWithoutHopByHopHeaders = function _copyWithoutHopByHopHeaders(inHeaders) {\n        var headers = {};\n        for (var name in inHeaders) {\n            if (hopByHopHeaders[name]) continue;\n            headers[name] = inHeaders[name];\n        }\n        // 9.1.  Connection\n        if (inHeaders.connection) {\n            var tokens = inHeaders.connection.trim().split(/\\s*,\\s*/);\n            for (var _iterator3 = tokens, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n                var _ref4;\n\n                if (_isArray3) {\n                    if (_i3 >= _iterator3.length) break;\n                    _ref4 = _iterator3[_i3++];\n                } else {\n                    _i3 = _iterator3.next();\n                    if (_i3.done) break;\n                    _ref4 = _i3.value;\n                }\n\n                var _name = _ref4;\n\n                delete headers[_name];\n            }\n        }\n        if (headers.warning) {\n            var warnings = headers.warning.split(/,/).filter(function (warning) {\n                return !/^\\s*1[0-9][0-9]/.test(warning);\n            });\n            if (!warnings.length) {\n                delete headers.warning;\n            } else {\n                headers.warning = warnings.join(',').trim();\n            }\n        }\n        return headers;\n    };\n\n    CachePolicy.prototype.responseHeaders = function responseHeaders() {\n        var headers = this._copyWithoutHopByHopHeaders(this._resHeaders);\n        var age = this.age();\n\n        // A cache SHOULD generate 113 warning if it heuristically chose a freshness\n        // lifetime greater than 24 hours and the response's age is greater than 24 hours.\n        if (age > 3600 * 24 && !this._hasExplicitExpiration() && this.maxAge() > 3600 * 24) {\n            headers.warning = (headers.warning ? `${headers.warning}, ` : '') + '113 - \"rfc7234 5.5.4\"';\n        }\n        headers.age = `${Math.round(age)}`;\n        return headers;\n    };\n\n    /**\n     * Value of the Date response header or current time if Date was demed invalid\n     * @return timestamp\n     */\n\n\n    CachePolicy.prototype.date = function date() {\n        var dateValue = Date.parse(this._resHeaders.date);\n        var maxClockDrift = 8 * 3600 * 1000;\n        if (Number.isNaN(dateValue) || dateValue < this._responseTime - maxClockDrift || dateValue > this._responseTime + maxClockDrift) {\n            return this._responseTime;\n        }\n        return dateValue;\n    };\n\n    /**\n     * Value of the Age header, in seconds, updated for the current time.\n     * May be fractional.\n     *\n     * @return Number\n     */\n\n\n    CachePolicy.prototype.age = function age() {\n        var age = Math.max(0, (this._responseTime - this.date()) / 1000);\n        if (this._resHeaders.age) {\n            var ageValue = this._ageValue();\n            if (ageValue > age) age = ageValue;\n        }\n\n        var residentTime = (this.now() - this._responseTime) / 1000;\n        return age + residentTime;\n    };\n\n    CachePolicy.prototype._ageValue = function _ageValue() {\n        var ageValue = parseInt(this._resHeaders.age);\n        return isFinite(ageValue) ? ageValue : 0;\n    };\n\n    /**\n     * Value of applicable max-age (or heuristic equivalent) in seconds. This counts since response's `Date`.\n     *\n     * For an up-to-date value, see `timeToLive()`.\n     *\n     * @return Number\n     */\n\n\n    CachePolicy.prototype.maxAge = function maxAge() {\n        if (!this.storable() || this._rescc['no-cache']) {\n            return 0;\n        }\n\n        // Shared responses with cookies are cacheable according to the RFC, but IMHO it'd be unwise to do so by default\n        // so this implementation requires explicit opt-in via public header\n        if (this._isShared && this._resHeaders['set-cookie'] && !this._rescc.public && !this._rescc.immutable) {\n            return 0;\n        }\n\n        if (this._resHeaders.vary === '*') {\n            return 0;\n        }\n\n        if (this._isShared) {\n            if (this._rescc['proxy-revalidate']) {\n                return 0;\n            }\n            // if a response includes the s-maxage directive, a shared cache recipient MUST ignore the Expires field.\n            if (this._rescc['s-maxage']) {\n                return parseInt(this._rescc['s-maxage'], 10);\n            }\n        }\n\n        // If a response includes a Cache-Control field with the max-age directive, a recipient MUST ignore the Expires field.\n        if (this._rescc['max-age']) {\n            return parseInt(this._rescc['max-age'], 10);\n        }\n\n        var defaultMinTtl = this._rescc.immutable ? this._immutableMinTtl : 0;\n\n        var dateValue = this.date();\n        if (this._resHeaders.expires) {\n            var expires = Date.parse(this._resHeaders.expires);\n            // A cache recipient MUST interpret invalid date formats, especially the value \"0\", as representing a time in the past (i.e., \"already expired\").\n            if (Number.isNaN(expires) || expires < dateValue) {\n                return 0;\n            }\n            return Math.max(defaultMinTtl, (expires - dateValue) / 1000);\n        }\n\n        if (this._resHeaders['last-modified']) {\n            var lastModified = Date.parse(this._resHeaders['last-modified']);\n            if (isFinite(lastModified) && dateValue > lastModified) {\n                return Math.max(defaultMinTtl, (dateValue - lastModified) / 1000 * this._cacheHeuristic);\n            }\n        }\n\n        return defaultMinTtl;\n    };\n\n    CachePolicy.prototype.timeToLive = function timeToLive() {\n        return Math.max(0, this.maxAge() - this.age()) * 1000;\n    };\n\n    CachePolicy.prototype.stale = function stale() {\n        return this.maxAge() <= this.age();\n    };\n\n    CachePolicy.fromObject = function fromObject(obj) {\n        return new this(undefined, undefined, { _fromObject: obj });\n    };\n\n    CachePolicy.prototype._fromObject = function _fromObject(obj) {\n        if (this._responseTime) throw Error(\"Reinitialized\");\n        if (!obj || obj.v !== 1) throw Error(\"Invalid serialization\");\n\n        this._responseTime = obj.t;\n        this._isShared = obj.sh;\n        this._cacheHeuristic = obj.ch;\n        this._immutableMinTtl = obj.imm !== undefined ? obj.imm : 24 * 3600 * 1000;\n        this._status = obj.st;\n        this._resHeaders = obj.resh;\n        this._rescc = obj.rescc;\n        this._method = obj.m;\n        this._url = obj.u;\n        this._host = obj.h;\n        this._noAuthorization = obj.a;\n        this._reqHeaders = obj.reqh;\n        this._reqcc = obj.reqcc;\n    };\n\n    CachePolicy.prototype.toObject = function toObject() {\n        return {\n            v: 1,\n            t: this._responseTime,\n            sh: this._isShared,\n            ch: this._cacheHeuristic,\n            imm: this._immutableMinTtl,\n            st: this._status,\n            resh: this._resHeaders,\n            rescc: this._rescc,\n            m: this._method,\n            u: this._url,\n            h: this._host,\n            a: this._noAuthorization,\n            reqh: this._reqHeaders,\n            reqcc: this._reqcc\n        };\n    };\n\n    /**\n     * Headers for sending to the origin server to revalidate stale response.\n     * Allows server to return 304 to allow reuse of the previous response.\n     *\n     * Hop by hop headers are always stripped.\n     * Revalidation headers may be added or removed, depending on request.\n     */\n\n\n    CachePolicy.prototype.revalidationHeaders = function revalidationHeaders(incomingReq) {\n        this._assertRequestHasHeaders(incomingReq);\n        var headers = this._copyWithoutHopByHopHeaders(incomingReq.headers);\n\n        // This implementation does not understand range requests\n        delete headers['if-range'];\n\n        if (!this._requestMatches(incomingReq, true) || !this.storable()) {\n            // revalidation allowed via HEAD\n            // not for the same resource, or wasn't allowed to be cached anyway\n            delete headers['if-none-match'];\n            delete headers['if-modified-since'];\n            return headers;\n        }\n\n        /* MUST send that entity-tag in any cache validation request (using If-Match or If-None-Match) if an entity-tag has been provided by the origin server. */\n        if (this._resHeaders.etag) {\n            headers['if-none-match'] = headers['if-none-match'] ? `${headers['if-none-match']}, ${this._resHeaders.etag}` : this._resHeaders.etag;\n        }\n\n        // Clients MAY issue simple (non-subrange) GET requests with either weak validators or strong validators. Clients MUST NOT use weak validators in other forms of request.\n        var forbidsWeakValidators = headers['accept-ranges'] || headers['if-match'] || headers['if-unmodified-since'] || this._method && this._method != 'GET';\n\n        /* SHOULD send the Last-Modified value in non-subrange cache validation requests (using If-Modified-Since) if only a Last-Modified value has been provided by the origin server.\n        Note: This implementation does not understand partial responses (206) */\n        if (forbidsWeakValidators) {\n            delete headers['if-modified-since'];\n\n            if (headers['if-none-match']) {\n                var etags = headers['if-none-match'].split(/,/).filter(function (etag) {\n                    return !/^\\s*W\\//.test(etag);\n                });\n                if (!etags.length) {\n                    delete headers['if-none-match'];\n                } else {\n                    headers['if-none-match'] = etags.join(',').trim();\n                }\n            }\n        } else if (this._resHeaders['last-modified'] && !headers['if-modified-since']) {\n            headers['if-modified-since'] = this._resHeaders['last-modified'];\n        }\n\n        return headers;\n    };\n\n    /**\n     * Creates new CachePolicy with information combined from the previews response,\n     * and the new revalidation response.\n     *\n     * Returns {policy, modified} where modified is a boolean indicating\n     * whether the response body has been modified, and old cached body can't be used.\n     *\n     * @return {Object} {policy: CachePolicy, modified: Boolean}\n     */\n\n\n    CachePolicy.prototype.revalidatedPolicy = function revalidatedPolicy(request, response) {\n        this._assertRequestHasHeaders(request);\n        if (!response || !response.headers) {\n            throw Error(\"Response headers missing\");\n        }\n\n        // These aren't going to be supported exactly, since one CachePolicy object\n        // doesn't know about all the other cached objects.\n        var matches = false;\n        if (response.status !== undefined && response.status != 304) {\n            matches = false;\n        } else if (response.headers.etag && !/^\\s*W\\//.test(response.headers.etag)) {\n            // \"All of the stored responses with the same strong validator are selected.\n            // If none of the stored responses contain the same strong validator,\n            // then the cache MUST NOT use the new response to update any stored responses.\"\n            matches = this._resHeaders.etag && this._resHeaders.etag.replace(/^\\s*W\\//, '') === response.headers.etag;\n        } else if (this._resHeaders.etag && response.headers.etag) {\n            // \"If the new response contains a weak validator and that validator corresponds\n            // to one of the cache's stored responses,\n            // then the most recent of those matching stored responses is selected for update.\"\n            matches = this._resHeaders.etag.replace(/^\\s*W\\//, '') === response.headers.etag.replace(/^\\s*W\\//, '');\n        } else if (this._resHeaders['last-modified']) {\n            matches = this._resHeaders['last-modified'] === response.headers['last-modified'];\n        } else {\n            // If the new response does not include any form of validator (such as in the case where\n            // a client generates an If-Modified-Since request from a source other than the Last-Modified\n            // response header field), and there is only one stored response, and that stored response also\n            // lacks a validator, then that stored response is selected for update.\n            if (!this._resHeaders.etag && !this._resHeaders['last-modified'] && !response.headers.etag && !response.headers['last-modified']) {\n                matches = true;\n            }\n        }\n\n        if (!matches) {\n            return {\n                policy: new this.constructor(request, response),\n                modified: true\n            };\n        }\n\n        // use other header fields provided in the 304 (Not Modified) response to replace all instances\n        // of the corresponding header fields in the stored response.\n        var headers = {};\n        for (var k in this._resHeaders) {\n            headers[k] = k in response.headers && !excludedFromRevalidationUpdate[k] ? response.headers[k] : this._resHeaders[k];\n        }\n\n        var newResponse = Object.assign({}, response, {\n            status: this._status,\n            method: this._method,\n            headers\n        });\n        return {\n            policy: new this.constructor(request, newResponse),\n            modified: false\n        };\n    };\n\n    return CachePolicy;\n}();"]},"metadata":{},"sourceType":"script"}