{"ast":null,"code":"/*!\n * parse/index.js - JOSE Parser Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar compact = require(\"./compact\"),\n    json = require(\"./json\");\n\nvar parse = module.exports = function (input) {\n  if (Buffer.isBuffer(input)) {\n    // assume buffer holds a Compact Serialization string\n    return compact(input.toString(\"ascii\"));\n  } else if (\"string\" === typeof input) {\n    return compact(input);\n  } else if (input) {\n    return json(input);\n  } else {\n    throw new TypeError(\"invalid input\");\n  }\n};\n\nparse.compact = compact;\nparse.json = json;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/parse/index.js"],"names":["compact","require","json","parse","module","exports","input","Buffer","isBuffer","toString","TypeError"],"mappings":"AAAA;;;;;AAKA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;AAAA,IACIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CADlB;;AAGA,IAAIE,KAAK,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC3C,MAAIC,MAAM,CAACC,QAAP,CAAgBF,KAAhB,CAAJ,EAA4B;AAC1B;AACA,WAAON,OAAO,CAACM,KAAK,CAACG,QAAN,CAAe,OAAf,CAAD,CAAd;AACD,GAHD,MAGO,IAAI,aAAa,OAAOH,KAAxB,EAA+B;AACpC,WAAON,OAAO,CAACM,KAAD,CAAd;AACD,GAFM,MAEA,IAAIA,KAAJ,EAAW;AAChB,WAAOJ,IAAI,CAACI,KAAD,CAAX;AACD,GAFM,MAEA;AACL,UAAM,IAAII,SAAJ,CAAc,eAAd,CAAN;AACD;AACF,CAXD;;AAaAP,KAAK,CAACH,OAAN,GAAgBA,OAAhB;AACAG,KAAK,CAACD,IAAN,GAAaA,IAAb","sourcesContent":["/*!\n * parse/index.js - JOSE Parser Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar compact = require(\"./compact\"),\n    json = require(\"./json\");\n\nvar parse = module.exports = function(input) {\n  if (Buffer.isBuffer(input)) {\n    // assume buffer holds a Compact Serialization string\n    return compact(input.toString(\"ascii\"));\n  } else if (\"string\" === typeof input) {\n    return compact(input);\n  } else if (input) {\n    return json(input);\n  } else {\n    throw new TypeError(\"invalid input\");\n  }\n};\n\nparse.compact = compact;\nparse.json = json;\n"]},"metadata":{},"sourceType":"script"}