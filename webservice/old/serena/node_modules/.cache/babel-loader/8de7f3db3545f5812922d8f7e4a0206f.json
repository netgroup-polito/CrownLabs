{"ast":null,"code":"/*!\n * algorithms/ec-util.js - Elliptic Curve Utility Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash\").clone,\n    ecc = require(\"../deps/ecc\"),\n    forge = require(\"../deps/forge.js\"),\n    util = require(\"../util\");\n\nvar EC_KEYSIZES = {\n  \"P-256\": 256,\n  \"P-384\": 384,\n  \"P-521\": 521\n};\n\nfunction convertToForge(key, isPublic) {\n  var parts = isPublic ? [\"x\", \"y\"] : [\"d\"];\n  parts = parts.map(function (f) {\n    return new forge.jsbn.BigInteger(key[f].toString(\"hex\"), 16);\n  }); // prefix with curve\n\n  parts = [key.crv].concat(parts);\n  var fn = isPublic ? ecc.asPublicKey : ecc.asPrivateKey;\n  return fn.apply(ecc, parts);\n}\n\nfunction convertToJWK(key, isPublic) {\n  var result = clone(key);\n  var parts = isPublic ? [\"x\", \"y\"] : [\"x\", \"y\", \"d\"];\n  parts.forEach(function (f) {\n    result[f] = util.base64url.encode(result[f]);\n  }); // remove potentially troublesome properties\n\n  delete result.key_ops;\n  delete result.use;\n  delete result.alg;\n\n  if (isPublic) {\n    delete result.d;\n  }\n\n  return result;\n}\n\nfunction convertToObj(key, isPublic) {\n  var result = clone(key);\n  var parts = isPublic ? [\"x\", \"y\"] : [\"d\"];\n  parts.forEach(function (f) {\n    // assume string if base64url-encoded\n    result[f] = util.asBuffer(result[f], \"base64url\");\n  });\n  return result;\n}\n\nvar UNCOMPRESSED = Buffer.from([0x04]);\n\nfunction convertToBuffer(key, isPublic) {\n  key = convertToObj(key, isPublic);\n  var result = isPublic ? Buffer.concat([UNCOMPRESSED, key.x, key.y]) : key.d;\n  return result;\n}\n\nfunction curveSize(crv) {\n  return EC_KEYSIZES[crv || \"\"] || NaN;\n}\n\nfunction curveNameToOid(crv) {\n  switch (crv) {\n    case \"P-256\":\n      return \"1.2.840.10045.3.1.7\";\n\n    case \"P-384\":\n      return \"1.3.132.0.34\";\n\n    case \"P-521\":\n      return \"1.3.132.0.35\";\n\n    default:\n      return null;\n  }\n}\n\nvar EC_OID = \"1.2.840.10045.2.1\";\n\nfunction convertToPEM(key, isPrivate) {\n  // curveName to OID\n  var oid = key.crv;\n  oid = curveNameToOid(oid);\n  oid = forge.asn1.oidToDer(oid); // key as bytes\n\n  var type, pub, asn1;\n\n  if (isPrivate) {\n    type = \"EC PRIVATE KEY\";\n    pub = Buffer.concat([Buffer.from([0x00, 0x04]), key.x, key.y]).toString(\"binary\");\n    key = key.d.toString(\"binary\");\n    asn1 = forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.SEQUENCE, true, [forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.INTEGER, false, \"\\u0001\"), forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OCTETSTRING, false, key), forge.asn1.create(forge.asn1.Class.CONTEXT_SPECIFIC, 0, true, [forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OID, false, oid.bytes())]), forge.asn1.create(forge.asn1.Class.CONTEXT_SPECIFIC, 1, true, [forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.BITSTRING, false, pub)])]);\n  } else {\n    type = \"PUBLIC KEY\";\n    key = Buffer.concat([Buffer.from([0x00, 0x04]), key.x, key.y]).toString(\"binary\");\n    asn1 = forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.SEQUENCE, true, [forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.SEQUENCE, true, [forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OID, false, forge.asn1.oidToDer(EC_OID).bytes()), forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OID, false, oid.bytes())]), forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.BITSTRING, false, key)]);\n  }\n\n  asn1 = forge.asn1.toDer(asn1).bytes();\n  var pem = forge.pem.encode({\n    type: type,\n    body: asn1\n  });\n  return pem;\n} // Inspired by teifip/node-webtokens/blob/master/lib/ecdsa.js\n\n\nvar ERR_MSG = \"Could not extract parameters from DER signature\";\n\nfunction derToConcat(signature, size) {\n  var offset = 0;\n\n  if (signature[offset++] !== 0x30) {\n    throw new Error(ERR_MSG);\n  }\n\n  var seqLength = signature[offset++];\n\n  if (seqLength === 0x81) {\n    seqLength = signature[offset++];\n  }\n\n  if (seqLength > signature.length - offset) {\n    throw new Error(ERR_MSG);\n  }\n\n  if (signature[offset++] !== 0x02) {\n    throw new Error(ERR_MSG);\n  }\n\n  var rLength = signature[offset++];\n\n  if (rLength > signature.length - offset - 2) {\n    throw new Error(ERR_MSG);\n  }\n\n  if (rLength > size + 1) {\n    throw new Error(ERR_MSG);\n  }\n\n  var rOffset = offset;\n  offset += rLength;\n\n  if (signature[offset++] !== 0x02) {\n    throw new Error(ERR_MSG);\n  }\n\n  var sLength = signature[offset++];\n\n  if (sLength !== signature.length - offset) {\n    throw new Error(ERR_MSG);\n  }\n\n  if (sLength > size + 1) {\n    throw new Error(ERR_MSG);\n  }\n\n  var sOffset = offset;\n  offset += sLength;\n\n  if (offset !== signature.length) {\n    throw new Error(ERR_MSG);\n  }\n\n  var rPadding = size - rLength;\n  var sPadding = size - sLength;\n  var dst = Buffer.alloc(rPadding + rLength + sPadding + sLength);\n\n  for (offset = 0; offset < rPadding; ++offset) {\n    dst[offset] = 0;\n  }\n\n  var rPad = Math.max(-rPadding, 0);\n  signature.copy(dst, offset, rOffset + rPad, rOffset + rLength);\n  offset = size;\n\n  for (var o = offset; offset < o + sPadding; ++offset) {\n    dst[offset] = 0;\n  }\n\n  var sPad = Math.max(-sPadding, 0);\n  signature.copy(dst, offset, sOffset + sPad, sOffset + sLength);\n  return dst;\n}\n\nfunction countPadding(buf, start, stop) {\n  var padding = 0;\n\n  while (start + padding < stop && buf[start + padding] === 0) {\n    ++padding;\n  }\n\n  var needsSign = buf[start + padding] >= 0x80;\n\n  if (needsSign) {\n    --padding;\n  }\n\n  return padding;\n}\n\nfunction concatToDer(signature, size) {\n  var rPadding = countPadding(signature, 0, size);\n  var sPadding = countPadding(signature, size, signature.length);\n  var rLength = size - rPadding;\n  var sLength = size - sPadding;\n  var rsBytes = rLength + sLength + 4;\n  var shortLength = rsBytes < 0x80;\n  var dst = Buffer.alloc((shortLength ? 2 : 3) + rsBytes);\n  var offset = 0;\n  dst[offset++] = 0x30;\n\n  if (shortLength) {\n    dst[offset++] = rsBytes;\n  } else {\n    dst[offset++] = 0x81;\n    dst[offset++] = rsBytes & 0xFF;\n  }\n\n  dst[offset++] = 0x02;\n  dst[offset++] = rLength;\n\n  if (rPadding < 0) {\n    dst[offset++] = 0;\n    offset += signature.copy(dst, offset, 0, size);\n  } else {\n    offset += signature.copy(dst, offset, rPadding, size);\n  }\n\n  dst[offset++] = 0x02;\n  dst[offset++] = sLength;\n\n  if (sPadding < 0) {\n    dst[offset++] = 0;\n    signature.copy(dst, offset, size);\n  } else {\n    signature.copy(dst, offset, size + sPadding);\n  }\n\n  return dst;\n}\n\nmodule.exports = {\n  convertToForge: convertToForge,\n  convertToJWK: convertToJWK,\n  convertToObj: convertToObj,\n  convertToBuffer: convertToBuffer,\n  curveSize: curveSize,\n  derToConcat: derToConcat,\n  concatToDer: concatToDer,\n  convertToPEM: convertToPEM,\n  EC_OID: EC_OID\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/algorithms/ec-util.js"],"names":["clone","require","ecc","forge","util","EC_KEYSIZES","convertToForge","key","isPublic","parts","map","f","jsbn","BigInteger","toString","crv","concat","fn","asPublicKey","asPrivateKey","apply","convertToJWK","result","forEach","base64url","encode","key_ops","use","alg","d","convertToObj","asBuffer","UNCOMPRESSED","Buffer","from","convertToBuffer","x","y","curveSize","NaN","curveNameToOid","EC_OID","convertToPEM","isPrivate","oid","asn1","oidToDer","type","pub","create","Class","UNIVERSAL","Type","SEQUENCE","INTEGER","OCTETSTRING","CONTEXT_SPECIFIC","OID","bytes","BITSTRING","toDer","pem","body","ERR_MSG","derToConcat","signature","size","offset","Error","seqLength","length","rLength","rOffset","sLength","sOffset","rPadding","sPadding","dst","alloc","rPad","Math","max","copy","o","sPad","countPadding","buf","start","stop","padding","needsSign","concatToDer","rsBytes","shortLength","module","exports"],"mappings":"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","sourcesContent":["/*!\n * algorithms/ec-util.js - Elliptic Curve Utility Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash\").clone,\n    ecc = require(\"../deps/ecc\"),\n    forge = require(\"../deps/forge.js\"),\n    util = require(\"../util\");\n\nvar EC_KEYSIZES = {\n  \"P-256\": 256,\n  \"P-384\": 384,\n  \"P-521\": 521\n};\n\nfunction convertToForge(key, isPublic) {\n  var parts = isPublic ?\n              [\"x\", \"y\"] :\n              [\"d\"];\n  parts = parts.map(function(f) {\n    return new forge.jsbn.BigInteger(key[f].toString(\"hex\"), 16);\n  });\n  // prefix with curve\n  parts = [key.crv].concat(parts);\n  var fn = isPublic ?\n           ecc.asPublicKey :\n           ecc.asPrivateKey;\n  return fn.apply(ecc, parts);\n}\n\nfunction convertToJWK(key, isPublic) {\n  var result = clone(key);\n  var parts = isPublic ?\n              [\"x\", \"y\"] :\n              [\"x\", \"y\", \"d\"];\n  parts.forEach(function(f) {\n    result[f] = util.base64url.encode(result[f]);\n  });\n\n  // remove potentially troublesome properties\n  delete result.key_ops;\n  delete result.use;\n  delete result.alg;\n\n  if (isPublic) {\n    delete result.d;\n  }\n\n  return result;\n}\n\nfunction convertToObj(key, isPublic) {\n  var result = clone(key);\n  var parts = isPublic ?\n              [\"x\", \"y\"] :\n              [\"d\"];\n  parts.forEach(function(f) {\n    // assume string if base64url-encoded\n    result[f] = util.asBuffer(result[f], \"base64url\");\n  });\n\n  return result;\n}\n\nvar UNCOMPRESSED = Buffer.from([0x04]);\nfunction convertToBuffer(key, isPublic) {\n  key = convertToObj(key, isPublic);\n  var result = isPublic ?\n               Buffer.concat([UNCOMPRESSED, key.x, key.y]) :\n               key.d;\n  return result;\n}\n\nfunction curveSize(crv) {\n  return EC_KEYSIZES[crv || \"\"] || NaN;\n}\n\nfunction curveNameToOid(crv) {\n  switch (crv) {\n    case \"P-256\":\n      return \"1.2.840.10045.3.1.7\";\n    case \"P-384\":\n      return \"1.3.132.0.34\";\n    case \"P-521\":\n      return \"1.3.132.0.35\";\n    default:\n      return null;\n  }\n}\n\nvar EC_OID = \"1.2.840.10045.2.1\";\nfunction convertToPEM(key, isPrivate) {\n  // curveName to OID\n  var oid = key.crv;\n  oid = curveNameToOid(oid);\n  oid = forge.asn1.oidToDer(oid);\n  // key as bytes\n  var type,\n      pub,\n      asn1;\n  if (isPrivate) {\n    type = \"EC PRIVATE KEY\";\n    pub = Buffer.concat([\n      Buffer.from([0x00, 0x04]),\n      key.x,\n      key.y\n    ]).toString(\"binary\");\n    key = key.d.toString(\"binary\");\n    asn1 = forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.SEQUENCE, true, [\n      forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.INTEGER, false, \"\\u0001\"),\n      forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OCTETSTRING, false, key),\n      forge.asn1.create(forge.asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OID, false, oid.bytes())\n      ]),\n      forge.asn1.create(forge.asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.BITSTRING, false, pub)\n      ])\n    ]);\n  } else {\n    type = \"PUBLIC KEY\";\n    key = Buffer.concat([\n      Buffer.from([0x00, 0x04]),\n      key.x,\n      key.y\n    ]).toString(\"binary\");\n    asn1 = forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.SEQUENCE, true, [\n      forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.SEQUENCE, true, [\n        forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OID, false, forge.asn1.oidToDer(EC_OID).bytes()),\n        forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OID, false, oid.bytes())\n      ]),\n      forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.BITSTRING, false, key)\n    ]);\n  }\n  asn1 = forge.asn1.toDer(asn1).bytes();\n  var pem = forge.pem.encode({\n    type: type,\n    body: asn1\n  });\n  return pem;\n}\n\n// Inspired by teifip/node-webtokens/blob/master/lib/ecdsa.js\nvar ERR_MSG = \"Could not extract parameters from DER signature\";\nfunction derToConcat(signature, size) {\n  var offset = 0;\n  if (signature[offset++] !== 0x30) {\n    throw new Error(ERR_MSG);\n  }\n  var seqLength = signature[offset++];\n  if (seqLength === 0x81) {\n    seqLength = signature[offset++];\n  }\n  if (seqLength > signature.length - offset) {\n    throw new Error(ERR_MSG);\n  }\n  if (signature[offset++] !== 0x02) {\n    throw new Error(ERR_MSG);\n  }\n  var rLength = signature[offset++];\n  if (rLength > signature.length - offset - 2) {\n    throw new Error(ERR_MSG);\n  }\n  if (rLength > size + 1) {\n    throw new Error(ERR_MSG);\n  }\n  var rOffset = offset;\n  offset += rLength;\n  if (signature[offset++] !== 0x02) {\n    throw new Error(ERR_MSG);\n  }\n  var sLength = signature[offset++];\n  if (sLength !== signature.length - offset) {\n    throw new Error(ERR_MSG);\n  }\n  if (sLength > size + 1) {\n    throw new Error(ERR_MSG);\n  }\n  var sOffset = offset;\n  offset += sLength;\n  if (offset !== signature.length) {\n    throw new Error(ERR_MSG);\n  }\n  var rPadding = size - rLength;\n  var sPadding = size - sLength;\n  var dst = Buffer.alloc(rPadding + rLength + sPadding + sLength);\n  for (offset = 0; offset < rPadding; ++offset) {\n    dst[offset] = 0;\n  }\n  var rPad = Math.max(-rPadding, 0);\n  signature.copy(dst, offset, rOffset + rPad, rOffset + rLength);\n  offset = size;\n  for (var o = offset; offset < o + sPadding; ++offset) {\n    dst[offset] = 0;\n  }\n  var sPad = Math.max(-sPadding, 0);\n  signature.copy(dst, offset, sOffset + sPad, sOffset + sLength);\n  return dst;\n}\n\nfunction countPadding(buf, start, stop) {\n  var padding = 0;\n  while (start + padding < stop && buf[start + padding] === 0) {\n    ++padding;\n  }\n  var needsSign = buf[start + padding] >= 0x80;\n  if (needsSign) {\n    --padding;\n  }\n  return padding;\n}\n\nfunction concatToDer(signature, size) {\n  var rPadding = countPadding(signature, 0, size);\n  var sPadding = countPadding(signature, size, signature.length);\n  var rLength = size - rPadding;\n  var sLength = size - sPadding;\n  var rsBytes = rLength + sLength + 4;\n  var shortLength = rsBytes < 0x80;\n  var dst = Buffer.alloc((shortLength ? 2 : 3) + rsBytes);\n  var offset = 0;\n  dst[offset++] = 0x30;\n  if (shortLength) {\n    dst[offset++] = rsBytes;\n  } else {\n    dst[offset++] = 0x81;\n    dst[offset++] = rsBytes & 0xFF;\n  }\n  dst[offset++] = 0x02;\n  dst[offset++] = rLength;\n  if (rPadding < 0) {\n    dst[offset++] = 0;\n    offset += signature.copy(dst, offset, 0, size);\n  } else {\n    offset += signature.copy(dst, offset, rPadding, size);\n  }\n  dst[offset++] = 0x02;\n  dst[offset++] = sLength;\n  if (sPadding < 0) {\n    dst[offset++] = 0;\n    signature.copy(dst, offset, size);\n  } else {\n    signature.copy(dst, offset, size + sPadding);\n  }\n  return dst;\n}\n\nmodule.exports = {\n  convertToForge: convertToForge,\n  convertToJWK: convertToJWK,\n  convertToObj: convertToObj,\n  convertToBuffer: convertToBuffer,\n  curveSize: curveSize,\n  derToConcat: derToConcat,\n  concatToDer: concatToDer,\n  convertToPEM: convertToPEM,\n  EC_OID: EC_OID\n};\n"]},"metadata":{},"sourceType":"script"}