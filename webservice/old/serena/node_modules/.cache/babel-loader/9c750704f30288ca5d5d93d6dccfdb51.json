{"ast":null,"code":"/*!\n * algorithms/aes-cbc-hmac-sha2.js - AES-CBC-HMAC-SHA2 Composited Encryption\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar helpers = require(\"./helpers.js\"),\n    HMAC = require(\"./hmac.js\"),\n    sha = require(\"./sha.js\"),\n    forge = require(\"../deps/forge.js\"),\n    DataBuffer = require(\"../util/databuffer.js\"),\n    util = require(\"../util\");\n\nfunction checkIv(iv) {\n  if (16 !== iv.length) {\n    throw new Error(\"invalid iv\");\n  }\n}\n\nfunction commonCbcEncryptFN(size) {\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function (encKey, pdata, iv) {\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n    promise = promise.then(function () {\n      var cipher = forge.cipher.createCipher(\"AES-CBC\", new DataBuffer(encKey));\n      cipher.start({\n        iv: new DataBuffer(iv)\n      }); // TODO: chunk data\n\n      cipher.update(new DataBuffer(pdata));\n\n      if (!cipher.finish()) {\n        return Promise.reject(new Error(\"encryption failed\"));\n      }\n\n      var cdata = cipher.output.native();\n      return cdata;\n    });\n    return promise;\n  }; // ### WebCryptoAPI implementation\n  // TODO: cache CryptoKey sooner\n\n\n  var webcrypto = function (encKey, pdata, iv) {\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n    promise = promise.then(function () {\n      var alg = {\n        name: \"AES-CBC\"\n      };\n      return helpers.subtleCrypto.importKey(\"raw\", encKey, alg, true, [\"encrypt\"]);\n    });\n    promise = promise.then(function (key) {\n      var alg = {\n        name: \"AES-CBC\",\n        iv: iv\n      };\n      return helpers.subtleCrypto.encrypt(alg, key, pdata);\n    });\n    promise = promise.then(function (cdata) {\n      cdata = Buffer.from(cdata);\n      return cdata;\n    });\n    return promise;\n  }; // ### NodeJS implementation\n\n\n  var nodejs = function (encKey, pdata, iv) {\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve(pdata);\n    promise = promise.then(function (pdata) {\n      var name = \"AES-\" + size + \"-CBC\";\n      var cipher = helpers.nodeCrypto.createCipheriv(name, encKey, iv);\n      var cdata = Buffer.concat([cipher.update(pdata), cipher.final()]);\n      return cdata;\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction commonCbcDecryptFN(size) {\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function (encKey, cdata, iv) {\n    // validate inputs\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n    promise = promise.then(function () {\n      var cipher = forge.cipher.createDecipher(\"AES-CBC\", new DataBuffer(encKey));\n      cipher.start({\n        iv: new DataBuffer(iv)\n      }); // TODO: chunk data\n\n      cipher.update(new DataBuffer(cdata));\n\n      if (!cipher.finish()) {\n        return Promise.reject(new Error(\"encryption failed\"));\n      }\n\n      var pdata = cipher.output.native();\n      return pdata;\n    });\n    return promise;\n  }; // ### WebCryptoAPI implementation\n  // TODO: cache CryptoKey sooner\n\n\n  var webcrypto = function (encKey, cdata, iv) {\n    // validate inputs\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n    promise = promise.then(function () {\n      var alg = {\n        name: \"AES-CBC\"\n      };\n      return helpers.subtleCrypto.importKey(\"raw\", encKey, alg, true, [\"decrypt\"]);\n    });\n    promise = promise.then(function (key) {\n      var alg = {\n        name: \"AES-CBC\",\n        iv: iv\n      };\n      return helpers.subtleCrypto.decrypt(alg, key, cdata);\n    });\n    promise = promise.then(function (pdata) {\n      pdata = Buffer.from(pdata);\n      return pdata;\n    });\n    return promise;\n  }; // ### NodeJS implementation\n\n\n  var nodejs = function (encKey, cdata, iv) {\n    // validate inputs\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n    promise = promise.then(function () {\n      var name = \"AES-\" + size + \"-CBC\";\n      var cipher = helpers.nodeCrypto.createDecipheriv(name, encKey, iv);\n      var pdata = Buffer.concat([cipher.update(cdata), cipher.final()]);\n      return pdata;\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction checkKey(key, size) {\n  if (size << 1 !== key.length << 3) {\n    throw new Error(\"invalid encryption key size\");\n  }\n}\n\nfunction cbcHmacEncryptFN(size) {\n  var commonEncrypt = commonCbcEncryptFN(size);\n  return function (key, pdata, props) {\n    // validate inputs\n    try {\n      checkKey(key, size);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var eKey = key.slice(size / 8),\n        iKey = key.slice(0, size / 8),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0); // STEP 1 -- Encrypt\n\n    var promise = commonEncrypt(eKey, pdata, iv); // STEP 2 -- MAC\n\n    promise = promise.then(function (cdata) {\n      var mdata = Buffer.concat([adata, iv, cdata, helpers.int64ToBuffer(adata.length * 8)]);\n      var promise;\n      promise = HMAC[\"HS\" + size * 2].sign(iKey, mdata, {\n        length: size\n      });\n      promise = promise.then(function (result) {\n        // TODO: move slice to hmac.js\n        var tag = result.mac.slice(0, size / 8);\n        return {\n          data: cdata,\n          tag: tag\n        };\n      });\n      return promise;\n    });\n    return promise;\n  };\n}\n\nfunction cbcHmacDecryptFN(size) {\n  var commonDecrypt = commonCbcDecryptFN(size);\n  return function (key, cdata, props) {\n    // validate inputs\n    try {\n      checkKey(key, size);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var eKey = key.slice(size / 8),\n        iKey = key.slice(0, size / 8),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0),\n        tag = props.tag || props.mac || Buffer.alloc(0);\n    var promise = Promise.resolve(); // STEP 1 -- MAC\n\n    promise = promise.then(function () {\n      var promise; // construct MAC input\n\n      var mdata = Buffer.concat([adata, iv, cdata, helpers.int64ToBuffer(adata.length * 8)]);\n      promise = HMAC[\"HS\" + size * 2].verify(iKey, mdata, tag, {\n        length: size\n      });\n      promise = promise.then(function () {\n        return cdata;\n      }, function () {\n        // failure -- invalid tag error\n        throw new Error(\"mac check failed\");\n      });\n      return promise;\n    }); // STEP 2 -- Decrypt\n\n    promise = promise.then(function () {\n      return commonDecrypt(eKey, cdata, iv);\n    });\n    return promise;\n  };\n}\n\nvar EncryptionLabel = Buffer.from(\"Encryption\", \"utf8\");\nvar IntegrityLabel = Buffer.from(\"Integrity\", \"utf8\");\nvar DotLabel = Buffer.from(\".\", \"utf8\");\n\nfunction generateCek(masterKey, alg, epu, epv) {\n  var masterSize = masterKey.length * 8;\n  var cekSize = masterSize / 2;\n  var promise = Promise.resolve();\n  promise = promise.then(function () {\n    var input = Buffer.concat([helpers.int32ToBuffer(1), masterKey, helpers.int32ToBuffer(cekSize), Buffer.from(alg, \"utf8\"), epu, epv, EncryptionLabel]);\n    return input;\n  });\n  promise = promise.then(function (input) {\n    return sha[\"SHA-\" + masterSize].digest(input).then(function (digest) {\n      return digest.slice(0, cekSize / 8);\n    });\n  });\n  promise = Promise.resolve(promise);\n  return promise;\n}\n\nfunction generateCik(masterKey, alg, epu, epv) {\n  var masterSize = masterKey.length * 8;\n  var cikSize = masterSize;\n  var promise = Promise.resolve();\n  promise = promise.then(function () {\n    var input = Buffer.concat([helpers.int32ToBuffer(1), masterKey, helpers.int32ToBuffer(cikSize), Buffer.from(alg, \"utf8\"), epu, epv, IntegrityLabel]);\n    return input;\n  });\n  promise = promise.then(function (input) {\n    return sha[\"SHA-\" + masterSize].digest(input).then(function (digest) {\n      return digest.slice(0, cikSize / 8);\n    });\n  });\n  promise = Promise.resolve(promise);\n  return promise;\n}\n\nfunction concatKdfCbcHmacEncryptFN(size, alg) {\n  var commonEncrypt = commonCbcEncryptFN(size);\n  return function (key, pdata, props) {\n    var epu = props.epu || helpers.int32ToBuffer(0),\n        epv = props.epv || helpers.int32ToBuffer(0),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0),\n        kdata = props.kdata || Buffer.alloc(0); // Pre Step 1 -- Generate Keys\n\n    var promises = [generateCek(key, alg, epu, epv), generateCik(key, alg, epu, epv)];\n    var cek, cik;\n    var promise = Promise.all(promises).then(function (keys) {\n      cek = keys[0];\n      cik = keys[1];\n    }); // STEP 1 -- Encrypt\n\n    promise = promise.then(function () {\n      return commonEncrypt(cek, pdata, iv);\n    }); // STEP 2 -- Mac\n\n    promise = promise.then(function (cdata) {\n      var mdata = Buffer.concat([adata, DotLabel, Buffer.from(kdata), DotLabel, Buffer.from(util.base64url.encode(iv), \"utf8\"), DotLabel, Buffer.from(util.base64url.encode(cdata), \"utf8\")]);\n      return Promise.all([Promise.resolve(cdata), HMAC[\"HS\" + size * 2].sign(cik, mdata, {\n        length: size\n      })]);\n    });\n    promise = promise.then(function (result) {\n      return {\n        data: result[0],\n        tag: result[1].mac\n      };\n    });\n    return promise;\n  };\n}\n\nfunction concatKdfCbcHmacDecryptFN(size, alg) {\n  var commonDecrypt = commonCbcDecryptFN(size);\n  return function (key, cdata, props) {\n    var epu = props.epu || helpers.int32ToBuffer(0),\n        epv = props.epv || helpers.int32ToBuffer(0),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0),\n        kdata = props.kdata || Buffer.alloc(0),\n        tag = props.tag || props.mac || Buffer.alloc(0); // Pre Step 1 -- Generate Keys\n\n    var promises = [generateCek(key, alg, epu, epv), generateCik(key, alg, epu, epv)];\n    var cek, cik;\n    var promise = Promise.all(promises).then(function (keys) {\n      cek = keys[0];\n      cik = keys[1];\n    }); // STEP 1 -- MAC\n\n    promise = promise.then(function () {\n      // construct MAC input\n      var mdata = Buffer.concat([adata, DotLabel, Buffer.from(kdata), DotLabel, Buffer.from(util.base64url.encode(iv), \"utf8\"), DotLabel, Buffer.from(util.base64url.encode(cdata), \"utf8\")]);\n\n      try {\n        return HMAC[\"HS\" + size * 2].verify(cik, mdata, tag, {\n          loose: false\n        });\n      } catch (e) {\n        throw new Error(\"mac check failed\");\n      }\n    }); // STEP 2 -- Decrypt\n\n    promise = promise.then(function () {\n      return commonDecrypt(cek, cdata, iv);\n    });\n    return promise;\n  };\n} // ### Public API\n// * [name].encrypt\n// * [name].decrypt\n\n\nvar aesCbcHmacSha2 = {};\n[\"A128CBC-HS256\", \"A192CBC-HS384\", \"A256CBC-HS512\"].forEach(function (alg) {\n  var size = parseInt(/A(\\d+)CBC-HS(\\d+)?/g.exec(alg)[1]);\n  aesCbcHmacSha2[alg] = {\n    encrypt: cbcHmacEncryptFN(size),\n    decrypt: cbcHmacDecryptFN(size)\n  };\n});\n[\"A128CBC+HS256\", \"A192CBC+HS384\", \"A256CBC+HS512\"].forEach(function (alg) {\n  var size = parseInt(/A(\\d+)CBC\\+HS(\\d+)?/g.exec(alg)[1]);\n  aesCbcHmacSha2[alg] = {\n    encrypt: concatKdfCbcHmacEncryptFN(size, alg),\n    decrypt: concatKdfCbcHmacDecryptFN(size, alg)\n  };\n});\nmodule.exports = aesCbcHmacSha2;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/algorithms/aes-cbc-hmac-sha2.js"],"names":["helpers","require","HMAC","sha","forge","DataBuffer","util","checkIv","iv","length","Error","commonCbcEncryptFN","size","fallback","encKey","pdata","err","Promise","reject","promise","resolve","then","cipher","createCipher","start","update","finish","cdata","output","native","webcrypto","alg","name","subtleCrypto","importKey","key","encrypt","Buffer","from","nodejs","nodeCrypto","createCipheriv","concat","final","setupFallback","commonCbcDecryptFN","createDecipher","decrypt","createDecipheriv","checkKey","cbcHmacEncryptFN","commonEncrypt","props","eKey","slice","iKey","alloc","adata","aad","mdata","int64ToBuffer","sign","result","tag","mac","data","cbcHmacDecryptFN","commonDecrypt","verify","EncryptionLabel","IntegrityLabel","DotLabel","generateCek","masterKey","epu","epv","masterSize","cekSize","input","int32ToBuffer","digest","generateCik","cikSize","concatKdfCbcHmacEncryptFN","kdata","promises","cek","cik","all","keys","base64url","encode","concatKdfCbcHmacDecryptFN","loose","e","aesCbcHmacSha2","forEach","parseInt","exec","module","exports"],"mappings":"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","sourcesContent":["/*!\n * algorithms/aes-cbc-hmac-sha2.js - AES-CBC-HMAC-SHA2 Composited Encryption\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar helpers = require(\"./helpers.js\"),\n    HMAC = require(\"./hmac.js\"),\n    sha = require(\"./sha.js\"),\n    forge = require(\"../deps/forge.js\"),\n    DataBuffer = require(\"../util/databuffer.js\"),\n    util = require(\"../util\");\n\nfunction checkIv(iv) {\n  if (16 !== iv.length) {\n    throw new Error(\"invalid iv\");\n  }\n}\n\nfunction commonCbcEncryptFN(size) {\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function(encKey, pdata, iv) {\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n\n    promise = promise.then(function() {\n      var cipher = forge.cipher.createCipher(\"AES-CBC\", new DataBuffer(encKey));\n      cipher.start({\n        iv: new DataBuffer(iv)\n      });\n\n      // TODO: chunk data\n      cipher.update(new DataBuffer(pdata));\n      if (!cipher.finish()) {\n        return Promise.reject(new Error(\"encryption failed\"));\n      }\n\n      var cdata = cipher.output.native();\n      return cdata;\n    });\n\n    return promise;\n  };\n\n  // ### WebCryptoAPI implementation\n  // TODO: cache CryptoKey sooner\n  var webcrypto = function(encKey, pdata, iv) {\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n\n    promise = promise.then(function() {\n      var alg = {\n        name: \"AES-CBC\"\n      };\n      return helpers.subtleCrypto.importKey(\"raw\", encKey, alg, true, [\"encrypt\"]);\n    });\n    promise = promise.then(function(key) {\n      var alg = {\n        name: \"AES-CBC\",\n        iv: iv\n      };\n      return helpers.subtleCrypto.encrypt(alg, key, pdata);\n    });\n    promise = promise.then(function(cdata) {\n      cdata = Buffer.from(cdata);\n      return cdata;\n    });\n\n    return promise;\n  };\n\n  // ### NodeJS implementation\n  var nodejs = function(encKey, pdata, iv) {\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve(pdata);\n\n    promise = promise.then(function(pdata) {\n      var name = \"AES-\" + size + \"-CBC\";\n      var cipher = helpers.nodeCrypto.createCipheriv(name, encKey, iv);\n      var cdata = Buffer.concat([\n        cipher.update(pdata),\n        cipher.final()\n      ]);\n      return cdata;\n    });\n\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction commonCbcDecryptFN(size) {\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function(encKey, cdata, iv) {\n    // validate inputs\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n\n    promise = promise.then(function() {\n      var cipher = forge.cipher.createDecipher(\"AES-CBC\", new DataBuffer(encKey));\n      cipher.start({\n        iv: new DataBuffer(iv)\n      });\n\n      // TODO: chunk data\n      cipher.update(new DataBuffer(cdata));\n      if (!cipher.finish()) {\n        return Promise.reject(new Error(\"encryption failed\"));\n      }\n\n      var pdata = cipher.output.native();\n      return pdata;\n    });\n\n    return promise;\n  };\n\n  // ### WebCryptoAPI implementation\n  // TODO: cache CryptoKey sooner\n  var webcrypto = function(encKey, cdata, iv) {\n    // validate inputs\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n\n    promise = promise.then(function() {\n      var alg = {\n        name: \"AES-CBC\"\n      };\n      return helpers.subtleCrypto.importKey(\"raw\", encKey, alg, true, [\"decrypt\"]);\n    });\n    promise = promise.then(function(key) {\n      var alg = {\n        name: \"AES-CBC\",\n        iv: iv\n      };\n      return helpers.subtleCrypto.decrypt(alg, key, cdata);\n    });\n    promise = promise.then(function(pdata) {\n      pdata = Buffer.from(pdata);\n      return pdata;\n    });\n\n    return promise;\n  };\n\n  // ### NodeJS implementation\n  var nodejs = function(encKey, cdata, iv) {\n    // validate inputs\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n\n    promise = promise.then(function() {\n      var name = \"AES-\" + size + \"-CBC\";\n      var cipher = helpers.nodeCrypto.createDecipheriv(name, encKey, iv);\n      var pdata = Buffer.concat([\n        cipher.update(cdata),\n        cipher.final()\n      ]);\n      return pdata;\n    });\n\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction checkKey(key, size) {\n  if ((size << 1) !== (key.length << 3)) {\n    throw new Error(\"invalid encryption key size\");\n  }\n}\n\nfunction cbcHmacEncryptFN(size) {\n  var commonEncrypt = commonCbcEncryptFN(size);\n  return function(key, pdata, props) {\n    // validate inputs\n    try {\n      checkKey(key, size);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var eKey = key.slice(size / 8),\n        iKey = key.slice(0, size / 8),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0);\n\n    // STEP 1 -- Encrypt\n    var promise = commonEncrypt(eKey, pdata, iv);\n\n    // STEP 2 -- MAC\n    promise = promise.then(function(cdata){\n      var mdata = Buffer.concat([\n        adata,\n        iv,\n        cdata,\n        helpers.int64ToBuffer(adata.length * 8)\n      ]);\n\n      var promise;\n      promise = HMAC[\"HS\" + (size * 2)].sign(iKey, mdata, {\n        length: size\n      });\n      promise = promise.then(function(result) {\n        // TODO: move slice to hmac.js\n        var tag = result.mac.slice(0, size / 8);\n        return {\n          data: cdata,\n          tag: tag\n        };\n      });\n      return promise;\n    });\n\n    return promise;\n  };\n}\n\nfunction cbcHmacDecryptFN(size) {\n  var commonDecrypt = commonCbcDecryptFN(size);\n\n  return function(key, cdata, props) {\n    // validate inputs\n    try {\n      checkKey(key, size);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var eKey = key.slice(size / 8),\n        iKey = key.slice(0, size / 8),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0),\n        tag = props.tag || props.mac || Buffer.alloc(0);\n\n    var promise = Promise.resolve();\n\n    // STEP 1 -- MAC\n    promise = promise.then(function() {\n      var promise;\n      // construct MAC input\n      var mdata = Buffer.concat([\n        adata,\n        iv,\n        cdata,\n        helpers.int64ToBuffer(adata.length * 8)\n      ]);\n      promise = HMAC[\"HS\" + (size * 2)].verify(iKey, mdata, tag, {\n        length: size\n      });\n      promise = promise.then(function() {\n        return cdata;\n      }, function() {\n        // failure -- invalid tag error\n        throw new Error(\"mac check failed\");\n      });\n      return promise;\n    });\n\n    // STEP 2 -- Decrypt\n    promise = promise.then(function(){\n      return commonDecrypt(eKey, cdata, iv);\n    });\n\n    return promise;\n  };\n}\n\nvar EncryptionLabel = Buffer.from(\"Encryption\", \"utf8\");\nvar IntegrityLabel = Buffer.from(\"Integrity\", \"utf8\");\nvar DotLabel = Buffer.from(\".\", \"utf8\");\n\nfunction generateCek(masterKey, alg, epu, epv) {\n  var masterSize = masterKey.length * 8;\n  var cekSize = masterSize / 2;\n  var promise = Promise.resolve();\n\n  promise = promise.then(function(){\n    var input = Buffer.concat([\n      helpers.int32ToBuffer(1),\n      masterKey,\n      helpers.int32ToBuffer(cekSize),\n      Buffer.from(alg, \"utf8\"),\n      epu,\n      epv,\n      EncryptionLabel\n    ]);\n\n    return input;\n  });\n\n  promise = promise.then( function(input) {\n    return sha[\"SHA-\" + masterSize].digest(input).then(function(digest) {\n      return digest.slice(0, cekSize / 8);\n    });\n  });\n  promise = Promise.resolve(promise);\n\n  return promise;\n}\n\nfunction generateCik(masterKey, alg, epu, epv) {\n  var masterSize = masterKey.length * 8;\n  var cikSize = masterSize;\n  var promise = Promise.resolve();\n\n  promise = promise.then(function(){\n    var input = Buffer.concat([\n      helpers.int32ToBuffer(1),\n      masterKey,\n      helpers.int32ToBuffer(cikSize),\n      Buffer.from(alg, \"utf8\"),\n      epu,\n      epv,\n      IntegrityLabel\n    ]);\n\n    return input;\n  });\n\n  promise = promise.then( function(input) {\n    return sha[\"SHA-\" + masterSize].digest(input).then(function(digest) {\n      return digest.slice(0, cikSize / 8);\n    });\n  });\n  promise = Promise.resolve(promise);\n\n  return promise;\n}\n\nfunction concatKdfCbcHmacEncryptFN(size, alg) {\n  var commonEncrypt = commonCbcEncryptFN(size);\n\n  return function(key, pdata, props) {\n    var epu = props.epu || helpers.int32ToBuffer(0),\n        epv = props.epv || helpers.int32ToBuffer(0),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0),\n        kdata = props.kdata || Buffer.alloc(0);\n\n    // Pre Step 1 -- Generate Keys\n    var promises = [\n      generateCek(key, alg, epu, epv),\n      generateCik(key, alg, epu, epv)\n    ];\n\n    var cek,\n        cik;\n    var promise = Promise.all(promises).then(function(keys) {\n      cek = keys[0];\n      cik = keys[1];\n    });\n\n    // STEP 1 -- Encrypt\n    promise = promise.then(function(){\n      return commonEncrypt(cek, pdata, iv);\n    });\n\n    // STEP 2 -- Mac\n    promise = promise.then(function(cdata){\n      var mdata = Buffer.concat([\n        adata,\n        DotLabel,\n        Buffer.from(kdata),\n        DotLabel,\n        Buffer.from(util.base64url.encode(iv), \"utf8\"),\n        DotLabel,\n        Buffer.from(util.base64url.encode(cdata), \"utf8\")\n      ]);\n      return Promise.all([\n        Promise.resolve(cdata),\n        HMAC[\"HS\" + (size * 2)].sign(cik, mdata, { length: size })\n      ]);\n    });\n    promise = promise.then(function(result){\n      return {\n        data: result[0],\n        tag: result[1].mac\n      };\n    });\n\n    return promise;\n  };\n}\n\nfunction concatKdfCbcHmacDecryptFN(size, alg) {\n  var commonDecrypt = commonCbcDecryptFN(size);\n\n  return function(key, cdata, props) {\n    var epu = props.epu || helpers.int32ToBuffer(0),\n        epv = props.epv || helpers.int32ToBuffer(0),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0),\n        kdata = props.kdata || Buffer.alloc(0),\n        tag = props.tag || props.mac || Buffer.alloc(0);\n\n    // Pre Step 1 -- Generate Keys\n    var promises = [\n      generateCek(key, alg, epu, epv),\n      generateCik(key, alg, epu, epv)\n    ];\n\n    var cek,\n        cik;\n    var promise = Promise.all(promises).then(function(keys){\n      cek = keys[0];\n      cik = keys[1];\n    });\n\n\n    // STEP 1 -- MAC\n    promise = promise.then(function() {\n      // construct MAC input\n      var mdata = Buffer.concat([\n        adata,\n        DotLabel,\n        Buffer.from(kdata),\n        DotLabel,\n        Buffer.from(util.base64url.encode(iv), \"utf8\"),\n        DotLabel,\n        Buffer.from(util.base64url.encode(cdata), \"utf8\")\n      ]);\n\n      try {\n        return HMAC[\"HS\" + (size * 2)].verify(cik, mdata, tag, {\n          loose: false\n        });\n      } catch (e) {\n        throw new Error(\"mac check failed\");\n      }\n    });\n\n    // STEP 2 -- Decrypt\n    promise = promise.then(function(){\n      return commonDecrypt(cek, cdata, iv);\n    });\n\n    return promise;\n  };\n}\n\n// ### Public API\n// * [name].encrypt\n// * [name].decrypt\nvar aesCbcHmacSha2 = {};\n[\n  \"A128CBC-HS256\",\n  \"A192CBC-HS384\",\n  \"A256CBC-HS512\"\n].forEach(function(alg) {\n  var size = parseInt(/A(\\d+)CBC-HS(\\d+)?/g.exec(alg)[1]);\n  aesCbcHmacSha2[alg] = {\n    encrypt: cbcHmacEncryptFN(size),\n    decrypt: cbcHmacDecryptFN(size)\n  };\n});\n\n[\n  \"A128CBC+HS256\",\n  \"A192CBC+HS384\",\n  \"A256CBC+HS512\"\n].forEach(function(alg) {\n  var size = parseInt(/A(\\d+)CBC\\+HS(\\d+)?/g.exec(alg)[1]);\n  aesCbcHmacSha2[alg] = {\n    encrypt: concatKdfCbcHmacEncryptFN(size, alg),\n    decrypt: concatKdfCbcHmacDecryptFN(size, alg)\n  };\n});\n\nmodule.exports = aesCbcHmacSha2;\n"]},"metadata":{},"sourceType":"script"}