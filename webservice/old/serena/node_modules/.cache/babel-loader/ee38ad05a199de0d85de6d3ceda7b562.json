{"ast":null,"code":"const REGEXP = /(\\w+)=(\"[^\"]*\")/g;\nconst NOPE = [false];\n\nmodule.exports = function isBearerHeaderOnlyError(error) {\n  if (error instanceof this.httpClient.HTTPError) {\n    try {\n      const body = {};\n\n      if (!error.response.headers['www-authenticate'].startsWith('Bearer ')) {\n        return NOPE;\n      }\n\n      while (REGEXP.exec(error.response.headers['www-authenticate']) !== null) {\n        if (RegExp.$1 && RegExp.$2) {\n          body[RegExp.$1] = RegExp.$2.slice(1, -1);\n        }\n      }\n\n      return [!!body.error, body];\n    } catch (err) {}\n  }\n\n  return NOPE;\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/openid-client/lib/helpers/is_bearer_header_only_error.js"],"names":["REGEXP","NOPE","module","exports","isBearerHeaderOnlyError","error","httpClient","HTTPError","body","response","headers","startsWith","exec","RegExp","$1","$2","slice","err"],"mappings":"AAAA,MAAMA,MAAM,GAAG,kBAAf;AACA,MAAMC,IAAI,GAAG,CAAC,KAAD,CAAb;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACvD,MAAIA,KAAK,YAAY,KAAKC,UAAL,CAAgBC,SAArC,EAAgD;AAC9C,QAAI;AACF,YAAMC,IAAI,GAAG,EAAb;;AACA,UAAI,CAACH,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuB,kBAAvB,EAA2CC,UAA3C,CAAsD,SAAtD,CAAL,EAAuE;AACrE,eAAOV,IAAP;AACD;;AAED,aAAQD,MAAM,CAACY,IAAP,CAAYP,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuB,kBAAvB,CAAZ,CAAD,KAA8D,IAArE,EAA2E;AACzE,YAAIG,MAAM,CAACC,EAAP,IAAaD,MAAM,CAACE,EAAxB,EAA4B;AAC1BP,UAAAA,IAAI,CAACK,MAAM,CAACC,EAAR,CAAJ,GAAkBD,MAAM,CAACE,EAAP,CAAUC,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAlB;AACD;AACF;;AAED,aAAO,CAAC,CAAC,CAACR,IAAI,CAACH,KAAR,EAAeG,IAAf,CAAP;AACD,KAbD,CAaE,OAAOS,GAAP,EAAY,CAAE;AACjB;;AAED,SAAOhB,IAAP;AACD,CAnBD","sourcesContent":["const REGEXP = /(\\w+)=(\"[^\"]*\")/g;\nconst NOPE = [false];\n\nmodule.exports = function isBearerHeaderOnlyError(error) {\n  if (error instanceof this.httpClient.HTTPError) {\n    try {\n      const body = {};\n      if (!error.response.headers['www-authenticate'].startsWith('Bearer ')) {\n        return NOPE;\n      }\n\n      while ((REGEXP.exec(error.response.headers['www-authenticate'])) !== null) {\n        if (RegExp.$1 && RegExp.$2) {\n          body[RegExp.$1] = RegExp.$2.slice(1, -1);\n        }\n      }\n\n      return [!!body.error, body];\n    } catch (err) {}\n  }\n\n  return NOPE;\n};\n"]},"metadata":{},"sourceType":"script"}