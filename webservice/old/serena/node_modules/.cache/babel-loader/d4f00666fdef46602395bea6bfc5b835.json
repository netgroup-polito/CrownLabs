{"ast":null,"code":"/*!\n * util/utf8.js - Implementation of UTF-8 Encoder/Decoder\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar utf8 = exports;\n\nutf8.encode = function (input) {\n  var output = encodeURIComponent(input || \"\");\n  output = output.replace(/%([0-9a-fA-F]{2})/g, function (m, code) {\n    code = parseInt(code, 16);\n    return String.fromCharCode(code);\n  });\n  return output;\n};\n\nutf8.decode = function (input) {\n  var output = (input || \"\").replace(/[\\u0080-\\u00ff]/g, function (m) {\n    var code = (0x100 | m.charCodeAt(0)).toString(16).substring(1);\n    return \"%\" + code;\n  });\n  output = decodeURIComponent(output);\n  return output;\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/util/utf8.js"],"names":["utf8","exports","encode","input","output","encodeURIComponent","replace","m","code","parseInt","String","fromCharCode","decode","charCodeAt","toString","substring","decodeURIComponent"],"mappings":"AAAA;;;;;AAKA;;AAEA,IAAIA,IAAI,GAAGC,OAAX;;AAEAD,IAAI,CAACE,MAAL,GAAc,UAASC,KAAT,EAAgB;AAC5B,MAAIC,MAAM,GAAGC,kBAAkB,CAACF,KAAK,IAAI,EAAV,CAA/B;AACAC,EAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,oBAAf,EAAqC,UAASC,CAAT,EAAYC,IAAZ,EAAkB;AAC9DA,IAAAA,IAAI,GAAGC,QAAQ,CAACD,IAAD,EAAO,EAAP,CAAf;AACA,WAAOE,MAAM,CAACC,YAAP,CAAoBH,IAApB,CAAP;AACD,GAHQ,CAAT;AAKA,SAAOJ,MAAP;AACD,CARD;;AASAJ,IAAI,CAACY,MAAL,GAAc,UAAST,KAAT,EAAgB;AAC5B,MAAIC,MAAM,GAAG,CAACD,KAAK,IAAI,EAAV,EAAcG,OAAd,CAAsB,kBAAtB,EAA0C,UAASC,CAAT,EAAY;AACjE,QAAIC,IAAI,GAAG,CAAC,QAAQD,CAAC,CAACM,UAAF,CAAa,CAAb,CAAT,EAA0BC,QAA1B,CAAmC,EAAnC,EAAuCC,SAAvC,CAAiD,CAAjD,CAAX;AACA,WAAO,MAAMP,IAAb;AACD,GAHY,CAAb;AAIAJ,EAAAA,MAAM,GAAGY,kBAAkB,CAACZ,MAAD,CAA3B;AAEA,SAAOA,MAAP;AACD,CARD","sourcesContent":["/*!\n * util/utf8.js - Implementation of UTF-8 Encoder/Decoder\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar utf8 = exports;\n\nutf8.encode = function(input) {\n  var output = encodeURIComponent(input || \"\");\n  output = output.replace(/%([0-9a-fA-F]{2})/g, function(m, code) {\n    code = parseInt(code, 16);\n    return String.fromCharCode(code);\n  });\n\n  return output;\n};\nutf8.decode = function(input) {\n  var output = (input || \"\").replace(/[\\u0080-\\u00ff]/g, function(m) {\n    var code = (0x100 | m.charCodeAt(0)).toString(16).substring(1);\n    return \"%\" + code;\n  });\n  output = decodeURIComponent(output);\n\n  return output;\n};\n"]},"metadata":{},"sourceType":"script"}