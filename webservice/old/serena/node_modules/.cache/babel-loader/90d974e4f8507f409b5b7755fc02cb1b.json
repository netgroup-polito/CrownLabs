{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PopperJS from 'popper.js';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nvar initialPopperStyles = {\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  opacity: '0',\n  pointerEvents: 'none'\n};\nvar initialArrowStyles = {};\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param {HTMLElement} referenceElement The element\n * @param {HTMLElement} popperElement\n * @param {Object}      options\n * @param {Object}      options.modifiers Popper.js modifiers\n * @param {Boolean}     options.enabled toggle the popper functionality on/off\n * @param {String}      options.placement The popper element placement relative to the reference element\n * @param {Boolean}     options.positionFixed use fixed positioning\n * @param {Boolean}     options.eventsEnabled have Popper listen on window resize events to reposition the element\n */\n\nexport default function usePopper(referenceElement, popperElement, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      _ref$positionFixed = _ref.positionFixed,\n      positionFixed = _ref$positionFixed === void 0 ? false : _ref$positionFixed,\n      _ref$eventsEnabled = _ref.eventsEnabled,\n      eventsEnabled = _ref$eventsEnabled === void 0 ? true : _ref$eventsEnabled,\n      _ref$modifiers = _ref.modifiers,\n      modifiers = _ref$modifiers === void 0 ? {} : _ref$modifiers;\n\n  var popperInstanceRef = useRef();\n  var hasArrow = !!(modifiers.arrow && modifiers.arrow.element);\n  var scheduleUpdate = useCallback(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.scheduleUpdate();\n    }\n  }, []);\n\n  var _useState = useState({\n    placement: placement,\n    scheduleUpdate: scheduleUpdate,\n    outOfBoundaries: false,\n    styles: initialPopperStyles,\n    arrowStyles: initialArrowStyles\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // A placement difference in state means popper determined a new placement\n  // apart from the props value. By the time the popper element is rendered with\n  // the new position Popper has already measured it, if the place change triggers\n  // a size change it will result in a misaligned popper. So we schedule an update to be sure.\n\n\n  useEffect(function () {\n    scheduleUpdate();\n  }, [state.placement, scheduleUpdate]);\n  /** Toggle Events */\n\n  useEffect(function () {\n    if (popperInstanceRef.current) {\n      // eslint-disable-next-line no-unused-expressions\n      eventsEnabled ? popperInstanceRef.current.enableEventListeners() : popperInstanceRef.current.disableEventListeners();\n    }\n  }, [eventsEnabled]);\n  useEffect(function () {\n    if (!enabled || referenceElement == null || popperElement == null) {\n      return undefined;\n    }\n\n    var arrow = modifiers.arrow && _extends({}, modifiers.arrow, {\n      element: modifiers.arrow.element\n    });\n\n    popperInstanceRef.current = new PopperJS(referenceElement, popperElement, {\n      placement: placement,\n      positionFixed: positionFixed,\n      modifiers: _extends({}, modifiers, {\n        arrow: arrow,\n        applyStyle: {\n          enabled: false\n        },\n        updateStateModifier: {\n          enabled: true,\n          order: 900,\n          fn: function fn(data) {\n            setState({\n              scheduleUpdate: scheduleUpdate,\n              styles: _extends({\n                position: data.offsets.popper.position\n              }, data.styles),\n              arrowStyles: data.arrowStyles,\n              outOfBoundaries: data.hide,\n              placement: data.placement\n            });\n          }\n        }\n      })\n    });\n    return function () {\n      if (popperInstanceRef.current !== null) {\n        popperInstanceRef.current.destroy();\n        popperInstanceRef.current = null;\n      }\n    }; // intentionally NOT re-running on new modifiers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [enabled, placement, positionFixed, referenceElement, popperElement, hasArrow]);\n  return state;\n}","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/react-overlays/esm/usePopper.js"],"names":["_extends","PopperJS","useCallback","useEffect","useRef","useState","initialPopperStyles","position","top","left","opacity","pointerEvents","initialArrowStyles","usePopper","referenceElement","popperElement","_temp","_ref","_ref$enabled","enabled","_ref$placement","placement","_ref$positionFixed","positionFixed","_ref$eventsEnabled","eventsEnabled","_ref$modifiers","modifiers","popperInstanceRef","hasArrow","arrow","element","scheduleUpdate","current","_useState","outOfBoundaries","styles","arrowStyles","state","setState","enableEventListeners","disableEventListeners","undefined","applyStyle","updateStateModifier","order","fn","data","offsets","popper","hide","destroy"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PopperJS from 'popper.js';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nvar initialPopperStyles = {\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  opacity: '0',\n  pointerEvents: 'none'\n};\nvar initialArrowStyles = {};\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param {HTMLElement} referenceElement The element\n * @param {HTMLElement} popperElement\n * @param {Object}      options\n * @param {Object}      options.modifiers Popper.js modifiers\n * @param {Boolean}     options.enabled toggle the popper functionality on/off\n * @param {String}      options.placement The popper element placement relative to the reference element\n * @param {Boolean}     options.positionFixed use fixed positioning\n * @param {Boolean}     options.eventsEnabled have Popper listen on window resize events to reposition the element\n */\n\nexport default function usePopper(referenceElement, popperElement, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      _ref$positionFixed = _ref.positionFixed,\n      positionFixed = _ref$positionFixed === void 0 ? false : _ref$positionFixed,\n      _ref$eventsEnabled = _ref.eventsEnabled,\n      eventsEnabled = _ref$eventsEnabled === void 0 ? true : _ref$eventsEnabled,\n      _ref$modifiers = _ref.modifiers,\n      modifiers = _ref$modifiers === void 0 ? {} : _ref$modifiers;\n\n  var popperInstanceRef = useRef();\n  var hasArrow = !!(modifiers.arrow && modifiers.arrow.element);\n  var scheduleUpdate = useCallback(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.scheduleUpdate();\n    }\n  }, []);\n\n  var _useState = useState({\n    placement: placement,\n    scheduleUpdate: scheduleUpdate,\n    outOfBoundaries: false,\n    styles: initialPopperStyles,\n    arrowStyles: initialArrowStyles\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // A placement difference in state means popper determined a new placement\n  // apart from the props value. By the time the popper element is rendered with\n  // the new position Popper has already measured it, if the place change triggers\n  // a size change it will result in a misaligned popper. So we schedule an update to be sure.\n\n\n  useEffect(function () {\n    scheduleUpdate();\n  }, [state.placement, scheduleUpdate]);\n  /** Toggle Events */\n\n  useEffect(function () {\n    if (popperInstanceRef.current) {\n      // eslint-disable-next-line no-unused-expressions\n      eventsEnabled ? popperInstanceRef.current.enableEventListeners() : popperInstanceRef.current.disableEventListeners();\n    }\n  }, [eventsEnabled]);\n  useEffect(function () {\n    if (!enabled || referenceElement == null || popperElement == null) {\n      return undefined;\n    }\n\n    var arrow = modifiers.arrow && _extends({}, modifiers.arrow, {\n      element: modifiers.arrow.element\n    });\n\n    popperInstanceRef.current = new PopperJS(referenceElement, popperElement, {\n      placement: placement,\n      positionFixed: positionFixed,\n      modifiers: _extends({}, modifiers, {\n        arrow: arrow,\n        applyStyle: {\n          enabled: false\n        },\n        updateStateModifier: {\n          enabled: true,\n          order: 900,\n          fn: function fn(data) {\n            setState({\n              scheduleUpdate: scheduleUpdate,\n              styles: _extends({\n                position: data.offsets.popper.position\n              }, data.styles),\n              arrowStyles: data.arrowStyles,\n              outOfBoundaries: data.hide,\n              placement: data.placement\n            });\n          }\n        }\n      })\n    });\n    return function () {\n      if (popperInstanceRef.current !== null) {\n        popperInstanceRef.current.destroy();\n        popperInstanceRef.current = null;\n      }\n    }; // intentionally NOT re-running on new modifiers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [enabled, placement, positionFixed, referenceElement, popperElement, hasArrow]);\n  return state;\n}"]},"metadata":{},"sourceType":"module"}