{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst querystring = require(\"querystring\");\n\nconst terminal_size_queue_1 = require(\"./terminal-size-queue\");\n\nconst web_socket_handler_1 = require(\"./web-socket-handler\");\n\nclass Attach {\n  constructor(config, websocketInterface) {\n    this.handler = websocketInterface || new web_socket_handler_1.WebSocketHandler(config);\n  }\n\n  attach(namespace, podName, containerName, stdout, stderr, stdin, tty) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const query = {\n        container: containerName,\n        stderr: stderr != null,\n        stdin: stdin != null,\n        stdout: stdout != null,\n        tty\n      };\n      const queryStr = querystring.stringify(query);\n      const path = `/api/v1/namespaces/${namespace}/pods/${podName}/attach?${queryStr}`;\n      const conn = yield this.handler.connect(path, null, (streamNum, buff) => {\n        web_socket_handler_1.WebSocketHandler.handleStandardStreams(streamNum, buff, stdout, stderr);\n        return true;\n      });\n\n      if (stdin != null) {\n        web_socket_handler_1.WebSocketHandler.handleStandardInput(conn, stdin, web_socket_handler_1.WebSocketHandler.StdinStream);\n      }\n\n      if (terminal_size_queue_1.isResizable(stdout)) {\n        this.terminalSizeQueue = new terminal_size_queue_1.TerminalSizeQueue();\n        web_socket_handler_1.WebSocketHandler.handleStandardInput(conn, this.terminalSizeQueue, web_socket_handler_1.WebSocketHandler.ResizeStream);\n        this.terminalSizeQueue.handleResizes(stdout);\n      }\n\n      return conn;\n    });\n  }\n\n}\n\nexports.Attach = Attach;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/@kubernetes/client-node/dist/attach.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","querystring","terminal_size_queue_1","web_socket_handler_1","Attach","constructor","config","websocketInterface","handler","WebSocketHandler","attach","namespace","podName","containerName","stdout","stderr","stdin","tty","__awaiter","query","container","queryStr","stringify","path","conn","connect","streamNum","buff","handleStandardStreams","handleStandardInput","StdinStream","isResizable","terminalSizeQueue","TerminalSizeQueue","ResizeStream","handleResizes"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAME,qBAAqB,GAAGF,OAAO,CAAC,uBAAD,CAArC;;AACA,MAAMG,oBAAoB,GAAGH,OAAO,CAAC,sBAAD,CAApC;;AACA,MAAMI,MAAN,CAAa;AACTC,EAAAA,WAAW,CAACC,MAAD,EAASC,kBAAT,EAA6B;AACpC,SAAKC,OAAL,GAAeD,kBAAkB,IAAI,IAAIJ,oBAAoB,CAACM,gBAAzB,CAA0CH,MAA1C,CAArC;AACH;;AACDI,EAAAA,MAAM,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,aAArB,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoDC,KAApD,EAA2DC,GAA3D,EAAgE;AAClE,WAAOlB,OAAO,CAACmB,SAAR,CAAkB,IAAlB,EAAwB,KAAK,CAA7B,EAAgC,KAAK,CAArC,EAAwC,aAAa;AACxD,YAAMC,KAAK,GAAG;AACVC,QAAAA,SAAS,EAAEP,aADD;AAEVE,QAAAA,MAAM,EAAEA,MAAM,IAAI,IAFR;AAGVC,QAAAA,KAAK,EAAEA,KAAK,IAAI,IAHN;AAIVF,QAAAA,MAAM,EAAEA,MAAM,IAAI,IAJR;AAKVG,QAAAA;AALU,OAAd;AAOA,YAAMI,QAAQ,GAAGpB,WAAW,CAACqB,SAAZ,CAAsBH,KAAtB,CAAjB;AACA,YAAMI,IAAI,GAAI,sBAAqBZ,SAAU,SAAQC,OAAQ,WAAUS,QAAS,EAAhF;AACA,YAAMG,IAAI,GAAG,MAAM,KAAKhB,OAAL,CAAaiB,OAAb,CAAqBF,IAArB,EAA2B,IAA3B,EAAiC,CAACG,SAAD,EAAYC,IAAZ,KAAqB;AACrExB,QAAAA,oBAAoB,CAACM,gBAArB,CAAsCmB,qBAAtC,CAA4DF,SAA5D,EAAuEC,IAAvE,EAA6Eb,MAA7E,EAAqFC,MAArF;AACA,eAAO,IAAP;AACH,OAHkB,CAAnB;;AAIA,UAAIC,KAAK,IAAI,IAAb,EAAmB;AACfb,QAAAA,oBAAoB,CAACM,gBAArB,CAAsCoB,mBAAtC,CAA0DL,IAA1D,EAAgER,KAAhE,EAAuEb,oBAAoB,CAACM,gBAArB,CAAsCqB,WAA7G;AACH;;AACD,UAAI5B,qBAAqB,CAAC6B,WAAtB,CAAkCjB,MAAlC,CAAJ,EAA+C;AAC3C,aAAKkB,iBAAL,GAAyB,IAAI9B,qBAAqB,CAAC+B,iBAA1B,EAAzB;AACA9B,QAAAA,oBAAoB,CAACM,gBAArB,CAAsCoB,mBAAtC,CAA0DL,IAA1D,EAAgE,KAAKQ,iBAArE,EAAwF7B,oBAAoB,CAACM,gBAArB,CAAsCyB,YAA9H;AACA,aAAKF,iBAAL,CAAuBG,aAAvB,CAAqCrB,MAArC;AACH;;AACD,aAAOU,IAAP;AACH,KAvBM,CAAP;AAwBH;;AA7BQ;;AA+Bb3B,OAAO,CAACO,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst querystring = require(\"querystring\");\nconst terminal_size_queue_1 = require(\"./terminal-size-queue\");\nconst web_socket_handler_1 = require(\"./web-socket-handler\");\nclass Attach {\n    constructor(config, websocketInterface) {\n        this.handler = websocketInterface || new web_socket_handler_1.WebSocketHandler(config);\n    }\n    attach(namespace, podName, containerName, stdout, stderr, stdin, tty) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const query = {\n                container: containerName,\n                stderr: stderr != null,\n                stdin: stdin != null,\n                stdout: stdout != null,\n                tty,\n            };\n            const queryStr = querystring.stringify(query);\n            const path = `/api/v1/namespaces/${namespace}/pods/${podName}/attach?${queryStr}`;\n            const conn = yield this.handler.connect(path, null, (streamNum, buff) => {\n                web_socket_handler_1.WebSocketHandler.handleStandardStreams(streamNum, buff, stdout, stderr);\n                return true;\n            });\n            if (stdin != null) {\n                web_socket_handler_1.WebSocketHandler.handleStandardInput(conn, stdin, web_socket_handler_1.WebSocketHandler.StdinStream);\n            }\n            if (terminal_size_queue_1.isResizable(stdout)) {\n                this.terminalSizeQueue = new terminal_size_queue_1.TerminalSizeQueue();\n                web_socket_handler_1.WebSocketHandler.handleStandardInput(conn, this.terminalSizeQueue, web_socket_handler_1.WebSocketHandler.ResizeStream);\n                this.terminalSizeQueue.handleResizes(stdout);\n            }\n            return conn;\n        });\n    }\n}\nexports.Attach = Attach;\n//# sourceMappingURL=attach.js.map"]},"metadata":{},"sourceType":"script"}