{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst stream_1 = require(\"stream\");\n\nclass TerminalSizeQueue extends stream_1.Readable {\n  constructor(opts = {}) {\n    super(Object.assign({}, opts, {\n      // tslint:disable-next-line:no-empty\n      read() {}\n\n    }));\n  }\n\n  handleResizes(writeStream) {\n    // Set initial size\n    this.resize(getTerminalSize(writeStream)); // Handle future size updates\n\n    writeStream.on('resize', () => this.resize(getTerminalSize(writeStream)));\n  }\n\n  resize(size) {\n    this.push(JSON.stringify(size));\n  }\n\n}\n\nexports.TerminalSizeQueue = TerminalSizeQueue;\n\nfunction isResizable(stream) {\n  if (stream == null) {\n    return false;\n  }\n\n  const hasRows = 'rows' in stream;\n  const hasColumns = 'columns' in stream;\n  const hasOn = typeof stream.on === 'function';\n  return hasRows && hasColumns && hasOn;\n}\n\nexports.isResizable = isResizable;\n\nfunction getTerminalSize(writeStream) {\n  return {\n    height: writeStream.rows,\n    width: writeStream.columns\n  };\n}","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/@kubernetes/client-node/dist/terminal-size-queue.js"],"names":["Object","defineProperty","exports","value","stream_1","require","TerminalSizeQueue","Readable","constructor","opts","assign","read","handleResizes","writeStream","resize","getTerminalSize","on","size","push","JSON","stringify","isResizable","stream","hasRows","hasColumns","hasOn","height","rows","width","columns"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,iBAAN,SAAgCF,QAAQ,CAACG,QAAzC,CAAkD;AAC9CC,EAAAA,WAAW,CAACC,IAAI,GAAG,EAAR,EAAY;AACnB,UAAMT,MAAM,CAACU,MAAP,CAAc,EAAd,EAAkBD,IAAlB,EAAwB;AAC1B;AACAE,MAAAA,IAAI,GAAG,CAAG;;AAFgB,KAAxB,CAAN;AAGH;;AACDC,EAAAA,aAAa,CAACC,WAAD,EAAc;AACvB;AACA,SAAKC,MAAL,CAAYC,eAAe,CAACF,WAAD,CAA3B,EAFuB,CAGvB;;AACAA,IAAAA,WAAW,CAACG,EAAZ,CAAe,QAAf,EAAyB,MAAM,KAAKF,MAAL,CAAYC,eAAe,CAACF,WAAD,CAA3B,CAA/B;AACH;;AACDC,EAAAA,MAAM,CAACG,IAAD,EAAO;AACT,SAAKC,IAAL,CAAUC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAV;AACH;;AAd6C;;AAgBlDf,OAAO,CAACI,iBAAR,GAA4BA,iBAA5B;;AACA,SAASe,WAAT,CAAqBC,MAArB,EAA6B;AACzB,MAAIA,MAAM,IAAI,IAAd,EAAoB;AAChB,WAAO,KAAP;AACH;;AACD,QAAMC,OAAO,GAAG,UAAUD,MAA1B;AACA,QAAME,UAAU,GAAG,aAAaF,MAAhC;AACA,QAAMG,KAAK,GAAG,OAAOH,MAAM,CAACN,EAAd,KAAqB,UAAnC;AACA,SAAOO,OAAO,IAAIC,UAAX,IAAyBC,KAAhC;AACH;;AACDvB,OAAO,CAACmB,WAAR,GAAsBA,WAAtB;;AACA,SAASN,eAAT,CAAyBF,WAAzB,EAAsC;AAClC,SAAO;AAAEa,IAAAA,MAAM,EAAEb,WAAW,CAACc,IAAtB;AAA4BC,IAAAA,KAAK,EAAEf,WAAW,CAACgB;AAA/C,GAAP;AACH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\nclass TerminalSizeQueue extends stream_1.Readable {\n    constructor(opts = {}) {\n        super(Object.assign({}, opts, { \n            // tslint:disable-next-line:no-empty\n            read() { } }));\n    }\n    handleResizes(writeStream) {\n        // Set initial size\n        this.resize(getTerminalSize(writeStream));\n        // Handle future size updates\n        writeStream.on('resize', () => this.resize(getTerminalSize(writeStream)));\n    }\n    resize(size) {\n        this.push(JSON.stringify(size));\n    }\n}\nexports.TerminalSizeQueue = TerminalSizeQueue;\nfunction isResizable(stream) {\n    if (stream == null) {\n        return false;\n    }\n    const hasRows = 'rows' in stream;\n    const hasColumns = 'columns' in stream;\n    const hasOn = typeof stream.on === 'function';\n    return hasRows && hasColumns && hasOn;\n}\nexports.isResizable = isResizable;\nfunction getTerminalSize(writeStream) {\n    return { height: writeStream.rows, width: writeStream.columns };\n}\n//# sourceMappingURL=terminal-size-queue.js.map"]},"metadata":{},"sourceType":"script"}