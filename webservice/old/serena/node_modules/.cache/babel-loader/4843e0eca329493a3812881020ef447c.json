{"ast":null,"code":"'use strict';\n\nvar utils = require('../utils');\n\nvar common = require('../common');\n\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\nvar sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1)) return new SHA1();\n  BlockHash.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i++) W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/hash.js/lib/hash/sha/1.js"],"names":["utils","require","common","shaCommon","rotl32","sum32","sum32_5","ft_1","BlockHash","sha1_K","SHA1","call","h","W","Array","inherits","module","exports","blockSize","outSize","hmacStrength","padLength","prototype","_update","msg","start","i","length","a","b","c","d","e","s","t","_digest","digest","enc","toHex32","split32"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n"]},"metadata":{},"sourceType":"script"}