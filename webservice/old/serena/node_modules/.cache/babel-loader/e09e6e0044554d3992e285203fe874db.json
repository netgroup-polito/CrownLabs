{"ast":null,"code":"\"use strict\";\n/**\n * Kubernetes\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: v1.15.5\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst localVarRequest = require(\"request\");\n\nconst models_1 = require(\"../model/models\");\n\nconst models_2 = require(\"../model/models\");\n\nlet defaultBasePath = 'http://localhost'; // ===============================================\n// This file is autogenerated - Please do not edit\n// ===============================================\n\nvar AuthenticationV1beta1ApiApiKeys;\n\n(function (AuthenticationV1beta1ApiApiKeys) {\n  AuthenticationV1beta1ApiApiKeys[AuthenticationV1beta1ApiApiKeys[\"BearerToken\"] = 0] = \"BearerToken\";\n})(AuthenticationV1beta1ApiApiKeys = exports.AuthenticationV1beta1ApiApiKeys || (exports.AuthenticationV1beta1ApiApiKeys = {}));\n\nclass AuthenticationV1beta1Api {\n  constructor(basePathOrUsername, password, basePath) {\n    this._basePath = defaultBasePath;\n    this.defaultHeaders = {};\n    this._useQuerystring = false;\n    this.authentications = {\n      'default': new models_1.VoidAuth(),\n      'BearerToken': new models_2.ApiKeyAuth('header', 'authorization')\n    };\n\n    if (password) {\n      if (basePath) {\n        this.basePath = basePath;\n      }\n    } else {\n      if (basePathOrUsername) {\n        this.basePath = basePathOrUsername;\n      }\n    }\n  }\n\n  set useQuerystring(value) {\n    this._useQuerystring = value;\n  }\n\n  set basePath(basePath) {\n    this._basePath = basePath;\n  }\n\n  get basePath() {\n    return this._basePath;\n  }\n\n  setDefaultAuthentication(auth) {\n    this.authentications.default = auth;\n  }\n\n  setApiKey(key, value) {\n    this.authentications[AuthenticationV1beta1ApiApiKeys[key]].apiKey = value;\n  }\n  /**\n   * create a TokenReview\n   * @param body\n   * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n   * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n   * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n   */\n\n\n  createTokenReview(body, dryRun, fieldManager, pretty, options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/authentication.k8s.io/v1beta1/tokenreviews';\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {}; // verify required parameter 'body' is not null or undefined\n\n      if (body === null || body === undefined) {\n        throw new Error('Required parameter body was null or undefined when calling createTokenReview.');\n      }\n\n      if (dryRun !== undefined) {\n        localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n      }\n\n      if (fieldManager !== undefined) {\n        localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n      }\n\n      if (pretty !== undefined) {\n        localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n      }\n\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'POST',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true,\n        body: models_1.ObjectSerializer.serialize(body, \"V1beta1TokenReview\")\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1beta1TokenReview\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n  /**\n   * get available resources\n   */\n\n\n  getAPIResources(options = {\n    headers: {}\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const localVarPath = this.basePath + '/apis/authentication.k8s.io/v1beta1/';\n      let localVarQueryParameters = {};\n      let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n      let localVarFormParams = {};\n      Object.assign(localVarHeaderParams, options.headers);\n      let localVarUseFormData = false;\n      let localVarRequestOptions = {\n        method: 'GET',\n        qs: localVarQueryParameters,\n        headers: localVarHeaderParams,\n        uri: localVarPath,\n        useQuerystring: this._useQuerystring,\n        json: true\n      };\n      let authenticationPromise = Promise.resolve();\n      authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n      authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n      return authenticationPromise.then(() => {\n        if (Object.keys(localVarFormParams).length) {\n          if (localVarUseFormData) {\n            localVarRequestOptions.formData = localVarFormParams;\n          } else {\n            localVarRequestOptions.form = localVarFormParams;\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          localVarRequest(localVarRequestOptions, (error, response, body) => {\n            if (error) {\n              reject(error);\n            } else {\n              body = models_1.ObjectSerializer.deserialize(body, \"V1APIResourceList\");\n\n              if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                resolve({\n                  response: response,\n                  body: body\n                });\n              } else {\n                reject({\n                  response: response,\n                  body: body\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n\n}\n\nexports.AuthenticationV1beta1Api = AuthenticationV1beta1Api;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/@kubernetes/client-node/dist/gen/api/authenticationV1beta1Api.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","localVarRequest","models_1","models_2","defaultBasePath","AuthenticationV1beta1ApiApiKeys","AuthenticationV1beta1Api","constructor","basePathOrUsername","password","basePath","_basePath","defaultHeaders","_useQuerystring","authentications","VoidAuth","ApiKeyAuth","useQuerystring","setDefaultAuthentication","auth","default","setApiKey","key","apiKey","createTokenReview","body","dryRun","fieldManager","pretty","options","headers","__awaiter","localVarPath","localVarQueryParameters","localVarHeaderParams","assign","localVarFormParams","undefined","Error","ObjectSerializer","serialize","localVarUseFormData","localVarRequestOptions","method","qs","uri","json","authenticationPromise","Promise","resolve","then","BearerToken","applyToRequest","keys","length","formData","form","reject","error","response","deserialize","statusCode","getAPIResources"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Kubernetes\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: v1.15.5\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst localVarRequest = require(\"request\");\nconst models_1 = require(\"../model/models\");\nconst models_2 = require(\"../model/models\");\nlet defaultBasePath = 'http://localhost';\n// ===============================================\n// This file is autogenerated - Please do not edit\n// ===============================================\nvar AuthenticationV1beta1ApiApiKeys;\n(function (AuthenticationV1beta1ApiApiKeys) {\n    AuthenticationV1beta1ApiApiKeys[AuthenticationV1beta1ApiApiKeys[\"BearerToken\"] = 0] = \"BearerToken\";\n})(AuthenticationV1beta1ApiApiKeys = exports.AuthenticationV1beta1ApiApiKeys || (exports.AuthenticationV1beta1ApiApiKeys = {}));\nclass AuthenticationV1beta1Api {\n    constructor(basePathOrUsername, password, basePath) {\n        this._basePath = defaultBasePath;\n        this.defaultHeaders = {};\n        this._useQuerystring = false;\n        this.authentications = {\n            'default': new models_1.VoidAuth(),\n            'BearerToken': new models_2.ApiKeyAuth('header', 'authorization'),\n        };\n        if (password) {\n            if (basePath) {\n                this.basePath = basePath;\n            }\n        }\n        else {\n            if (basePathOrUsername) {\n                this.basePath = basePathOrUsername;\n            }\n        }\n    }\n    set useQuerystring(value) {\n        this._useQuerystring = value;\n    }\n    set basePath(basePath) {\n        this._basePath = basePath;\n    }\n    get basePath() {\n        return this._basePath;\n    }\n    setDefaultAuthentication(auth) {\n        this.authentications.default = auth;\n    }\n    setApiKey(key, value) {\n        this.authentications[AuthenticationV1beta1ApiApiKeys[key]].apiKey = value;\n    }\n    /**\n     * create a TokenReview\n     * @param body\n     * @param dryRun When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n     * @param fieldManager fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n     * @param pretty If \\&#39;true\\&#39;, then the output is pretty printed.\n     */\n    createTokenReview(body, dryRun, fieldManager, pretty, options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/authentication.k8s.io/v1beta1/tokenreviews';\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            // verify required parameter 'body' is not null or undefined\n            if (body === null || body === undefined) {\n                throw new Error('Required parameter body was null or undefined when calling createTokenReview.');\n            }\n            if (dryRun !== undefined) {\n                localVarQueryParameters['dryRun'] = models_1.ObjectSerializer.serialize(dryRun, \"string\");\n            }\n            if (fieldManager !== undefined) {\n                localVarQueryParameters['fieldManager'] = models_1.ObjectSerializer.serialize(fieldManager, \"string\");\n            }\n            if (pretty !== undefined) {\n                localVarQueryParameters['pretty'] = models_1.ObjectSerializer.serialize(pretty, \"string\");\n            }\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'POST',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n                body: models_1.ObjectSerializer.serialize(body, \"V1beta1TokenReview\")\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1beta1TokenReview\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * get available resources\n     */\n    getAPIResources(options = { headers: {} }) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const localVarPath = this.basePath + '/apis/authentication.k8s.io/v1beta1/';\n            let localVarQueryParameters = {};\n            let localVarHeaderParams = Object.assign({}, this.defaultHeaders);\n            let localVarFormParams = {};\n            Object.assign(localVarHeaderParams, options.headers);\n            let localVarUseFormData = false;\n            let localVarRequestOptions = {\n                method: 'GET',\n                qs: localVarQueryParameters,\n                headers: localVarHeaderParams,\n                uri: localVarPath,\n                useQuerystring: this._useQuerystring,\n                json: true,\n            };\n            let authenticationPromise = Promise.resolve();\n            authenticationPromise = authenticationPromise.then(() => this.authentications.BearerToken.applyToRequest(localVarRequestOptions));\n            authenticationPromise = authenticationPromise.then(() => this.authentications.default.applyToRequest(localVarRequestOptions));\n            return authenticationPromise.then(() => {\n                if (Object.keys(localVarFormParams).length) {\n                    if (localVarUseFormData) {\n                        localVarRequestOptions.formData = localVarFormParams;\n                    }\n                    else {\n                        localVarRequestOptions.form = localVarFormParams;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    localVarRequest(localVarRequestOptions, (error, response, body) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            body = models_1.ObjectSerializer.deserialize(body, \"V1APIResourceList\");\n                            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {\n                                resolve({ response: response, body: body });\n                            }\n                            else {\n                                reject({ response: response, body: body });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n}\nexports.AuthenticationV1beta1Api = AuthenticationV1beta1Api;\n//# sourceMappingURL=authenticationV1beta1Api.js.map"]},"metadata":{},"sourceType":"script"}