{"ast":null,"code":"'use strict';\n\nconst isPlainObj = require('is-plain-obj');\n\nmodule.exports = (obj, opts) => {\n  if (!isPlainObj(obj)) {\n    throw new TypeError('Expected a plain object');\n  }\n\n  opts = opts || {}; // DEPRECATED\n\n  if (typeof opts === 'function') {\n    throw new TypeError('Specify the compare function as an option instead');\n  }\n\n  const deep = opts.deep;\n  const seenInput = [];\n  const seenOutput = [];\n\n  const sortKeys = x => {\n    const seenIndex = seenInput.indexOf(x);\n\n    if (seenIndex !== -1) {\n      return seenOutput[seenIndex];\n    }\n\n    const ret = {};\n    const keys = Object.keys(x).sort(opts.compare);\n    seenInput.push(x);\n    seenOutput.push(ret);\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const val = x[key];\n\n      if (deep && Array.isArray(val)) {\n        const retArr = [];\n\n        for (let j = 0; j < val.length; j++) {\n          retArr[j] = isPlainObj(val[j]) ? sortKeys(val[j]) : val[j];\n        }\n\n        ret[key] = retArr;\n        continue;\n      }\n\n      ret[key] = deep && isPlainObj(val) ? sortKeys(val) : val;\n    }\n\n    return ret;\n  };\n\n  return sortKeys(obj);\n};","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/cacheable-request/node_modules/sort-keys/index.js"],"names":["isPlainObj","require","module","exports","obj","opts","TypeError","deep","seenInput","seenOutput","sortKeys","x","seenIndex","indexOf","ret","keys","Object","sort","compare","push","i","length","key","val","Array","isArray","retArr","j"],"mappings":"AAAA;;AACA,MAAMA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC/B,MAAI,CAACL,UAAU,CAACI,GAAD,CAAf,EAAsB;AACrB,UAAM,IAAIE,SAAJ,CAAc,yBAAd,CAAN;AACA;;AAEDD,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf,CAL+B,CAO/B;;AACA,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC/B,UAAM,IAAIC,SAAJ,CAAc,mDAAd,CAAN;AACA;;AAED,QAAMC,IAAI,GAAGF,IAAI,CAACE,IAAlB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,UAAU,GAAG,EAAnB;;AAEA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACrB,UAAMC,SAAS,GAAGJ,SAAS,CAACK,OAAV,CAAkBF,CAAlB,CAAlB;;AAEA,QAAIC,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACrB,aAAOH,UAAU,CAACG,SAAD,CAAjB;AACA;;AAED,UAAME,GAAG,GAAG,EAAZ;AACA,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYJ,CAAZ,EAAeM,IAAf,CAAoBZ,IAAI,CAACa,OAAzB,CAAb;AAEAV,IAAAA,SAAS,CAACW,IAAV,CAAeR,CAAf;AACAF,IAAAA,UAAU,CAACU,IAAX,CAAgBL,GAAhB;;AAEA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACM,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACrC,YAAME,GAAG,GAAGP,IAAI,CAACK,CAAD,CAAhB;AACA,YAAMG,GAAG,GAAGZ,CAAC,CAACW,GAAD,CAAb;;AAEA,UAAIf,IAAI,IAAIiB,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAZ,EAAgC;AAC/B,cAAMG,MAAM,GAAG,EAAf;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACF,MAAxB,EAAgCM,CAAC,EAAjC,EAAqC;AACpCD,UAAAA,MAAM,CAACC,CAAD,CAAN,GAAY3B,UAAU,CAACuB,GAAG,CAACI,CAAD,CAAJ,CAAV,GAAqBjB,QAAQ,CAACa,GAAG,CAACI,CAAD,CAAJ,CAA7B,GAAwCJ,GAAG,CAACI,CAAD,CAAvD;AACA;;AAEDb,QAAAA,GAAG,CAACQ,GAAD,CAAH,GAAWI,MAAX;AACA;AACA;;AAEDZ,MAAAA,GAAG,CAACQ,GAAD,CAAH,GAAWf,IAAI,IAAIP,UAAU,CAACuB,GAAD,CAAlB,GAA0Bb,QAAQ,CAACa,GAAD,CAAlC,GAA0CA,GAArD;AACA;;AAED,WAAOT,GAAP;AACA,GAhCD;;AAkCA,SAAOJ,QAAQ,CAACN,GAAD,CAAf;AACA,CAnDD","sourcesContent":["'use strict';\nconst isPlainObj = require('is-plain-obj');\n\nmodule.exports = (obj, opts) => {\n\tif (!isPlainObj(obj)) {\n\t\tthrow new TypeError('Expected a plain object');\n\t}\n\n\topts = opts || {};\n\n\t// DEPRECATED\n\tif (typeof opts === 'function') {\n\t\tthrow new TypeError('Specify the compare function as an option instead');\n\t}\n\n\tconst deep = opts.deep;\n\tconst seenInput = [];\n\tconst seenOutput = [];\n\n\tconst sortKeys = x => {\n\t\tconst seenIndex = seenInput.indexOf(x);\n\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst ret = {};\n\t\tconst keys = Object.keys(x).sort(opts.compare);\n\n\t\tseenInput.push(x);\n\t\tseenOutput.push(ret);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key = keys[i];\n\t\t\tconst val = x[key];\n\n\t\t\tif (deep && Array.isArray(val)) {\n\t\t\t\tconst retArr = [];\n\n\t\t\t\tfor (let j = 0; j < val.length; j++) {\n\t\t\t\t\tretArr[j] = isPlainObj(val[j]) ? sortKeys(val[j]) : val[j];\n\t\t\t\t}\n\n\t\t\t\tret[key] = retArr;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tret[key] = deep && isPlainObj(val) ? sortKeys(val) : val;\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\treturn sortKeys(obj);\n};\n"]},"metadata":{},"sourceType":"script"}