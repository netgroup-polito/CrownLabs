{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /* \n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/react-bootstrap/esm/AccordionToggle.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useContext","SelectableContext","AccordionContext","useAccordionToggle","eventKey","onClick","contextEventKey","onSelect","e","eventKeyPassed","AccordionToggle","forwardRef","_ref","ref","_ref$as","as","Component","children","props","accordionOnClick","createElement"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,OAAtC,EAA+C;AACpD,MAAIC,eAAe,GAAGN,UAAU,CAACE,gBAAD,CAAhC;AACA,MAAIK,QAAQ,GAAGP,UAAU,CAACC,iBAAD,CAAzB;AACA,SAAO,UAAUO,CAAV,EAAa;AAClB;;;;AAIA,QAAIC,cAAc,GAAGL,QAAQ,KAAKE,eAAb,GAA+B,IAA/B,GAAsCF,QAA3D;AACAG,IAAAA,QAAQ,CAACE,cAAD,EAAiBD,CAAjB,CAAR;AACA,QAAIH,OAAJ,EAAaA,OAAO,CAACG,CAAD,CAAP;AACd,GARD;AASD;AACD,IAAIE,eAAe,GAAGX,KAAK,CAACY,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AAC1D,MAAIC,OAAO,GAAGF,IAAI,CAACG,EAAnB;AAAA,MACIC,SAAS,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqB,QAArB,GAAgCA,OADhD;AAAA,MAEIG,QAAQ,GAAGL,IAAI,CAACK,QAFpB;AAAA,MAGIb,QAAQ,GAAGQ,IAAI,CAACR,QAHpB;AAAA,MAIIC,OAAO,GAAGO,IAAI,CAACP,OAJnB;AAAA,MAKIa,KAAK,GAAGpB,6BAA6B,CAACc,IAAD,EAAO,CAAC,IAAD,EAAO,UAAP,EAAmB,UAAnB,EAA+B,SAA/B,CAAP,CALzC;;AAOA,MAAIO,gBAAgB,GAAGhB,kBAAkB,CAACC,QAAD,EAAWC,OAAX,CAAzC;AACA,SAAON,KAAK,CAACqB,aAAN,CAAoBJ,SAApB,EAA+BnB,QAAQ,CAAC;AAC7CgB,IAAAA,GAAG,EAAEA,GADwC;AAE7CR,IAAAA,OAAO,EAAEc;AAFoC,GAAD,EAG3CD,KAH2C,CAAvC,EAGID,QAHJ,CAAP;AAID,CAbqB,CAAtB;AAcA,eAAeP,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /* \n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;"]},"metadata":{},"sourceType":"module"}