{"ast":null,"code":"// Copyright (c) 2012, Mark Cavage. All rights reserved.\n// Copyright 2015 Joyent, Inc.\nvar assert = require('assert');\n\nvar Stream = require('stream').Stream;\n\nvar util = require('util'); ///--- Globals\n\n/* JSSTYLED */\n\n\nvar UUID_REGEXP = /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/; ///--- Internal\n\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction _toss(name, expected, oper, arg, actual) {\n  throw new assert.AssertionError({\n    message: util.format('%s (%s) is required', name, expected),\n    actual: actual === undefined ? typeof arg : actual(arg),\n    expected: expected,\n    operator: oper || '===',\n    stackStartFunction: _toss.caller\n  });\n}\n\nfunction _getClass(arg) {\n  return Object.prototype.toString.call(arg).slice(8, -1);\n}\n\nfunction noop() {} // Why even bother with asserts?\n///--- Exports\n\n\nvar types = {\n  bool: {\n    check: function (arg) {\n      return typeof arg === 'boolean';\n    }\n  },\n  func: {\n    check: function (arg) {\n      return typeof arg === 'function';\n    }\n  },\n  string: {\n    check: function (arg) {\n      return typeof arg === 'string';\n    }\n  },\n  object: {\n    check: function (arg) {\n      return typeof arg === 'object' && arg !== null;\n    }\n  },\n  number: {\n    check: function (arg) {\n      return typeof arg === 'number' && !isNaN(arg);\n    }\n  },\n  finite: {\n    check: function (arg) {\n      return typeof arg === 'number' && !isNaN(arg) && isFinite(arg);\n    }\n  },\n  buffer: {\n    check: function (arg) {\n      return Buffer.isBuffer(arg);\n    },\n    operator: 'Buffer.isBuffer'\n  },\n  array: {\n    check: function (arg) {\n      return Array.isArray(arg);\n    },\n    operator: 'Array.isArray'\n  },\n  stream: {\n    check: function (arg) {\n      return arg instanceof Stream;\n    },\n    operator: 'instanceof',\n    actual: _getClass\n  },\n  date: {\n    check: function (arg) {\n      return arg instanceof Date;\n    },\n    operator: 'instanceof',\n    actual: _getClass\n  },\n  regexp: {\n    check: function (arg) {\n      return arg instanceof RegExp;\n    },\n    operator: 'instanceof',\n    actual: _getClass\n  },\n  uuid: {\n    check: function (arg) {\n      return typeof arg === 'string' && UUID_REGEXP.test(arg);\n    },\n    operator: 'isUUID'\n  }\n};\n\nfunction _setExports(ndebug) {\n  var keys = Object.keys(types);\n  var out;\n  /* re-export standard assert */\n\n  if (process.env.NODE_NDEBUG) {\n    out = noop;\n  } else {\n    out = function (arg, msg) {\n      if (!arg) {\n        _toss(msg, 'true', arg);\n      }\n    };\n  }\n  /* standard checks */\n\n\n  keys.forEach(function (k) {\n    if (ndebug) {\n      out[k] = noop;\n      return;\n    }\n\n    var type = types[k];\n\n    out[k] = function (arg, msg) {\n      if (!type.check(arg)) {\n        _toss(msg, k, type.operator, arg, type.actual);\n      }\n    };\n  });\n  /* optional checks */\n\n  keys.forEach(function (k) {\n    var name = 'optional' + _capitalize(k);\n\n    if (ndebug) {\n      out[name] = noop;\n      return;\n    }\n\n    var type = types[k];\n\n    out[name] = function (arg, msg) {\n      if (arg === undefined || arg === null) {\n        return;\n      }\n\n      if (!type.check(arg)) {\n        _toss(msg, k, type.operator, arg, type.actual);\n      }\n    };\n  });\n  /* arrayOf checks */\n\n  keys.forEach(function (k) {\n    var name = 'arrayOf' + _capitalize(k);\n\n    if (ndebug) {\n      out[name] = noop;\n      return;\n    }\n\n    var type = types[k];\n    var expected = '[' + k + ']';\n\n    out[name] = function (arg, msg) {\n      if (!Array.isArray(arg)) {\n        _toss(msg, expected, type.operator, arg, type.actual);\n      }\n\n      var i;\n\n      for (i = 0; i < arg.length; i++) {\n        if (!type.check(arg[i])) {\n          _toss(msg, expected, type.operator, arg, type.actual);\n        }\n      }\n    };\n  });\n  /* optionalArrayOf checks */\n\n  keys.forEach(function (k) {\n    var name = 'optionalArrayOf' + _capitalize(k);\n\n    if (ndebug) {\n      out[name] = noop;\n      return;\n    }\n\n    var type = types[k];\n    var expected = '[' + k + ']';\n\n    out[name] = function (arg, msg) {\n      if (arg === undefined || arg === null) {\n        return;\n      }\n\n      if (!Array.isArray(arg)) {\n        _toss(msg, expected, type.operator, arg, type.actual);\n      }\n\n      var i;\n\n      for (i = 0; i < arg.length; i++) {\n        if (!type.check(arg[i])) {\n          _toss(msg, expected, type.operator, arg, type.actual);\n        }\n      }\n    };\n  });\n  /* re-export built-in assertions */\n\n  Object.keys(assert).forEach(function (k) {\n    if (k === 'AssertionError') {\n      out[k] = assert[k];\n      return;\n    }\n\n    if (ndebug) {\n      out[k] = noop;\n      return;\n    }\n\n    out[k] = assert[k];\n  });\n  /* export ourselves (for unit tests _only_) */\n\n  out._setExports = _setExports;\n  return out;\n}\n\nmodule.exports = _setExports(process.env.NODE_NDEBUG);","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/assert-plus/assert.js"],"names":["assert","require","Stream","util","UUID_REGEXP","_capitalize","str","charAt","toUpperCase","slice","_toss","name","expected","oper","arg","actual","AssertionError","message","format","undefined","operator","stackStartFunction","caller","_getClass","Object","prototype","toString","call","noop","types","bool","check","func","string","object","number","isNaN","finite","isFinite","buffer","Buffer","isBuffer","array","Array","isArray","stream","date","Date","regexp","RegExp","uuid","test","_setExports","ndebug","keys","out","process","env","NODE_NDEBUG","msg","forEach","k","type","i","length","module","exports"],"mappings":"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","sourcesContent":["// Copyright (c) 2012, Mark Cavage. All rights reserved.\n// Copyright 2015 Joyent, Inc.\n\nvar assert = require('assert');\nvar Stream = require('stream').Stream;\nvar util = require('util');\n\n\n///--- Globals\n\n/* JSSTYLED */\nvar UUID_REGEXP = /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/;\n\n\n///--- Internal\n\nfunction _capitalize(str) {\n    return (str.charAt(0).toUpperCase() + str.slice(1));\n}\n\nfunction _toss(name, expected, oper, arg, actual) {\n    throw new assert.AssertionError({\n        message: util.format('%s (%s) is required', name, expected),\n        actual: (actual === undefined) ? typeof (arg) : actual(arg),\n        expected: expected,\n        operator: oper || '===',\n        stackStartFunction: _toss.caller\n    });\n}\n\nfunction _getClass(arg) {\n    return (Object.prototype.toString.call(arg).slice(8, -1));\n}\n\nfunction noop() {\n    // Why even bother with asserts?\n}\n\n\n///--- Exports\n\nvar types = {\n    bool: {\n        check: function (arg) { return typeof (arg) === 'boolean'; }\n    },\n    func: {\n        check: function (arg) { return typeof (arg) === 'function'; }\n    },\n    string: {\n        check: function (arg) { return typeof (arg) === 'string'; }\n    },\n    object: {\n        check: function (arg) {\n            return typeof (arg) === 'object' && arg !== null;\n        }\n    },\n    number: {\n        check: function (arg) {\n            return typeof (arg) === 'number' && !isNaN(arg);\n        }\n    },\n    finite: {\n        check: function (arg) {\n            return typeof (arg) === 'number' && !isNaN(arg) && isFinite(arg);\n        }\n    },\n    buffer: {\n        check: function (arg) { return Buffer.isBuffer(arg); },\n        operator: 'Buffer.isBuffer'\n    },\n    array: {\n        check: function (arg) { return Array.isArray(arg); },\n        operator: 'Array.isArray'\n    },\n    stream: {\n        check: function (arg) { return arg instanceof Stream; },\n        operator: 'instanceof',\n        actual: _getClass\n    },\n    date: {\n        check: function (arg) { return arg instanceof Date; },\n        operator: 'instanceof',\n        actual: _getClass\n    },\n    regexp: {\n        check: function (arg) { return arg instanceof RegExp; },\n        operator: 'instanceof',\n        actual: _getClass\n    },\n    uuid: {\n        check: function (arg) {\n            return typeof (arg) === 'string' && UUID_REGEXP.test(arg);\n        },\n        operator: 'isUUID'\n    }\n};\n\nfunction _setExports(ndebug) {\n    var keys = Object.keys(types);\n    var out;\n\n    /* re-export standard assert */\n    if (process.env.NODE_NDEBUG) {\n        out = noop;\n    } else {\n        out = function (arg, msg) {\n            if (!arg) {\n                _toss(msg, 'true', arg);\n            }\n        };\n    }\n\n    /* standard checks */\n    keys.forEach(function (k) {\n        if (ndebug) {\n            out[k] = noop;\n            return;\n        }\n        var type = types[k];\n        out[k] = function (arg, msg) {\n            if (!type.check(arg)) {\n                _toss(msg, k, type.operator, arg, type.actual);\n            }\n        };\n    });\n\n    /* optional checks */\n    keys.forEach(function (k) {\n        var name = 'optional' + _capitalize(k);\n        if (ndebug) {\n            out[name] = noop;\n            return;\n        }\n        var type = types[k];\n        out[name] = function (arg, msg) {\n            if (arg === undefined || arg === null) {\n                return;\n            }\n            if (!type.check(arg)) {\n                _toss(msg, k, type.operator, arg, type.actual);\n            }\n        };\n    });\n\n    /* arrayOf checks */\n    keys.forEach(function (k) {\n        var name = 'arrayOf' + _capitalize(k);\n        if (ndebug) {\n            out[name] = noop;\n            return;\n        }\n        var type = types[k];\n        var expected = '[' + k + ']';\n        out[name] = function (arg, msg) {\n            if (!Array.isArray(arg)) {\n                _toss(msg, expected, type.operator, arg, type.actual);\n            }\n            var i;\n            for (i = 0; i < arg.length; i++) {\n                if (!type.check(arg[i])) {\n                    _toss(msg, expected, type.operator, arg, type.actual);\n                }\n            }\n        };\n    });\n\n    /* optionalArrayOf checks */\n    keys.forEach(function (k) {\n        var name = 'optionalArrayOf' + _capitalize(k);\n        if (ndebug) {\n            out[name] = noop;\n            return;\n        }\n        var type = types[k];\n        var expected = '[' + k + ']';\n        out[name] = function (arg, msg) {\n            if (arg === undefined || arg === null) {\n                return;\n            }\n            if (!Array.isArray(arg)) {\n                _toss(msg, expected, type.operator, arg, type.actual);\n            }\n            var i;\n            for (i = 0; i < arg.length; i++) {\n                if (!type.check(arg[i])) {\n                    _toss(msg, expected, type.operator, arg, type.actual);\n                }\n            }\n        };\n    });\n\n    /* re-export built-in assertions */\n    Object.keys(assert).forEach(function (k) {\n        if (k === 'AssertionError') {\n            out[k] = assert[k];\n            return;\n        }\n        if (ndebug) {\n            out[k] = noop;\n            return;\n        }\n        out[k] = assert[k];\n    });\n\n    /* export ourselves (for unit tests _only_) */\n    out._setExports = _setExports;\n\n    return out;\n}\n\nmodule.exports = _setExports(process.env.NODE_NDEBUG);\n"]},"metadata":{},"sourceType":"script"}