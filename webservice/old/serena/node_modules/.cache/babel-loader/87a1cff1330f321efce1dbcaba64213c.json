{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: require('fast-deep-equal'),\n  ucs2length: require('./ucs2length'),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  cleanUpCode: cleanUpCode,\n  finalCleanUpCode: finalCleanUpCode,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  schemaUnknownRules: schemaUnknownRules,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\nfunction copy(o, to) {\n  to = to || {};\n\n  for (var key in o) to[key] = o[key];\n\n  return to;\n}\n\nfunction checkDataType(dataType, data, negate) {\n  var EQUAL = negate ? ' !== ' : ' === ',\n      AND = negate ? ' || ' : ' && ',\n      OK = negate ? '!' : '',\n      NOT = negate ? '' : '!';\n\n  switch (dataType) {\n    case 'null':\n      return data + EQUAL + 'null';\n\n    case 'array':\n      return OK + 'Array.isArray(' + data + ')';\n\n    case 'object':\n      return '(' + OK + data + AND + 'typeof ' + data + EQUAL + '\"object\"' + AND + NOT + 'Array.isArray(' + data + '))';\n\n    case 'integer':\n      return '(typeof ' + data + EQUAL + '\"number\"' + AND + NOT + '(' + data + ' % 1)' + AND + data + EQUAL + data + ')';\n\n    default:\n      return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\nfunction checkDataTypes(dataTypes, data) {\n  switch (dataTypes.length) {\n    case 1:\n      return checkDataType(dataTypes[0], data, true);\n\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n\n      if (types.array && types.object) {\n        code = types.null ? '(' : '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n\n      if (types.number) delete types.integer;\n\n      for (var t in types) code += (code ? ' && ' : '') + checkDataType(t, data, true);\n\n      return code;\n  }\n}\n\nvar COERCE_TO_TYPES = toHash(['string', 'number', 'integer', 'boolean', 'null']);\n\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n\n    for (var i = 0; i < dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\nfunction toHash(arr) {\n  var hash = {};\n\n  for (var i = 0; i < arr.length; i++) hash[arr[i]] = true;\n\n  return hash;\n}\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\n\nfunction getProperty(key) {\n  return typeof key == 'number' ? '[' + key + ']' : IDENTIFIER.test(key) ? '.' + key : \"['\" + escapeQuotes(key) + \"']\";\n}\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\f/g, '\\\\f').replace(/\\t/g, '\\\\t');\n}\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\nvar EMPTY_ELSE = /else\\s*{\\s*}/g,\n    EMPTY_IF_NO_ELSE = /if\\s*\\([^)]+\\)\\s*\\{\\s*\\}(?!\\s*else)/g,\n    EMPTY_IF_WITH_ELSE = /if\\s*\\(([^)]+)\\)\\s*\\{\\s*\\}\\s*else(?!\\s*if)/g;\n\nfunction cleanUpCode(out) {\n  return out.replace(EMPTY_ELSE, '').replace(EMPTY_IF_NO_ELSE, '').replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');\n}\n\nvar ERRORS_REGEXP = /[^v.]errors/g,\n    REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g,\n    REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g,\n    RETURN_VALID = 'return errors === 0;',\n    RETURN_TRUE = 'validate.errors = null; return true;',\n    RETURN_ASYNC = /if \\(errors === 0\\) return data;\\s*else throw new ValidationError\\(vErrors\\);/,\n    RETURN_DATA_ASYNC = 'return data;',\n    ROOTDATA_REGEXP = /[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g,\n    REMOVE_ROOTDATA = /if \\(rootData === undefined\\) rootData = data;/;\n\nfunction finalCleanUpCode(out, async) {\n  var matches = out.match(ERRORS_REGEXP);\n\n  if (matches && matches.length == 2) {\n    out = async ? out.replace(REMOVE_ERRORS_ASYNC, '').replace(RETURN_ASYNC, RETURN_DATA_ASYNC) : out.replace(REMOVE_ERRORS, '').replace(RETURN_VALID, RETURN_TRUE);\n  }\n\n  matches = out.match(ROOTDATA_REGEXP);\n  if (!matches || matches.length !== 3) return out;\n  return out.replace(REMOVE_ROOTDATA, '');\n}\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n\n  for (var key in schema) if (rules[key]) return true;\n}\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\nfunction schemaUnknownRules(schema, rules) {\n  if (typeof schema == 'boolean') return;\n\n  for (var key in schema) if (!rules[key]) return key;\n}\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n  ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')') : isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'';\n  return joinPaths(currentPath, path);\n}\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n  ? toQuotedString('/' + escapeJsonPointer(prop)) : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\n\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + (lvl - up || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n\n  return expr;\n}\n\nfunction joinPaths(a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/' \\+ '/g, '');\n}\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/ajv/lib/compile/util.js"],"names":["module","exports","copy","checkDataType","checkDataTypes","coerceToTypes","toHash","getProperty","escapeQuotes","equal","require","ucs2length","varOccurences","varReplace","cleanUpCode","finalCleanUpCode","schemaHasRules","schemaHasRulesExcept","schemaUnknownRules","toQuotedString","getPathExpr","getPath","getData","unescapeFragment","unescapeJsonPointer","escapeFragment","escapeJsonPointer","o","to","key","dataType","data","negate","EQUAL","AND","OK","NOT","dataTypes","length","code","types","array","object","null","number","integer","t","COERCE_TO_TYPES","optionCoerceTypes","Array","isArray","i","arr","hash","IDENTIFIER","SINGLE_QUOTE","test","str","replace","dataVar","matches","match","RegExp","expr","EMPTY_ELSE","EMPTY_IF_NO_ELSE","EMPTY_IF_WITH_ELSE","out","ERRORS_REGEXP","REMOVE_ERRORS","REMOVE_ERRORS_ASYNC","RETURN_VALID","RETURN_TRUE","RETURN_ASYNC","RETURN_DATA_ASYNC","ROOTDATA_REGEXP","REMOVE_ROOTDATA","async","schema","rules","exceptKeyword","currentPath","jsonPointers","isNumber","path","joinPaths","prop","JSON_POINTER","RELATIVE_JSON_POINTER","$data","lvl","paths","up","jsonPointer","Error","segments","split","segment","a","b","decodeURIComponent","encodeURIComponent"],"mappings":"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","sourcesContent":["'use strict';\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: require('fast-deep-equal'),\n  ucs2length: require('./ucs2length'),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  cleanUpCode: cleanUpCode,\n  finalCleanUpCode: finalCleanUpCode,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  schemaUnknownRules: schemaUnknownRules,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nvar EMPTY_ELSE = /else\\s*{\\s*}/g\n  , EMPTY_IF_NO_ELSE = /if\\s*\\([^)]+\\)\\s*\\{\\s*\\}(?!\\s*else)/g\n  , EMPTY_IF_WITH_ELSE = /if\\s*\\(([^)]+)\\)\\s*\\{\\s*\\}\\s*else(?!\\s*if)/g;\nfunction cleanUpCode(out) {\n  return out.replace(EMPTY_ELSE, '')\n            .replace(EMPTY_IF_NO_ELSE, '')\n            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');\n}\n\n\nvar ERRORS_REGEXP = /[^v.]errors/g\n  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g\n  , REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g\n  , RETURN_VALID = 'return errors === 0;'\n  , RETURN_TRUE = 'validate.errors = null; return true;'\n  , RETURN_ASYNC = /if \\(errors === 0\\) return data;\\s*else throw new ValidationError\\(vErrors\\);/\n  , RETURN_DATA_ASYNC = 'return data;'\n  , ROOTDATA_REGEXP = /[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g\n  , REMOVE_ROOTDATA = /if \\(rootData === undefined\\) rootData = data;/;\n\nfunction finalCleanUpCode(out, async) {\n  var matches = out.match(ERRORS_REGEXP);\n  if (matches && matches.length == 2) {\n    out = async\n          ? out.replace(REMOVE_ERRORS_ASYNC, '')\n               .replace(RETURN_ASYNC, RETURN_DATA_ASYNC)\n          : out.replace(REMOVE_ERRORS, '')\n               .replace(RETURN_VALID, RETURN_TRUE);\n  }\n\n  matches = out.match(ROOTDATA_REGEXP);\n  if (!matches || matches.length !== 3) return out;\n  return out.replace(REMOVE_ROOTDATA, '');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction schemaUnknownRules(schema, rules) {\n  if (typeof schema == 'boolean') return;\n  for (var key in schema) if (!rules[key]) return key;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/' \\+ '/g, '');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n"]},"metadata":{},"sourceType":"script"}