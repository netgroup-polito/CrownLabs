{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar pad_string_1 = require(\"./pad-string\");\n\nfunction encode(input, encoding) {\n  if (encoding === void 0) {\n    encoding = \"utf8\";\n  }\n\n  if (Buffer.isBuffer(input)) {\n    return fromBase64(input.toString(\"base64\"));\n  }\n\n  return fromBase64(Buffer.from(input, encoding).toString(\"base64\"));\n}\n\n;\n\nfunction decode(base64url, encoding) {\n  if (encoding === void 0) {\n    encoding = \"utf8\";\n  }\n\n  return Buffer.from(toBase64(base64url), \"base64\").toString(encoding);\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n  return pad_string_1.default(base64url).replace(/\\-/g, \"+\").replace(/_/g, \"/\");\n}\n\nfunction fromBase64(base64) {\n  return base64.replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\n\nfunction toBuffer(base64url) {\n  return Buffer.from(toBase64(base64url), \"base64\");\n}\n\nvar base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nexports.default = base64url;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/base64url/dist/base64url.js"],"names":["Object","defineProperty","exports","value","pad_string_1","require","encode","input","encoding","Buffer","isBuffer","fromBase64","toString","from","decode","base64url","toBase64","default","replace","base64","toBuffer"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC7B,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,IAAAA,QAAQ,GAAG,MAAX;AAAoB;;AAC/C,MAAIC,MAAM,CAACC,QAAP,CAAgBH,KAAhB,CAAJ,EAA4B;AACxB,WAAOI,UAAU,CAACJ,KAAK,CAACK,QAAN,CAAe,QAAf,CAAD,CAAjB;AACH;;AACD,SAAOD,UAAU,CAACF,MAAM,CAACI,IAAP,CAAYN,KAAZ,EAAmBC,QAAnB,EAA6BI,QAA7B,CAAsC,QAAtC,CAAD,CAAjB;AACH;;AACD;;AACA,SAASE,MAAT,CAAgBC,SAAhB,EAA2BP,QAA3B,EAAqC;AACjC,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,IAAAA,QAAQ,GAAG,MAAX;AAAoB;;AAC/C,SAAOC,MAAM,CAACI,IAAP,CAAYG,QAAQ,CAACD,SAAD,CAApB,EAAiC,QAAjC,EAA2CH,QAA3C,CAAoDJ,QAApD,CAAP;AACH;;AACD,SAASQ,QAAT,CAAkBD,SAAlB,EAA6B;AACzBA,EAAAA,SAAS,GAAGA,SAAS,CAACH,QAAV,EAAZ;AACA,SAAOR,YAAY,CAACa,OAAb,CAAqBF,SAArB,EACFG,OADE,CACM,KADN,EACa,GADb,EAEFA,OAFE,CAEM,IAFN,EAEY,GAFZ,CAAP;AAGH;;AACD,SAASP,UAAT,CAAoBQ,MAApB,EAA4B;AACxB,SAAOA,MAAM,CACRD,OADE,CACM,IADN,EACY,EADZ,EAEFA,OAFE,CAEM,KAFN,EAEa,GAFb,EAGFA,OAHE,CAGM,KAHN,EAGa,GAHb,CAAP;AAIH;;AACD,SAASE,QAAT,CAAkBL,SAAlB,EAA6B;AACzB,SAAON,MAAM,CAACI,IAAP,CAAYG,QAAQ,CAACD,SAAD,CAApB,EAAiC,QAAjC,CAAP;AACH;;AACD,IAAIA,SAAS,GAAGT,MAAhB;AACAS,SAAS,CAACT,MAAV,GAAmBA,MAAnB;AACAS,SAAS,CAACD,MAAV,GAAmBA,MAAnB;AACAC,SAAS,CAACC,QAAV,GAAqBA,QAArB;AACAD,SAAS,CAACJ,UAAV,GAAuBA,UAAvB;AACAI,SAAS,CAACK,QAAV,GAAqBA,QAArB;AACAlB,OAAO,CAACe,OAAR,GAAkBF,SAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pad_string_1 = require(\"./pad-string\");\nfunction encode(input, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString(\"base64\"));\n    }\n    return fromBase64(Buffer.from(input, encoding).toString(\"base64\"));\n}\n;\nfunction decode(base64url, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    return Buffer.from(toBase64(base64url), \"base64\").toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return pad_string_1.default(base64url)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction toBuffer(base64url) {\n    return Buffer.from(toBase64(base64url), \"base64\");\n}\nvar base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nexports.default = base64url;\n"]},"metadata":{},"sourceType":"script"}