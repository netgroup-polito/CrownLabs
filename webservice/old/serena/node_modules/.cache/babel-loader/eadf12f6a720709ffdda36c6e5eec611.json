{"ast":null,"code":"/*!\n * util/utf8.js - Implementation of UTF-8 Encoder/Decoder\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar lodash = require(\"lodash\");\n\nvar partialRight = lodash.partialRight;\nvar merge = lodash.merge;\n\nvar typedArrayCtors = function () {\n  var ctors = [];\n\n  if (\"undefined\" !== typeof Uint8ClampedArray) {\n    ctors.push(Uint8ClampedArray);\n  }\n\n  if (\"undefined\" !== typeof Uint8Array) {\n    ctors.push(Uint8Array);\n  }\n\n  if (\"undefined\" !== typeof Uint16Array) {\n    ctors.push(Uint16Array);\n  }\n\n  if (\"undefined\" !== typeof Uint32Array) {\n    ctors.push(Uint32Array);\n  }\n\n  if (\"undefined\" !== typeof Float32Array) {\n    ctors.push(Float32Array);\n  }\n\n  if (\"undefined\" !== typeof Float64Array) {\n    ctors.push(Float64Array);\n  }\n\n  return ctors;\n}();\n\nfunction findTypedArrayFor(ta) {\n  var ctor;\n\n  for (var idx = 0; !ctor && typedArrayCtors.length > idx; idx++) {\n    if (ta instanceof typedArrayCtors[idx]) {\n      ctor = typedArrayCtors[idx];\n    }\n  }\n\n  return ctor;\n}\n\nfunction mergeBuffer(a, b) {\n  // TODO: should this be a copy, or the reference itself?\n  if (Buffer.isBuffer(b)) {\n    b = Buffer.from(b);\n  } else {\n    var Ctor = findTypedArrayFor(b);\n    b = Ctor ? new Ctor(b, b.byteOffset, b.byteLength) : undefined;\n  } // TODO: QUESTION: create a merged <whatever-a-is>??\n  // for now, a is b\n\n\n  a = b;\n  return b;\n}\n\nmodule.exports = partialRight(merge, mergeBuffer);","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/util/merge.js"],"names":["lodash","require","partialRight","merge","typedArrayCtors","ctors","Uint8ClampedArray","push","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","findTypedArrayFor","ta","ctor","idx","length","mergeBuffer","a","b","Buffer","isBuffer","from","Ctor","byteOffset","byteLength","undefined","module","exports"],"mappings":"AAAA;;;;;AAKA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIC,YAAY,GAAGF,MAAM,CAACE,YAA1B;AACA,IAAIC,KAAK,GAAGH,MAAM,CAACG,KAAnB;;AAEA,IAAIC,eAAe,GAAI,YAAW;AAChC,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAI,gBAAgB,OAAOC,iBAA3B,EAA8C;AAC5CD,IAAAA,KAAK,CAACE,IAAN,CAAWD,iBAAX;AACD;;AACD,MAAI,gBAAgB,OAAOE,UAA3B,EAAuC;AACrCH,IAAAA,KAAK,CAACE,IAAN,CAAWC,UAAX;AACD;;AACD,MAAI,gBAAgB,OAAOC,WAA3B,EAAwC;AACtCJ,IAAAA,KAAK,CAACE,IAAN,CAAWE,WAAX;AACD;;AACD,MAAI,gBAAgB,OAAOC,WAA3B,EAAwC;AACtCL,IAAAA,KAAK,CAACE,IAAN,CAAWG,WAAX;AACD;;AACD,MAAI,gBAAgB,OAAOC,YAA3B,EAAyC;AACvCN,IAAAA,KAAK,CAACE,IAAN,CAAWI,YAAX;AACD;;AACD,MAAI,gBAAgB,OAAOC,YAA3B,EAAyC;AACvCP,IAAAA,KAAK,CAACE,IAAN,CAAWK,YAAX;AACD;;AACD,SAAOP,KAAP;AACD,CArBqB,EAAtB;;AAuBA,SAASQ,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7B,MAAIC,IAAJ;;AACA,OAAK,IAAIC,GAAG,GAAG,CAAf,EAAkB,CAACD,IAAD,IAASX,eAAe,CAACa,MAAhB,GAAyBD,GAApD,EAAyDA,GAAG,EAA5D,EAAgE;AAC9D,QAAIF,EAAE,YAAYV,eAAe,CAACY,GAAD,CAAjC,EAAwC;AACtCD,MAAAA,IAAI,GAAGX,eAAe,CAACY,GAAD,CAAtB;AACD;AACF;;AACD,SAAOD,IAAP;AACD;;AAED,SAASG,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACzB;AACA,MAAIC,MAAM,CAACC,QAAP,CAAgBF,CAAhB,CAAJ,EAAwB;AACtBA,IAAAA,CAAC,GAAGC,MAAM,CAACE,IAAP,CAAYH,CAAZ,CAAJ;AACD,GAFD,MAEO;AACL,QAAII,IAAI,GAAGX,iBAAiB,CAACO,CAAD,CAA5B;AACAA,IAAAA,CAAC,GAAGI,IAAI,GACJ,IAAIA,IAAJ,CAASJ,CAAT,EAAYA,CAAC,CAACK,UAAd,EAA0BL,CAAC,CAACM,UAA5B,CADI,GAEJC,SAFJ;AAGD,GATwB,CAWzB;AACA;;;AACAR,EAAAA,CAAC,GAAGC,CAAJ;AAEA,SAAOA,CAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiB3B,YAAY,CAACC,KAAD,EAAQe,WAAR,CAA7B","sourcesContent":["/*!\n * util/utf8.js - Implementation of UTF-8 Encoder/Decoder\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar lodash = require(\"lodash\");\n\nvar partialRight = lodash.partialRight;\nvar merge = lodash.merge;\n\nvar typedArrayCtors = (function() {\n  var ctors = [];\n  if (\"undefined\" !== typeof Uint8ClampedArray) {\n    ctors.push(Uint8ClampedArray);\n  }\n  if (\"undefined\" !== typeof Uint8Array) {\n    ctors.push(Uint8Array);\n  }\n  if (\"undefined\" !== typeof Uint16Array) {\n    ctors.push(Uint16Array);\n  }\n  if (\"undefined\" !== typeof Uint32Array) {\n    ctors.push(Uint32Array);\n  }\n  if (\"undefined\" !== typeof Float32Array) {\n    ctors.push(Float32Array);\n  }\n  if (\"undefined\" !== typeof Float64Array) {\n    ctors.push(Float64Array);\n  }\n  return ctors;\n})();\n\nfunction findTypedArrayFor(ta) {\n  var ctor;\n  for (var idx = 0; !ctor && typedArrayCtors.length > idx; idx++) {\n    if (ta instanceof typedArrayCtors[idx]) {\n      ctor = typedArrayCtors[idx];\n    }\n  }\n  return ctor;\n}\n\nfunction mergeBuffer(a, b) {\n  // TODO: should this be a copy, or the reference itself?\n  if (Buffer.isBuffer(b)) {\n    b = Buffer.from(b);\n  } else {\n    var Ctor = findTypedArrayFor(b);\n    b = Ctor ?\n        new Ctor(b, b.byteOffset, b.byteLength) :\n        undefined;\n  }\n\n  // TODO: QUESTION: create a merged <whatever-a-is>??\n  // for now, a is b\n  a = b;\n\n  return b;\n}\n\nmodule.exports = partialRight(merge, mergeBuffer);\n"]},"metadata":{},"sourceType":"script"}