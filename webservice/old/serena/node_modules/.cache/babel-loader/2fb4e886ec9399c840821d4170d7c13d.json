{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n  // Read the first 150 bytes from the file\n  const size = 150;\n  let buffer;\n\n  if (Buffer.alloc) {\n    // Node.js v4.5+ / v5.10+\n    buffer = Buffer.alloc(size);\n  } else {\n    // Old Node.js API\n    buffer = new Buffer(size);\n    buffer.fill(0); // zero-fill\n  }\n\n  let fd;\n\n  try {\n    fd = fs.openSync(command, 'r');\n    fs.readSync(fd, buffer, 0, size, 0);\n    fs.closeSync(fd);\n  } catch (e) {}\n  /* Empty */\n  // Attempt to extract shebang (null is returned if not a shebang)\n\n\n  return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/cross-spawn/lib/util/readShebang.js"],"names":["fs","require","shebangCommand","readShebang","command","size","buffer","Buffer","alloc","fill","fd","openSync","readSync","closeSync","e","toString","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,iBAAD,CAA9B;;AAEA,SAASE,WAAT,CAAqBC,OAArB,EAA8B;AAC1B;AACA,QAAMC,IAAI,GAAG,GAAb;AACA,MAAIC,MAAJ;;AAEA,MAAIC,MAAM,CAACC,KAAX,EAAkB;AACd;AACAF,IAAAA,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAaH,IAAb,CAAT;AACH,GAHD,MAGO;AACH;AACAC,IAAAA,MAAM,GAAG,IAAIC,MAAJ,CAAWF,IAAX,CAAT;AACAC,IAAAA,MAAM,CAACG,IAAP,CAAY,CAAZ,EAHG,CAGa;AACnB;;AAED,MAAIC,EAAJ;;AAEA,MAAI;AACAA,IAAAA,EAAE,GAAGV,EAAE,CAACW,QAAH,CAAYP,OAAZ,EAAqB,GAArB,CAAL;AACAJ,IAAAA,EAAE,CAACY,QAAH,CAAYF,EAAZ,EAAgBJ,MAAhB,EAAwB,CAAxB,EAA2BD,IAA3B,EAAiC,CAAjC;AACAL,IAAAA,EAAE,CAACa,SAAH,CAAaH,EAAb;AACH,GAJD,CAIE,OAAOI,CAAP,EAAU,CAAe;AAAb;AAEd;;;AACA,SAAOZ,cAAc,CAACI,MAAM,CAACS,QAAP,EAAD,CAArB;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiBd,WAAjB","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    let buffer;\n\n    if (Buffer.alloc) {\n        // Node.js v4.5+ / v5.10+\n        buffer = Buffer.alloc(size);\n    } else {\n        // Old Node.js API\n        buffer = new Buffer(size);\n        buffer.fill(0); // zero-fill\n    }\n\n    let fd;\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, size, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;\n"]},"metadata":{},"sourceType":"script"}