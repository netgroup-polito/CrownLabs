{"ast":null,"code":"var generatePrime = require('./lib/generatePrime');\n\nvar primes = require('./lib/primes.json');\n\nvar DH = require('./lib/dh');\n\nfunction getDiffieHellman(mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex');\n  var gen = new Buffer(primes[mod].gen, 'hex');\n  return new DH(prime, gen);\n}\n\nvar ENCODINGS = {\n  'binary': true,\n  'hex': true,\n  'base64': true\n};\n\nfunction createDiffieHellman(prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator);\n  }\n\n  enc = enc || 'binary';\n  genc = genc || 'binary';\n  generator = generator || new Buffer([2]);\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc);\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true);\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc);\n  }\n\n  return new DH(prime, generator, true);\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/diffie-hellman/browser.js"],"names":["generatePrime","require","primes","DH","getDiffieHellman","mod","prime","Buffer","gen","ENCODINGS","createDiffieHellman","enc","generator","genc","isBuffer","undefined","exports","DiffieHellmanGroup","createDiffieHellmanGroup","DiffieHellman"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,qBAAD,CAA3B;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,mBAAD,CAApB;;AAEA,IAAIE,EAAE,GAAGF,OAAO,CAAC,UAAD,CAAhB;;AAEA,SAASG,gBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,MAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAWL,MAAM,CAACG,GAAD,CAAN,CAAYC,KAAvB,EAA8B,KAA9B,CAAZ;AACA,MAAIE,GAAG,GAAG,IAAID,MAAJ,CAAWL,MAAM,CAACG,GAAD,CAAN,CAAYG,GAAvB,EAA4B,KAA5B,CAAV;AAEA,SAAO,IAAIL,EAAJ,CAAOG,KAAP,EAAcE,GAAd,CAAP;AACD;;AAED,IAAIC,SAAS,GAAG;AACd,YAAU,IADI;AACE,SAAO,IADT;AACe,YAAU;AADzB,CAAhB;;AAIA,SAASC,mBAAT,CAA8BJ,KAA9B,EAAqCK,GAArC,EAA0CC,SAA1C,EAAqDC,IAArD,EAA2D;AACzD,MAAIN,MAAM,CAACO,QAAP,CAAgBH,GAAhB,KAAwBF,SAAS,CAACE,GAAD,CAAT,KAAmBI,SAA/C,EAA0D;AACxD,WAAOL,mBAAmB,CAACJ,KAAD,EAAQ,QAAR,EAAkBK,GAAlB,EAAuBC,SAAvB,CAA1B;AACD;;AAEDD,EAAAA,GAAG,GAAGA,GAAG,IAAI,QAAb;AACAE,EAAAA,IAAI,GAAGA,IAAI,IAAI,QAAf;AACAD,EAAAA,SAAS,GAAGA,SAAS,IAAI,IAAIL,MAAJ,CAAW,CAAC,CAAD,CAAX,CAAzB;;AAEA,MAAI,CAACA,MAAM,CAACO,QAAP,CAAgBF,SAAhB,CAAL,EAAiC;AAC/BA,IAAAA,SAAS,GAAG,IAAIL,MAAJ,CAAWK,SAAX,EAAsBC,IAAtB,CAAZ;AACD;;AAED,MAAI,OAAOP,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAO,IAAIH,EAAJ,CAAOH,aAAa,CAACM,KAAD,EAAQM,SAAR,CAApB,EAAwCA,SAAxC,EAAmD,IAAnD,CAAP;AACD;;AAED,MAAI,CAACL,MAAM,CAACO,QAAP,CAAgBR,KAAhB,CAAL,EAA6B;AAC3BA,IAAAA,KAAK,GAAG,IAAIC,MAAJ,CAAWD,KAAX,EAAkBK,GAAlB,CAAR;AACD;;AAED,SAAO,IAAIR,EAAJ,CAAOG,KAAP,EAAcM,SAAd,EAAyB,IAAzB,CAAP;AACD;;AAEDI,OAAO,CAACC,kBAAR,GAA6BD,OAAO,CAACE,wBAAR,GAAmCF,OAAO,CAACZ,gBAAR,GAA2BA,gBAA3F;AACAY,OAAO,CAACN,mBAAR,GAA8BM,OAAO,CAACG,aAAR,GAAwBT,mBAAtD","sourcesContent":["var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n"]},"metadata":{},"sourceType":"script"}