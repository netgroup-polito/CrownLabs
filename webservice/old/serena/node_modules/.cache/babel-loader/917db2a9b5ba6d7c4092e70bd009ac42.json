{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst informer_1 = require(\"./informer\");\n\nclass ListWatch {\n  constructor(path, watch, listFn, autoStart = true) {\n    this.path = path;\n    this.watch = watch;\n    this.listFn = listFn;\n    this.objects = [];\n    this.indexCache = {};\n    this.callbackCache = {};\n    this.watch = watch;\n    this.listFn = listFn;\n    this.callbackCache[informer_1.ADD] = [];\n    this.callbackCache[informer_1.UPDATE] = [];\n    this.callbackCache[informer_1.DELETE] = [];\n    this.callbackCache[informer_1.ERROR] = [];\n\n    if (autoStart) {\n      this.doneHandler(null);\n    }\n  }\n\n  start() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      yield this.doneHandler(null);\n    });\n  }\n\n  on(verb, cb) {\n    if (this.callbackCache[verb] === undefined) {\n      throw new Error(`Unknown verb: ${verb}`);\n    }\n\n    this.callbackCache[verb].push(cb);\n  }\n\n  off(verb, cb) {\n    if (this.callbackCache[verb] === undefined) {\n      throw new Error(`Unknown verb: ${verb}`);\n    }\n\n    const indexToRemove = this.callbackCache[verb].findIndex(cachedCb => cachedCb === cb);\n\n    if (indexToRemove === -1) {\n      return;\n    }\n\n    this.callbackCache[verb].splice(indexToRemove, 1);\n  }\n\n  get(name, namespace) {\n    return this.objects.find(obj => {\n      return obj.metadata.name === name && (!namespace || obj.metadata.namespace === namespace);\n    });\n  }\n\n  list(namespace) {\n    if (!namespace) {\n      return this.objects;\n    }\n\n    return this.indexCache[namespace];\n  }\n\n  doneHandler(err) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (err) {\n        this.callbackCache[informer_1.ERROR].forEach(elt => elt(err));\n        return;\n      }\n\n      const promise = this.listFn();\n      const result = yield promise;\n      const list = result.body;\n      deleteItems(this.objects, list.items, this.callbackCache[informer_1.DELETE].slice());\n      this.addOrUpdateItems(list.items);\n      yield this.watch.watch(this.path, {\n        resourceVersion: list.metadata.resourceVersion\n      }, this.watchHandler.bind(this), this.doneHandler.bind(this));\n    });\n  }\n\n  addOrUpdateItems(items) {\n    items.forEach(obj => {\n      addOrUpdateObject(this.objects, obj, this.callbackCache[informer_1.ADD].slice(), this.callbackCache[informer_1.UPDATE].slice());\n\n      if (obj.metadata.namespace) {\n        this.indexObj(obj);\n      }\n    });\n  }\n\n  indexObj(obj) {\n    let namespaceList = this.indexCache[obj.metadata.namespace];\n\n    if (!namespaceList) {\n      namespaceList = [];\n      this.indexCache[obj.metadata.namespace] = namespaceList;\n    }\n\n    addOrUpdateObject(namespaceList, obj);\n  }\n\n  watchHandler(phase, obj) {\n    switch (phase) {\n      case 'ADDED':\n      case 'MODIFIED':\n        addOrUpdateObject(this.objects, obj, this.callbackCache[informer_1.ADD].slice(), this.callbackCache[informer_1.UPDATE].slice());\n\n        if (obj.metadata.namespace) {\n          this.indexObj(obj);\n        }\n\n        break;\n\n      case 'DELETED':\n        deleteObject(this.objects, obj, this.callbackCache[informer_1.DELETE].slice());\n\n        if (obj.metadata.namespace) {\n          const namespaceList = this.indexCache[obj.metadata.namespace];\n\n          if (namespaceList) {\n            deleteObject(namespaceList, obj);\n          }\n        }\n\n        break;\n    }\n  }\n\n}\n\nexports.ListWatch = ListWatch; // external for testing\n\nfunction deleteItems(oldObjects, newObjects, deleteCallback) {\n  return oldObjects.filter(obj => {\n    if (findKubernetesObject(newObjects, obj) === -1) {\n      if (deleteCallback) {\n        deleteCallback.forEach(fn => fn(obj));\n      }\n\n      return false;\n    }\n\n    return true;\n  });\n}\n\nexports.deleteItems = deleteItems; // Only public for testing.\n\nfunction addOrUpdateObject(objects, obj, addCallback, updateCallback) {\n  const ix = findKubernetesObject(objects, obj);\n\n  if (ix === -1) {\n    objects.push(obj);\n\n    if (addCallback) {\n      addCallback.forEach(elt => elt(obj));\n    }\n  } else {\n    objects[ix] = obj;\n\n    if (updateCallback) {\n      updateCallback.forEach(elt => elt(obj));\n    }\n  }\n}\n\nexports.addOrUpdateObject = addOrUpdateObject;\n\nfunction isSameObject(o1, o2) {\n  return o1.metadata.name === o2.metadata.name && o1.metadata.namespace === o2.metadata.namespace;\n}\n\nfunction findKubernetesObject(objects, obj) {\n  return objects.findIndex(elt => {\n    return isSameObject(elt, obj);\n  });\n} // Public for testing.\n\n\nfunction deleteObject(objects, obj, deleteCallback) {\n  const ix = findKubernetesObject(objects, obj);\n\n  if (ix !== -1) {\n    objects.splice(ix, 1);\n\n    if (deleteCallback) {\n      deleteCallback.forEach(elt => elt(obj));\n    }\n  }\n}\n\nexports.deleteObject = deleteObject;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/@kubernetes/client-node/dist/cache.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","informer_1","ListWatch","constructor","path","watch","listFn","autoStart","objects","indexCache","callbackCache","ADD","UPDATE","DELETE","ERROR","doneHandler","start","__awaiter","on","verb","cb","undefined","Error","push","off","indexToRemove","findIndex","cachedCb","splice","get","name","namespace","find","obj","metadata","list","err","forEach","elt","promise","result","body","deleteItems","items","slice","addOrUpdateItems","resourceVersion","watchHandler","bind","addOrUpdateObject","indexObj","namespaceList","phase","deleteObject","oldObjects","newObjects","deleteCallback","filter","findKubernetesObject","fn","addCallback","updateCallback","ix","isSameObject","o1","o2"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst informer_1 = require(\"./informer\");\nclass ListWatch {\n    constructor(path, watch, listFn, autoStart = true) {\n        this.path = path;\n        this.watch = watch;\n        this.listFn = listFn;\n        this.objects = [];\n        this.indexCache = {};\n        this.callbackCache = {};\n        this.watch = watch;\n        this.listFn = listFn;\n        this.callbackCache[informer_1.ADD] = [];\n        this.callbackCache[informer_1.UPDATE] = [];\n        this.callbackCache[informer_1.DELETE] = [];\n        this.callbackCache[informer_1.ERROR] = [];\n        if (autoStart) {\n            this.doneHandler(null);\n        }\n    }\n    start() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            yield this.doneHandler(null);\n        });\n    }\n    on(verb, cb) {\n        if (this.callbackCache[verb] === undefined) {\n            throw new Error(`Unknown verb: ${verb}`);\n        }\n        this.callbackCache[verb].push(cb);\n    }\n    off(verb, cb) {\n        if (this.callbackCache[verb] === undefined) {\n            throw new Error(`Unknown verb: ${verb}`);\n        }\n        const indexToRemove = this.callbackCache[verb].findIndex((cachedCb) => cachedCb === cb);\n        if (indexToRemove === -1) {\n            return;\n        }\n        this.callbackCache[verb].splice(indexToRemove, 1);\n    }\n    get(name, namespace) {\n        return this.objects.find((obj) => {\n            return obj.metadata.name === name && (!namespace || obj.metadata.namespace === namespace);\n        });\n    }\n    list(namespace) {\n        if (!namespace) {\n            return this.objects;\n        }\n        return this.indexCache[namespace];\n    }\n    doneHandler(err) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (err) {\n                this.callbackCache[informer_1.ERROR].forEach((elt) => elt(err));\n                return;\n            }\n            const promise = this.listFn();\n            const result = yield promise;\n            const list = result.body;\n            deleteItems(this.objects, list.items, this.callbackCache[informer_1.DELETE].slice());\n            this.addOrUpdateItems(list.items);\n            yield this.watch.watch(this.path, { resourceVersion: list.metadata.resourceVersion }, this.watchHandler.bind(this), this.doneHandler.bind(this));\n        });\n    }\n    addOrUpdateItems(items) {\n        items.forEach((obj) => {\n            addOrUpdateObject(this.objects, obj, this.callbackCache[informer_1.ADD].slice(), this.callbackCache[informer_1.UPDATE].slice());\n            if (obj.metadata.namespace) {\n                this.indexObj(obj);\n            }\n        });\n    }\n    indexObj(obj) {\n        let namespaceList = this.indexCache[obj.metadata.namespace];\n        if (!namespaceList) {\n            namespaceList = [];\n            this.indexCache[obj.metadata.namespace] = namespaceList;\n        }\n        addOrUpdateObject(namespaceList, obj);\n    }\n    watchHandler(phase, obj) {\n        switch (phase) {\n            case 'ADDED':\n            case 'MODIFIED':\n                addOrUpdateObject(this.objects, obj, this.callbackCache[informer_1.ADD].slice(), this.callbackCache[informer_1.UPDATE].slice());\n                if (obj.metadata.namespace) {\n                    this.indexObj(obj);\n                }\n                break;\n            case 'DELETED':\n                deleteObject(this.objects, obj, this.callbackCache[informer_1.DELETE].slice());\n                if (obj.metadata.namespace) {\n                    const namespaceList = this.indexCache[obj.metadata.namespace];\n                    if (namespaceList) {\n                        deleteObject(namespaceList, obj);\n                    }\n                }\n                break;\n        }\n    }\n}\nexports.ListWatch = ListWatch;\n// external for testing\nfunction deleteItems(oldObjects, newObjects, deleteCallback) {\n    return oldObjects.filter((obj) => {\n        if (findKubernetesObject(newObjects, obj) === -1) {\n            if (deleteCallback) {\n                deleteCallback.forEach((fn) => fn(obj));\n            }\n            return false;\n        }\n        return true;\n    });\n}\nexports.deleteItems = deleteItems;\n// Only public for testing.\nfunction addOrUpdateObject(objects, obj, addCallback, updateCallback) {\n    const ix = findKubernetesObject(objects, obj);\n    if (ix === -1) {\n        objects.push(obj);\n        if (addCallback) {\n            addCallback.forEach((elt) => elt(obj));\n        }\n    }\n    else {\n        objects[ix] = obj;\n        if (updateCallback) {\n            updateCallback.forEach((elt) => elt(obj));\n        }\n    }\n}\nexports.addOrUpdateObject = addOrUpdateObject;\nfunction isSameObject(o1, o2) {\n    return o1.metadata.name === o2.metadata.name && o1.metadata.namespace === o2.metadata.namespace;\n}\nfunction findKubernetesObject(objects, obj) {\n    return objects.findIndex((elt) => {\n        return isSameObject(elt, obj);\n    });\n}\n// Public for testing.\nfunction deleteObject(objects, obj, deleteCallback) {\n    const ix = findKubernetesObject(objects, obj);\n    if (ix !== -1) {\n        objects.splice(ix, 1);\n        if (deleteCallback) {\n            deleteCallback.forEach((elt) => elt(obj));\n        }\n    }\n}\nexports.deleteObject = deleteObject;\n//# sourceMappingURL=cache.js.map"]},"metadata":{},"sourceType":"script"}