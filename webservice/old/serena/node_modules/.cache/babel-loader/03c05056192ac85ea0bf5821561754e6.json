{"ast":null,"code":"\"use strict\";\n\nconst hasToStringTag = require(\"has-to-string-tag-x\");\n\nconst isObject = require(\"is-object\");\n\nconst toString = Object.prototype.toString;\nconst urlClass = \"[object URL]\";\nconst hash = \"hash\";\nconst host = \"host\";\nconst hostname = \"hostname\";\nconst href = \"href\";\nconst password = \"password\";\nconst pathname = \"pathname\";\nconst port = \"port\";\nconst protocol = \"protocol\";\nconst search = \"search\";\nconst username = \"username\";\n\nconst isURL = (url, supportIncomplete\n/*=false*/\n) => {\n  if (!isObject(url)) return false; // Native implementation in older browsers\n\n  if (!hasToStringTag && toString.call(url) === urlClass) return true;\n  if (!(href in url)) return false;\n  if (!(protocol in url)) return false;\n  if (!(username in url)) return false;\n  if (!(password in url)) return false;\n  if (!(hostname in url)) return false;\n  if (!(port in url)) return false;\n  if (!(host in url)) return false;\n  if (!(pathname in url)) return false;\n  if (!(search in url)) return false;\n  if (!(hash in url)) return false;\n\n  if (supportIncomplete !== true) {\n    if (!isObject(url.searchParams)) return false; // TODO :: write a separate isURLSearchParams ?\n  }\n\n  return true;\n};\n\nisURL.lenient = url => {\n  return isURL(url, true);\n};\n\nmodule.exports = isURL;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/isurl/index.js"],"names":["hasToStringTag","require","isObject","toString","Object","prototype","urlClass","hash","host","hostname","href","password","pathname","port","protocol","search","username","isURL","url","supportIncomplete","call","searchParams","lenient","module","exports"],"mappings":"AAAA;;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,qBAAD,CAA9B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AAEA,MAAME,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBF,QAAlC;AACA,MAAMG,QAAQ,GAAG,cAAjB;AAEA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;;AAIA,MAAMC,KAAK,GAAG,CAACC,GAAD,EAAMC;AAAiB;AAAvB,KACd;AACC,MAAI,CAACjB,QAAQ,CAACgB,GAAD,CAAb,EAAoB,OAAO,KAAP,CADrB,CAGC;;AACA,MAAI,CAAClB,cAAD,IAAmBG,QAAQ,CAACiB,IAAT,CAAcF,GAAd,MAAuBZ,QAA9C,EAAwD,OAAO,IAAP;AAExD,MAAI,EAAEI,IAAI,IAAQQ,GAAd,CAAJ,EAAwB,OAAO,KAAP;AACxB,MAAI,EAAEJ,QAAQ,IAAII,GAAd,CAAJ,EAAwB,OAAO,KAAP;AACxB,MAAI,EAAEF,QAAQ,IAAIE,GAAd,CAAJ,EAAwB,OAAO,KAAP;AACxB,MAAI,EAAEP,QAAQ,IAAIO,GAAd,CAAJ,EAAwB,OAAO,KAAP;AACxB,MAAI,EAAET,QAAQ,IAAIS,GAAd,CAAJ,EAAwB,OAAO,KAAP;AACxB,MAAI,EAAEL,IAAI,IAAQK,GAAd,CAAJ,EAAwB,OAAO,KAAP;AACxB,MAAI,EAAEV,IAAI,IAAQU,GAAd,CAAJ,EAAwB,OAAO,KAAP;AACxB,MAAI,EAAEN,QAAQ,IAAIM,GAAd,CAAJ,EAAwB,OAAO,KAAP;AACxB,MAAI,EAAEH,MAAM,IAAMG,GAAd,CAAJ,EAAwB,OAAO,KAAP;AACxB,MAAI,EAAEX,IAAI,IAAQW,GAAd,CAAJ,EAAwB,OAAO,KAAP;;AAExB,MAAIC,iBAAiB,KAAK,IAA1B,EACA;AACC,QAAI,CAACjB,QAAQ,CAACgB,GAAG,CAACG,YAAL,CAAb,EAAiC,OAAO,KAAP,CADlC,CAGC;AACA;;AAED,SAAO,IAAP;AACA,CA1BD;;AA8BAJ,KAAK,CAACK,OAAN,GAAgBJ,GAAG,IACnB;AACC,SAAOD,KAAK,CAACC,GAAD,EAAM,IAAN,CAAZ;AACA,CAHD;;AAOAK,MAAM,CAACC,OAAP,GAAiBP,KAAjB","sourcesContent":["\"use strict\";\nconst hasToStringTag = require(\"has-to-string-tag-x\");\nconst isObject = require(\"is-object\");\n\nconst toString = Object.prototype.toString;\nconst urlClass = \"[object URL]\";\n\nconst hash = \"hash\";\nconst host = \"host\";\nconst hostname = \"hostname\";\nconst href = \"href\";\nconst password = \"password\";\nconst pathname = \"pathname\";\nconst port = \"port\";\nconst protocol = \"protocol\";\nconst search = \"search\";\nconst username = \"username\";\n\n\n\nconst isURL = (url, supportIncomplete/*=false*/) =>\n{\n\tif (!isObject(url)) return false;\n\n\t// Native implementation in older browsers\n\tif (!hasToStringTag && toString.call(url) === urlClass) return true;\n\n\tif (!(href     in url)) return false;\n\tif (!(protocol in url)) return false;\n\tif (!(username in url)) return false;\n\tif (!(password in url)) return false;\n\tif (!(hostname in url)) return false;\n\tif (!(port     in url)) return false;\n\tif (!(host     in url)) return false;\n\tif (!(pathname in url)) return false;\n\tif (!(search   in url)) return false;\n\tif (!(hash     in url)) return false;\n\n\tif (supportIncomplete !== true)\n\t{\n\t\tif (!isObject(url.searchParams)) return false;\n\n\t\t// TODO :: write a separate isURLSearchParams ?\n\t}\n\n\treturn true;\n}\n\n\n\nisURL.lenient = url =>\n{\n\treturn isURL(url, true);\n};\n\n\n\nmodule.exports = isURL;\n"]},"metadata":{},"sourceType":"script"}