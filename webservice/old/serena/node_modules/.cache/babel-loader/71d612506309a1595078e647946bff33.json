{"ast":null,"code":"/*!\n * util/databuffer.js - Forge-compatible Buffer based on Node.js Buffers\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    base64url = require(\"./base64url.js\");\n/**\n *\n */\n\n\nfunction DataBuffer(b, options) {\n  options = options || {}; // treat (views of) (Array)Buffers special\n  // NOTE: default implementation creates copies, but efficiently\n  //       wherever possible\n\n  if (Buffer.isBuffer(b)) {\n    this.data = b;\n  } else if (forge.util.isArrayBuffer(b)) {\n    b = new Uint8Array(b);\n    this.data = Buffer.from(b);\n  } else if (forge.util.isArrayBufferView(b)) {\n    b = new Uint8Array(b.buffer, b.byteOffset, b.byteLength);\n    this.data = Buffer.from(b);\n  }\n\n  if (this.data) {\n    this.write = this.data.length;\n    b = undefined;\n  } // setup growth rate\n\n\n  this.growSize = options.growSize || DataBuffer.DEFAULT_GROW_SIZE; // initialize pointers and data\n\n  this.write = this.write || 0;\n  this.read = this.read || 0;\n\n  if (b) {\n    this.putBytes(b);\n  } else if (!this.data) {\n    this.accommodate(0);\n  } // massage read/write pointers\n\n\n  options.readOffset = \"readOffset\" in options ? options.readOffset : this.read;\n  this.write = \"writeOffset\" in options ? options.writeOffset : this.write;\n  this.read = Math.min(options.readOffset, this.write);\n}\n\nDataBuffer.DEFAULT_GROW_SIZE = 16;\n\nDataBuffer.prototype.length = function () {\n  return this.write - this.read;\n};\n\nDataBuffer.prototype.available = function () {\n  return this.data.length - this.write;\n};\n\nDataBuffer.prototype.isEmpty = function () {\n  return this.length() <= 0;\n};\n\nDataBuffer.prototype.accommodate = function (length) {\n  if (!this.data) {\n    // initializes a new buffer\n    length = Math.max(this.write + length, this.growSize);\n    this.data = Buffer.alloc(length);\n  } else if (this.available() < length) {\n    length = Math.max(length, this.growSize); // create a new empty buffer, and copy current one into it\n\n    var src = this.data;\n    var dst = Buffer.alloc(src.length + length);\n    src.copy(dst, 0); // set data as the new buffer\n\n    this.data = dst;\n  } // ensure the rest is 0\n\n\n  this.data.fill(0, this.write);\n  return this;\n};\n\nDataBuffer.prototype.clear = function () {\n  this.read = this.write = 0;\n  this.data = Buffer.alloc(0);\n  return this;\n};\n\nDataBuffer.prototype.truncate = function (count) {\n  // chop off <count> bytes from the end\n  this.write = this.read + Math.max(0, this.length() - count); // ensure the remainder is 0\n\n  this.data.fill(0, this.write);\n  return this;\n};\n\nDataBuffer.prototype.compact = function () {\n  if (this.read > 0) {\n    if (this.write === this.read) {\n      this.read = this.write = 0;\n    } else {\n      this.data.copy(this.data, 0, this.read, this.write);\n      this.write = this.write - this.read;\n      this.read = 0;\n    } // ensure remainder is 0\n\n\n    this.data.fill(0, this.write);\n  }\n\n  return this;\n};\n\nDataBuffer.prototype.copy = function () {\n  return new DataBuffer(this, {\n    readOffset: this.read,\n    writeOffset: this.write,\n    growSize: this.growSize\n  });\n};\n\nDataBuffer.prototype.equals = function (test) {\n  if (!DataBuffer.isBuffer(test)) {\n    return false;\n  }\n\n  if (test.length() !== this.length()) {\n    return false;\n  }\n\n  var rval = true,\n      delta = this.read - test.read; // constant time\n\n  for (var idx = test.read; test.write > idx; idx++) {\n    rval = rval && this.data[idx + delta] === test.data[idx];\n  }\n\n  return rval;\n};\n\nDataBuffer.prototype.at = function (idx) {\n  return this.data[this.read + idx];\n};\n\nDataBuffer.prototype.setAt = function (idx, b) {\n  this.data[this.read + idx] = b;\n  return this;\n};\n\nDataBuffer.prototype.last = function () {\n  return this.data[this.write - 1];\n};\n\nDataBuffer.prototype.bytes = function (count) {\n  var rval;\n\n  if (undefined === count) {\n    count = this.length();\n  } else if (count) {\n    count = Math.min(count, this.length());\n  }\n\n  if (0 === count) {\n    rval = \"\";\n  } else {\n    var begin = this.read,\n        end = begin + count,\n        data = this.data.slice(begin, end);\n    rval = String.fromCharCode.apply(null, data);\n  }\n\n  return rval;\n};\n\nDataBuffer.prototype.buffer = function (count) {\n  var rval;\n\n  if (undefined === count) {\n    count = this.length();\n  } else if (count) {\n    count = Math.min(count, this.length());\n  }\n\n  if (0 === count) {\n    rval = new ArrayBuffer(0);\n  } else {\n    var begin = this.read,\n        end = begin + count,\n        data = this.data.slice(begin, end);\n    rval = new Uint8Array(end - begin);\n    rval.set(data);\n  }\n\n  return rval;\n};\n\nDataBuffer.prototype.native = function (count) {\n  var rval;\n\n  if (\"undefined\" === typeof count) {\n    count = this.length();\n  } else if (count) {\n    count = Math.min(count, this.length());\n  }\n\n  if (0 === count) {\n    rval = Buffer.alloc(0);\n  } else {\n    var begin = this.read,\n        end = begin + count;\n    rval = this.data.slice(begin, end);\n  }\n\n  return rval;\n};\n\nDataBuffer.prototype.toHex = function () {\n  return this.toString(\"hex\");\n};\n\nDataBuffer.prototype.toString = function (encoding) {\n  // short circuit empty string\n  if (0 === this.length()) {\n    return \"\";\n  }\n\n  var view = this.data.slice(this.read, this.write);\n  encoding = encoding || \"utf8\"; // special cases, then built-in support\n\n  switch (encoding) {\n    case \"raw\":\n      return view.toString(\"binary\");\n\n    case \"base64url\":\n      return base64url.encode(view);\n\n    case \"utf16\":\n      return view.toString(\"ucs2\");\n\n    default:\n      return view.toString(encoding);\n  }\n};\n\nDataBuffer.prototype.fillWithByte = function (b, n) {\n  if (!n) {\n    n = this.available();\n  }\n\n  this.accommodate(n);\n  this.data.fill(b, this.write, this.write + n);\n  this.write += n;\n  return this;\n};\n\nDataBuffer.prototype.getBuffer = function (count) {\n  var rval = this.buffer(count);\n  this.read += rval.byteLength;\n  return rval;\n};\n\nDataBuffer.prototype.putBuffer = function (bytes) {\n  return this.putBytes(bytes);\n};\n\nDataBuffer.prototype.getBytes = function (count) {\n  var rval = this.bytes(count);\n  this.read += rval.length;\n  return rval;\n};\n\nDataBuffer.prototype.putBytes = function (bytes, encoding) {\n  if (\"string\" === typeof bytes) {\n    // fixup encoding\n    encoding = encoding || \"binary\";\n\n    switch (encoding) {\n      case \"utf16\":\n        // treat as UCS-2/UTF-16BE\n        encoding = \"ucs-2\";\n        break;\n\n      case \"raw\":\n        encoding = \"binary\";\n        break;\n\n      case \"base64url\":\n        // NOTE: this returns a Buffer\n        bytes = base64url.decode(bytes);\n        break;\n    } // replace bytes with decoded Buffer (if not already)\n\n\n    if (!Buffer.isBuffer(bytes)) {\n      bytes = Buffer.from(bytes, encoding);\n    }\n  }\n\n  var src, dst;\n\n  if (bytes instanceof DataBuffer) {\n    // be slightly more efficient\n    var orig = bytes;\n    bytes = orig.data.slice(orig.read, orig.write);\n    orig.read = orig.write;\n  } else if (bytes instanceof forge.util.ByteStringBuffer) {\n    bytes = bytes.getBytes();\n  } // process array\n\n\n  if (Buffer.isBuffer(bytes)) {\n    src = bytes;\n  } else if (Array.isArray(bytes)) {\n    src = Buffer.from(bytes);\n  } else if (forge.util.isArrayBuffer(bytes)) {\n    src = new Uint8Array(bytes);\n    src = Buffer.from(src);\n  } else if (forge.util.isArrayBufferView(bytes)) {\n    src = bytes instanceof Uint8Array ? bytes : new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    src = Buffer.from(src);\n  } else {\n    throw new TypeError(\"invalid source type\");\n  }\n\n  this.accommodate(src.length);\n  dst = this.data;\n  src.copy(dst, this.write);\n  this.write += src.length;\n  return this;\n};\n\nDataBuffer.prototype.getNative = function (count) {\n  var rval = this.native(count);\n  this.read += rval.length;\n  return rval;\n};\n\nDataBuffer.prototype.putNative = DataBuffer.prototype.putBuffer;\n\nDataBuffer.prototype.getByte = function () {\n  var b = this.data[this.read];\n  this.read = Math.min(this.read + 1, this.write);\n  return b;\n};\n\nDataBuffer.prototype.putByte = function (b) {\n  this.accommodate(1);\n  this.data[this.write] = b & 0xff;\n  this.write++;\n  return this;\n};\n\nDataBuffer.prototype.getInt16 = function () {\n  var n = this.data[this.read] << 8 ^ this.data[this.read + 1];\n  this.read = Math.min(this.read + 2, this.write);\n  return n;\n};\n\nDataBuffer.prototype.putInt16 = function (n) {\n  this.accommodate(2);\n  this.data[this.write] = n >>> 8 & 0xff;\n  this.data[this.write + 1] = n & 0xff;\n  this.write += 2;\n  return this;\n};\n\nDataBuffer.prototype.getInt24 = function () {\n  var n = this.data[this.read] << 16 ^ this.data[this.read + 1] << 8 ^ this.data[this.read + 2];\n  this.read = Math.min(this.read + 3, this.write);\n  return n;\n};\n\nDataBuffer.prototype.putInt24 = function (n) {\n  this.accommodate(3);\n  this.data[this.write] = n >>> 16 & 0xff;\n  this.data[this.write + 1] = n >>> 8 & 0xff;\n  this.data[this.write + 2] = n & 0xff;\n  this.write += 3;\n  return this;\n};\n\nDataBuffer.prototype.getInt32 = function () {\n  var n = this.data[this.read] << 24 ^ this.data[this.read + 1] << 16 ^ this.data[this.read + 2] << 8 ^ this.data[this.read + 3];\n  this.read = Math.min(this.read + 4, this.write);\n  return n;\n};\n\nDataBuffer.prototype.putInt32 = function (n) {\n  this.accommodate(4);\n  this.data[this.write] = n >>> 24 & 0xff;\n  this.data[this.write + 1] = n >>> 16 & 0xff;\n  this.data[this.write + 2] = n >>> 8 & 0xff;\n  this.data[this.write + 3] = n & 0xff;\n  this.write += 4;\n  return this;\n};\n\nDataBuffer.prototype.getInt16Le = function () {\n  var n = this.data[this.read + 1] << 8 ^ this.data[this.read];\n  this.read = Math.min(this.read + 2, this.write);\n  return n;\n};\n\nDataBuffer.prototype.putInt16Le = function (n) {\n  this.accommodate(2);\n  this.data[this.write + 1] = n >>> 8 & 0xff;\n  this.data[this.write] = n & 0xff;\n  this.write += 2;\n  return this;\n};\n\nDataBuffer.prototype.getInt24Le = function () {\n  var n = this.data[this.read + 2] << 16 ^ this.data[this.read + 1] << 8 ^ this.data[this.read];\n  this.read = Math.min(this.read + 3, this.write);\n  return n;\n};\n\nDataBuffer.prototype.putInt24Le = function (n) {\n  this.accommodate(3);\n  this.data[this.write + 2] = n >>> 16 & 0xff;\n  this.data[this.write + 1] = n >>> 8 & 0xff;\n  this.data[this.write] = n & 0xff;\n  this.write += 3;\n  return this;\n};\n\nDataBuffer.prototype.getInt32Le = function () {\n  var n = this.data[this.read + 3] << 24 ^ this.data[this.read + 2] << 16 ^ this.data[this.read + 1] << 8 ^ this.data[this.read];\n  this.read = Math.min(this.read + 4, this.write);\n  return n;\n};\n\nDataBuffer.prototype.putInt32Le = function (n) {\n  this.accommodate(4);\n  this.data[this.write + 3] = n >>> 24 & 0xff;\n  this.data[this.write + 2] = n >>> 16 & 0xff;\n  this.data[this.write + 1] = n >>> 8 & 0xff;\n  this.data[this.write] = n & 0xff;\n  this.write += 4;\n  return this;\n};\n\nDataBuffer.prototype.getInt = function (bits) {\n  var rval = 0;\n\n  do {\n    rval = rval << 8 | this.getByte();\n    bits -= 8;\n  } while (bits > 0);\n\n  return rval;\n};\n\nDataBuffer.prototype.putInt = function (n, bits) {\n  this.accommodate(Math.ceil(bits / 8));\n\n  do {\n    bits -= 8;\n    this.putByte(n >> bits & 0xff);\n  } while (bits > 0);\n\n  return this;\n};\n\nDataBuffer.prototype.putSignedInt = function (n, bits) {\n  if (n < 0) {\n    n += 2 << bits - 1;\n  }\n\n  return this.putInt(n, bits);\n};\n\nDataBuffer.prototype.putString = function (str) {\n  return this.putBytes(str, \"utf16\");\n};\n\nDataBuffer.isBuffer = function (test) {\n  return test instanceof DataBuffer;\n};\n\nDataBuffer.asBuffer = function (orig) {\n  return DataBuffer.isBuffer(orig) ? orig : orig ? new DataBuffer(orig) : new DataBuffer();\n};\n\nmodule.exports = forge.util.ByteBuffer = DataBuffer;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/util/databuffer.js"],"names":["forge","require","base64url","DataBuffer","b","options","Buffer","isBuffer","data","util","isArrayBuffer","Uint8Array","from","isArrayBufferView","buffer","byteOffset","byteLength","write","length","undefined","growSize","DEFAULT_GROW_SIZE","read","putBytes","accommodate","readOffset","writeOffset","Math","min","prototype","available","isEmpty","max","alloc","src","dst","copy","fill","clear","truncate","count","compact","equals","test","rval","delta","idx","at","setAt","last","bytes","begin","end","slice","String","fromCharCode","apply","ArrayBuffer","set","native","toHex","toString","encoding","view","encode","fillWithByte","n","getBuffer","putBuffer","getBytes","decode","orig","ByteStringBuffer","Array","isArray","TypeError","getNative","putNative","getByte","putByte","getInt16","putInt16","getInt24","putInt24","getInt32","putInt32","getInt16Le","putInt16Le","getInt24Le","putInt24Le","getInt32Le","putInt32Le","getInt","bits","putInt","ceil","putSignedInt","putString","str","asBuffer","module","exports","ByteBuffer"],"mappings":"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","sourcesContent":["/*!\n * util/databuffer.js - Forge-compatible Buffer based on Node.js Buffers\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    base64url = require(\"./base64url.js\");\n\n/**\n *\n */\nfunction DataBuffer(b, options) {\n  options = options || {};\n\n  // treat (views of) (Array)Buffers special\n  // NOTE: default implementation creates copies, but efficiently\n  //       wherever possible\n  if (Buffer.isBuffer(b)) {\n    this.data = b;\n  } else if (forge.util.isArrayBuffer(b)) {\n    b = new Uint8Array(b);\n    this.data = Buffer.from(b);\n  } else if (forge.util.isArrayBufferView(b)) {\n    b = new Uint8Array(b.buffer, b.byteOffset, b.byteLength);\n    this.data = Buffer.from(b);\n  }\n\n  if (this.data) {\n    this.write = this.data.length;\n    b = undefined;\n  }\n\n  // setup growth rate\n  this.growSize = options.growSize || DataBuffer.DEFAULT_GROW_SIZE;\n\n  // initialize pointers and data\n  this.write = this.write || 0;\n  this.read = this.read || 0;\n  if (b) {\n    this.putBytes(b);\n  } else if (!this.data) {\n    this.accommodate(0);\n  }\n\n  // massage read/write pointers\n  options.readOffset = (\"readOffset\" in options) ?\n                       options.readOffset :\n                       this.read;\n  this.write = (\"writeOffset\" in options) ?\n               options.writeOffset :\n               this.write;\n  this.read = Math.min(options.readOffset, this.write);\n}\nDataBuffer.DEFAULT_GROW_SIZE = 16;\n\nDataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\nDataBuffer.prototype.available = function() {\n  return this.data.length - this.write;\n};\nDataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\nDataBuffer.prototype.accommodate = function(length) {\n  if (!this.data) {\n    // initializes a new buffer\n    length = Math.max(this.write + length, this.growSize);\n\n    this.data = Buffer.alloc(length);\n  } else if (this.available() < length) {\n    length = Math.max(length, this.growSize);\n\n    // create a new empty buffer, and copy current one into it\n    var src = this.data;\n    var dst = Buffer.alloc(src.length + length);\n    src.copy(dst, 0);\n\n    // set data as the new buffer\n    this.data = dst;\n  }\n  // ensure the rest is 0\n  this.data.fill(0, this.write);\n\n  return this;\n};\nDataBuffer.prototype.clear = function() {\n  this.read = this.write = 0;\n  this.data = Buffer.alloc(0);\n  return this;\n};\nDataBuffer.prototype.truncate = function(count) {\n  // chop off <count> bytes from the end\n  this.write = this.read + Math.max(0, this.length() - count);\n  // ensure the remainder is 0\n  this.data.fill(0, this.write);\n  return this;\n};\nDataBuffer.prototype.compact = function() {\n  if (this.read > 0) {\n    if (this.write === this.read) {\n      this.read = this.write = 0;\n    } else {\n      this.data.copy(this.data, 0, this.read, this.write);\n      this.write = this.write - this.read;\n      this.read = 0;\n    }\n    // ensure remainder is 0\n    this.data.fill(0, this.write);\n  }\n  return this;\n};\nDataBuffer.prototype.copy = function() {\n  return new DataBuffer(this, {\n    readOffset: this.read,\n    writeOffset: this.write,\n    growSize: this.growSize\n  });\n};\n\nDataBuffer.prototype.equals = function(test) {\n  if (!DataBuffer.isBuffer(test)) {\n    return false;\n  }\n\n  if (test.length() !== this.length()) {\n    return false;\n  }\n\n  var rval = true,\n      delta = this.read - test.read;\n  // constant time\n  for (var idx = test.read; test.write > idx; idx++) {\n    rval = rval && (this.data[idx + delta] === test.data[idx]);\n  }\n  return rval;\n};\nDataBuffer.prototype.at = function(idx) {\n  return this.data[this.read + idx];\n};\nDataBuffer.prototype.setAt = function(idx, b) {\n  this.data[this.read + idx] = b;\n  return this;\n};\nDataBuffer.prototype.last = function() {\n  return this.data[this.write - 1];\n};\nDataBuffer.prototype.bytes = function(count) {\n  var rval;\n  if (undefined === count) {\n    count = this.length();\n  } else if (count) {\n    count = Math.min(count, this.length());\n  }\n\n  if (0 === count) {\n    rval = \"\";\n  } else {\n    var begin = this.read,\n        end = begin + count,\n        data = this.data.slice(begin, end);\n    rval = String.fromCharCode.apply(null, data);\n  }\n\n  return rval;\n};\nDataBuffer.prototype.buffer = function(count) {\n  var rval;\n  if (undefined === count) {\n    count = this.length();\n  } else if (count) {\n    count = Math.min(count, this.length());\n  }\n\n  if (0 === count) {\n    rval = new ArrayBuffer(0);\n  } else {\n    var begin = this.read,\n        end = begin + count,\n        data = this.data.slice(begin, end);\n    rval = new Uint8Array(end - begin);\n    rval.set(data);\n  }\n\n  return rval;\n};\nDataBuffer.prototype.native = function(count) {\n  var rval;\n  if (\"undefined\" === typeof count) {\n    count = this.length();\n  } else if (count) {\n    count = Math.min(count, this.length());\n  }\n\n  if (0 === count) {\n    rval = Buffer.alloc(0);\n  } else {\n    var begin = this.read,\n        end = begin + count;\n    rval = this.data.slice(begin, end);\n  }\n\n  return rval;\n};\n\nDataBuffer.prototype.toHex = function() {\n  return this.toString(\"hex\");\n};\nDataBuffer.prototype.toString = function(encoding) {\n  // short circuit empty string\n  if (0 === this.length()) {\n    return \"\";\n  }\n\n  var view = this.data.slice(this.read, this.write);\n  encoding = encoding || \"utf8\";\n  // special cases, then built-in support\n  switch (encoding) {\n    case \"raw\":\n      return view.toString(\"binary\");\n    case \"base64url\":\n      return base64url.encode(view);\n    case \"utf16\":\n      return view.toString(\"ucs2\");\n    default:\n      return view.toString(encoding);\n  }\n};\n\nDataBuffer.prototype.fillWithByte = function(b, n) {\n  if (!n) {\n    n = this.available();\n  }\n  this.accommodate(n);\n  this.data.fill(b, this.write, this.write + n);\n  this.write += n;\n\n  return this;\n};\n\nDataBuffer.prototype.getBuffer = function(count) {\n  var rval = this.buffer(count);\n  this.read += rval.byteLength;\n\n  return rval;\n};\nDataBuffer.prototype.putBuffer = function(bytes) {\n  return this.putBytes(bytes);\n};\n\nDataBuffer.prototype.getBytes = function(count) {\n  var rval = this.bytes(count);\n  this.read += rval.length;\n  return rval;\n};\nDataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if (\"string\" === typeof bytes) {\n    // fixup encoding\n    encoding = encoding || \"binary\";\n    switch (encoding) {\n      case \"utf16\":\n        // treat as UCS-2/UTF-16BE\n        encoding = \"ucs-2\";\n        break;\n      case \"raw\":\n        encoding = \"binary\";\n        break;\n      case \"base64url\":\n        // NOTE: this returns a Buffer\n        bytes = base64url.decode(bytes);\n        break;\n    }\n\n    // replace bytes with decoded Buffer (if not already)\n    if (!Buffer.isBuffer(bytes)) {\n      bytes = Buffer.from(bytes, encoding);\n    }\n  }\n\n  var src, dst;\n  if (bytes instanceof DataBuffer) {\n    // be slightly more efficient\n    var orig = bytes;\n    bytes = orig.data.slice(orig.read, orig.write);\n    orig.read = orig.write;\n  } else if (bytes instanceof forge.util.ByteStringBuffer) {\n    bytes = bytes.getBytes();\n  }\n\n  // process array\n  if (Buffer.isBuffer(bytes)) {\n    src = bytes;\n  } else if (Array.isArray(bytes)) {\n    src = Buffer.from(bytes);\n  } else if (forge.util.isArrayBuffer(bytes)) {\n    src = new Uint8Array(bytes);\n    src = Buffer.from(src);\n  } else if (forge.util.isArrayBufferView(bytes)) {\n    src = (bytes instanceof Uint8Array) ?\n              bytes :\n              new Uint8Array(bytes.buffer,\n                             bytes.byteOffset,\n                             bytes.byteLength);\n    src = Buffer.from(src);\n  } else {\n    throw new TypeError(\"invalid source type\");\n  }\n\n  this.accommodate(src.length);\n  dst = this.data;\n  src.copy(dst, this.write);\n  this.write += src.length;\n\n  return this;\n};\n\nDataBuffer.prototype.getNative = function(count) {\n  var rval = this.native(count);\n  this.read += rval.length;\n  return rval;\n};\nDataBuffer.prototype.putNative = DataBuffer.prototype.putBuffer;\n\nDataBuffer.prototype.getByte = function() {\n  var b = this.data[this.read];\n  this.read = Math.min(this.read + 1, this.write);\n  return b;\n};\nDataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data[this.write] = b & 0xff;\n  this.write++;\n\n  return this;\n};\n\nDataBuffer.prototype.getInt16 = function() {\n  var n = (this.data[this.read] << 8) ^\n          (this.data[this.read + 1]);\n  this.read = Math.min(this.read + 2, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt16 = function(n) {\n  this.accommodate(2);\n  this.data[this.write] = (n >>> 8) & 0xff;\n  this.data[this.write + 1] = n & 0xff;\n  this.write += 2;\n  return this;\n};\n\nDataBuffer.prototype.getInt24 = function() {\n  var n = (this.data[this.read] << 16) ^\n          (this.data[this.read + 1] << 8) ^\n          this.data[this.read + 2];\n  this.read = Math.min(this.read + 3, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt24 = function(n) {\n  this.accommodate(3);\n  this.data[this.write] = (n >>> 16) & 0xff;\n  this.data[this.write + 1] = (n >>> 8) & 0xff;\n  this.data[this.write + 2] = n & 0xff;\n  this.write += 3;\n  return this;\n};\n\nDataBuffer.prototype.getInt32 = function() {\n  var n = (this.data[this.read] << 24) ^\n          (this.data[this.read + 1] << 16) ^\n          (this.data[this.read + 2] << 8) ^\n          this.data[this.read + 3];\n  this.read = Math.min(this.read + 4, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt32 = function(n) {\n  this.accommodate(4);\n  this.data[this.write] = (n >>> 24) & 0xff;\n  this.data[this.write + 1] = (n >>> 16) & 0xff;\n  this.data[this.write + 2] = (n >>> 8) & 0xff;\n  this.data[this.write + 3] = n & 0xff;\n  this.write += 4;\n  return this;\n};\n\nDataBuffer.prototype.getInt16Le = function() {\n  var n = (this.data[this.read + 1] << 8) ^\n          this.data[this.read];\n  this.read = Math.min(this.read + 2, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt16Le = function(n) {\n  this.accommodate(2);\n  this.data[this.write + 1] = (n >>> 8) & 0xff;\n  this.data[this.write] = n & 0xff;\n  this.write += 2;\n  return this;\n};\n\nDataBuffer.prototype.getInt24Le = function() {\n  var n = (this.data[this.read + 2] << 16) ^\n          (this.data[this.read + 1] << 8) ^\n          this.data[this.read];\n  this.read = Math.min(this.read + 3, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt24Le = function(n) {\n  this.accommodate(3);\n  this.data[this.write + 2] = (n >>> 16) & 0xff;\n  this.data[this.write + 1] = (n >>> 8) & 0xff;\n  this.data[this.write] = n & 0xff;\n  this.write += 3;\n  return this;\n};\nDataBuffer.prototype.getInt32Le = function() {\n  var n = (this.data[this.read + 3] << 24) ^\n          (this.data[this.read + 2] << 16) ^\n          (this.data[this.read + 1] << 8) ^\n          this.data[this.read];\n  this.read = Math.min(this.read + 4, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt32Le = function(n) {\n  this.accommodate(4);\n  this.data[this.write + 3] = (n >>> 24) & 0xff;\n  this.data[this.write + 2] = (n >>> 16) & 0xff;\n  this.data[this.write + 1] = (n >>> 8) & 0xff;\n  this.data[this.write] = n & 0xff;\n  this.write += 4;\n  return this;\n};\n\nDataBuffer.prototype.getInt = function(bits) {\n  var rval = 0;\n  do {\n    rval = (rval << 8) | this.getByte();\n    bits -= 8;\n  } while (bits > 0);\n  return rval;\n};\nDataBuffer.prototype.putInt = function(n, bits) {\n  this.accommodate(Math.ceil(bits / 8));\n  do {\n    bits -= 8;\n    this.putByte((n >> bits) & 0xff);\n  } while (bits > 0);\n  return this;\n};\n\nDataBuffer.prototype.putSignedInt = function(n, bits) {\n  if (n < 0) {\n    n += 2 << (bits - 1);\n  }\n  return this.putInt(n, bits);\n};\n\nDataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, \"utf16\");\n};\n\nDataBuffer.isBuffer = function(test) {\n  return (test instanceof DataBuffer);\n};\nDataBuffer.asBuffer = function(orig) {\n  return DataBuffer.isBuffer(orig) ?\n         orig :\n         orig ?\n         new DataBuffer(orig) :\n         new DataBuffer();\n};\n\nmodule.exports = forge.util.ByteBuffer = DataBuffer;\n"]},"metadata":{},"sourceType":"script"}