{"ast":null,"code":"/*!\n * algorithms/concat.js - Concat Key Derivation\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar CONSTANTS = require(\"./constants.js\"),\n    sha = require(\"./sha.js\");\n\nfunction concatDeriveFn(name) {\n  name = name.replace(\"CONCAT-\", \"\"); // NOTE: no nodejs/webcrypto/fallback model, since ConcatKDF is\n  //       implemented using the SHA algorithms\n\n  var fn = function (key, props) {\n    props = props || {};\n    var keyLen = props.length,\n        hashLen = CONSTANTS.HASHLENGTH[name];\n\n    if (!keyLen) {\n      return Promise.reject(new Error(\"invalid key length\"));\n    } // setup otherInfo\n\n\n    if (!props.otherInfo) {\n      return Promise.reject(new Error(\"invalid otherInfo\"));\n    }\n\n    var otherInfo = props.otherInfo;\n    var op = sha[name].digest;\n    var N = Math.ceil(keyLen / hashLen),\n        idx = 0,\n        okm = [];\n\n    function step() {\n      if (N === idx++) {\n        return Buffer.concat(okm).slice(0, keyLen);\n      }\n\n      var T = Buffer.alloc(4 + key.length + otherInfo.length);\n      T.writeUInt32BE(idx, 0);\n      key.copy(T, 4);\n      otherInfo.copy(T, 4 + key.length);\n      return op(T).then(function (result) {\n        okm.push(result);\n        return step();\n      });\n    }\n\n    return step();\n  };\n\n  return fn;\n} // Public API\n// * [name].derive\n\n\nvar concat = {};\n[\"CONCAT-SHA-1\", \"CONCAT-SHA-256\", \"CONCAT-SHA-384\", \"CONCAT-SHA-512\"].forEach(function (name) {\n  concat[name] = {\n    derive: concatDeriveFn(name)\n  };\n});\nmodule.exports = concat;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/node-jose/lib/algorithms/concat.js"],"names":["CONSTANTS","require","sha","concatDeriveFn","name","replace","fn","key","props","keyLen","length","hashLen","HASHLENGTH","Promise","reject","Error","otherInfo","op","digest","N","Math","ceil","idx","okm","step","Buffer","concat","slice","T","alloc","writeUInt32BE","copy","then","result","push","forEach","derive","module","exports"],"mappings":"AAAA;;;;;AAKA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAvB;AAAA,IACIC,GAAG,GAAGD,OAAO,CAAC,UAAD,CADjB;;AAGA,SAASE,cAAT,CAAwBC,IAAxB,EAA8B;AAC5BA,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,SAAb,EAAwB,EAAxB,CAAP,CAD4B,CAG5B;AACA;;AAEA,MAAIC,EAAE,GAAG,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC5BA,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA,QAAIC,MAAM,GAAGD,KAAK,CAACE,MAAnB;AAAA,QACIC,OAAO,GAAGX,SAAS,CAACY,UAAV,CAAqBR,IAArB,CADd;;AAEA,QAAI,CAACK,MAAL,EAAa;AACX,aAAOI,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,oBAAV,CAAf,CAAP;AACD,KAP2B,CAS5B;;;AACA,QAAI,CAACP,KAAK,CAACQ,SAAX,EAAsB;AACpB,aAAOH,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,mBAAV,CAAf,CAAP;AACD;;AACD,QAAIC,SAAS,GAAGR,KAAK,CAACQ,SAAtB;AAEA,QAAIC,EAAE,GAAGf,GAAG,CAACE,IAAD,CAAH,CAAUc,MAAnB;AACA,QAAIC,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUZ,MAAM,GAAGE,OAAnB,CAAR;AAAA,QACIW,GAAG,GAAG,CADV;AAAA,QAEIC,GAAG,GAAG,EAFV;;AAGA,aAASC,IAAT,GAAgB;AACd,UAAIL,CAAC,KAAKG,GAAG,EAAb,EAAiB;AACf,eAAOG,MAAM,CAACC,MAAP,CAAcH,GAAd,EAAmBI,KAAnB,CAAyB,CAAzB,EAA4BlB,MAA5B,CAAP;AACD;;AAED,UAAImB,CAAC,GAAGH,MAAM,CAACI,KAAP,CAAa,IAAItB,GAAG,CAACG,MAAR,GAAiBM,SAAS,CAACN,MAAxC,CAAR;AACAkB,MAAAA,CAAC,CAACE,aAAF,CAAgBR,GAAhB,EAAqB,CAArB;AACAf,MAAAA,GAAG,CAACwB,IAAJ,CAASH,CAAT,EAAY,CAAZ;AACAZ,MAAAA,SAAS,CAACe,IAAV,CAAeH,CAAf,EAAkB,IAAIrB,GAAG,CAACG,MAA1B;AACA,aAAOO,EAAE,CAACW,CAAD,CAAF,CAAMI,IAAN,CAAW,UAASC,MAAT,EAAiB;AACjCV,QAAAA,GAAG,CAACW,IAAJ,CAASD,MAAT;AACA,eAAOT,IAAI,EAAX;AACD,OAHM,CAAP;AAID;;AAED,WAAOA,IAAI,EAAX;AACD,GAnCD;;AAqCA,SAAOlB,EAAP;AACD,C,CAED;AACA;;;AACA,IAAIoB,MAAM,GAAG,EAAb;AACA,CACE,cADF,EAEE,gBAFF,EAGE,gBAHF,EAIE,gBAJF,EAKES,OALF,CAKU,UAAS/B,IAAT,EAAe;AACvBsB,EAAAA,MAAM,CAACtB,IAAD,CAAN,GAAe;AACbgC,IAAAA,MAAM,EAAEjC,cAAc,CAACC,IAAD;AADT,GAAf;AAGD,CATD;AAWAiC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB","sourcesContent":["/*!\n * algorithms/concat.js - Concat Key Derivation\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar CONSTANTS = require(\"./constants.js\"),\n    sha = require(\"./sha.js\");\n\nfunction concatDeriveFn(name) {\n  name = name.replace(\"CONCAT-\", \"\");\n\n  // NOTE: no nodejs/webcrypto/fallback model, since ConcatKDF is\n  //       implemented using the SHA algorithms\n\n  var fn = function(key, props) {\n    props = props || {};\n\n    var keyLen = props.length,\n        hashLen = CONSTANTS.HASHLENGTH[name];\n    if (!keyLen) {\n      return Promise.reject(new Error(\"invalid key length\"));\n    }\n\n    // setup otherInfo\n    if (!props.otherInfo) {\n      return Promise.reject(new Error(\"invalid otherInfo\"));\n    }\n    var otherInfo = props.otherInfo;\n\n    var op = sha[name].digest;\n    var N = Math.ceil(keyLen / hashLen),\n        idx = 0,\n        okm = [];\n    function step() {\n      if (N === idx++) {\n        return Buffer.concat(okm).slice(0, keyLen);\n      }\n\n      var T = Buffer.alloc(4 + key.length + otherInfo.length);\n      T.writeUInt32BE(idx, 0);\n      key.copy(T, 4);\n      otherInfo.copy(T, 4 + key.length);\n      return op(T).then(function(result) {\n        okm.push(result);\n        return step();\n      });\n    }\n\n    return step();\n  };\n\n  return fn;\n}\n\n// Public API\n// * [name].derive\nvar concat = {};\n[\n  \"CONCAT-SHA-1\",\n  \"CONCAT-SHA-256\",\n  \"CONCAT-SHA-384\",\n  \"CONCAT-SHA-512\"\n].forEach(function(name) {\n  concat[name] = {\n    derive: concatDeriveFn(name)\n  };\n});\n\nmodule.exports = concat;\n"]},"metadata":{},"sourceType":"script"}