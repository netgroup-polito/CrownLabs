{"ast":null,"code":"'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'TimeoutError';\n  }\n\n}\n\nmodule.exports = (promise, ms, fallback) => new Promise((resolve, reject) => {\n  if (typeof ms !== 'number' || ms < 0) {\n    throw new TypeError('Expected `ms` to be a positive number');\n  }\n\n  const timer = setTimeout(() => {\n    if (typeof fallback === 'function') {\n      try {\n        resolve(fallback());\n      } catch (err) {\n        reject(err);\n      }\n\n      return;\n    }\n\n    const message = typeof fallback === 'string' ? fallback : `Promise timed out after ${ms} milliseconds`;\n    const err = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n    if (typeof promise.cancel === 'function') {\n      promise.cancel();\n    }\n\n    reject(err);\n  }, ms);\n  pFinally(promise.then(resolve, reject), () => {\n    clearTimeout(timer);\n  });\n});\n\nmodule.exports.TimeoutError = TimeoutError;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/p-timeout/index.js"],"names":["pFinally","require","TimeoutError","Error","constructor","message","name","module","exports","promise","ms","fallback","Promise","resolve","reject","TypeError","timer","setTimeout","err","cancel","then","clearTimeout"],"mappings":"AAAA;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AAEA,MAAMC,YAAN,SAA2BC,KAA3B,CAAiC;AAChCC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACpB,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,cAAZ;AACA;;AAJ+B;;AAOjCC,MAAM,CAACC,OAAP,GAAiB,CAACC,OAAD,EAAUC,EAAV,EAAcC,QAAd,KAA2B,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC5E,MAAI,OAAOJ,EAAP,KAAc,QAAd,IAA0BA,EAAE,GAAG,CAAnC,EAAsC;AACrC,UAAM,IAAIK,SAAJ,CAAc,uCAAd,CAAN;AACA;;AAED,QAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC9B,QAAI,OAAON,QAAP,KAAoB,UAAxB,EAAoC;AACnC,UAAI;AACHE,QAAAA,OAAO,CAACF,QAAQ,EAAT,CAAP;AACA,OAFD,CAEE,OAAOO,GAAP,EAAY;AACbJ,QAAAA,MAAM,CAACI,GAAD,CAAN;AACA;;AACD;AACA;;AAED,UAAMb,OAAO,GAAG,OAAOM,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA2C,2BAA0BD,EAAG,eAAxF;AACA,UAAMQ,GAAG,GAAGP,QAAQ,YAAYR,KAApB,GAA4BQ,QAA5B,GAAuC,IAAIT,YAAJ,CAAiBG,OAAjB,CAAnD;;AAEA,QAAI,OAAOI,OAAO,CAACU,MAAf,KAA0B,UAA9B,EAA0C;AACzCV,MAAAA,OAAO,CAACU,MAAR;AACA;;AAEDL,IAAAA,MAAM,CAACI,GAAD,CAAN;AACA,GAlBuB,EAkBrBR,EAlBqB,CAAxB;AAoBAV,EAAAA,QAAQ,CACPS,OAAO,CAACW,IAAR,CAAaP,OAAb,EAAsBC,MAAtB,CADO,EAEP,MAAM;AACLO,IAAAA,YAAY,CAACL,KAAD,CAAZ;AACA,GAJM,CAAR;AAMA,CA/B2C,CAA5C;;AAiCAT,MAAM,CAACC,OAAP,CAAeN,YAAf,GAA8BA,YAA9B","sourcesContent":["'use strict';\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nmodule.exports = (promise, ms, fallback) => new Promise((resolve, reject) => {\n\tif (typeof ms !== 'number' || ms < 0) {\n\t\tthrow new TypeError('Expected `ms` to be a positive number');\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${ms} milliseconds`;\n\t\tconst err = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(err);\n\t}, ms);\n\n\tpFinally(\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports.TimeoutError = TimeoutError;\n"]},"metadata":{},"sourceType":"script"}