{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      children = _ref.children,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0],\n      toggle = _useDropdownToggle[1].toggle;\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props), children);\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/react-bootstrap/esm/DropdownToggle.js"],"names":["_extends","_objectWithoutPropertiesLoose","classNames","isRequiredForA11y","React","useDropdownToggle","useMergedRefs","Button","useBootstrapPrefix","useWrappedRefWithWarning","DropdownToggle","forwardRef","_ref","ref","bsPrefix","split","className","children","childBsPrefix","_ref$as","as","Component","props","prefix","undefined","_useDropdownToggle","toggleProps","toggle","createElement","onClick","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,IAAIC,cAAc,GAAGN,KAAK,CAACO,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACzD,MAAIC,QAAQ,GAAGF,IAAI,CAACE,QAApB;AAAA,MACIC,KAAK,GAAGH,IAAI,CAACG,KADjB;AAAA,MAEIC,SAAS,GAAGJ,IAAI,CAACI,SAFrB;AAAA,MAGIC,QAAQ,GAAGL,IAAI,CAACK,QAHpB;AAAA,MAIIC,aAAa,GAAGN,IAAI,CAACM,aAJzB;AAAA,MAKIC,OAAO,GAAGP,IAAI,CAACQ,EALnB;AAAA,MAMIC,SAAS,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqBZ,MAArB,GAA8BY,OAN9C;AAAA,MAOIG,KAAK,GAAGrB,6BAA6B,CAACW,IAAD,EAAO,CAAC,UAAD,EAAa,OAAb,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,eAA/C,EAAgE,IAAhE,CAAP,CAPzC;;AASA,MAAIW,MAAM,GAAGf,kBAAkB,CAACM,QAAD,EAAW,iBAAX,CAA/B;;AAEA,MAAII,aAAa,KAAKM,SAAtB,EAAiC;AAC/BF,IAAAA,KAAK,CAACR,QAAN,GAAiBI,aAAjB;AACD;;AAED,MAAIO,kBAAkB,GAAGpB,iBAAiB,EAA1C;AAAA,MACIqB,WAAW,GAAGD,kBAAkB,CAAC,CAAD,CADpC;AAAA,MAEIE,MAAM,GAAGF,kBAAkB,CAAC,CAAD,CAAlB,CAAsBE,MAFnC;;AAIAD,EAAAA,WAAW,CAACb,GAAZ,GAAkBP,aAAa,CAACoB,WAAW,CAACb,GAAb,EAAkBJ,wBAAwB,CAACI,GAAD,EAAM,gBAAN,CAA1C,CAA/B,CApByD,CAoB0C;AACnG;;AAEA,SAAOT,KAAK,CAACwB,aAAN,CAAoBP,SAApB,EAA+BrB,QAAQ,CAAC;AAC7C6B,IAAAA,OAAO,EAAEF,MADoC;AAE7CX,IAAAA,SAAS,EAAEd,UAAU,CAACc,SAAD,EAAYO,MAAZ,EAAoBR,KAAK,IAAIQ,MAAM,GAAG,QAAtC;AAFwB,GAAD,EAG3CG,WAH2C,EAG9BJ,KAH8B,CAAvC,EAGiBL,QAHjB,CAAP;AAID,CA3BoB,CAArB;AA4BAP,cAAc,CAACoB,WAAf,GAA6B,gBAA7B;AACA,eAAepB,cAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      children = _ref.children,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0],\n      toggle = _useDropdownToggle[1].toggle;\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props), children);\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;"]},"metadata":{},"sourceType":"module"}