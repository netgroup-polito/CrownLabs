{"ast":null,"code":"// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n'use strict';\n\nvar asn = require('asn1.js');\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  });\n});\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(this.key('type').objid(), this.key('value').any());\n});\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(this.key('algorithm').objid(), this.key('parameters').optional(), this.key('curve').objid().optional());\n});\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPublicKey').bitstr());\n});\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue);\n});\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName);\n});\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  });\n});\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(this.key('notBefore').use(Time), this.key('notAfter').use(Time));\n});\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(this.key('extnID').objid(), this.key('critical').bool().def(false), this.key('extnValue').octstr());\n});\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(this.key('version').explicit(0).int().optional(), this.key('serialNumber').int(), this.key('signature').use(AlgorithmIdentifier), this.key('issuer').use(Name), this.key('validity').use(Validity), this.key('subject').use(Name), this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo), this.key('issuerUniqueID').implicit(1).bitstr().optional(), this.key('subjectUniqueID').implicit(2).bitstr().optional(), this.key('extensions').explicit(3).seqof(Extension).optional());\n});\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(this.key('tbsCertificate').use(TBSCertificate), this.key('signatureAlgorithm').use(AlgorithmIdentifier), this.key('signatureValue').bitstr());\n});\nmodule.exports = X509Certificate;","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/parse-asn1/certificate.js"],"names":["asn","require","Time","define","choice","utcTime","utctime","generalTime","gentime","AttributeTypeValue","seq","obj","key","objid","any","AlgorithmIdentifier","optional","SubjectPublicKeyInfo","use","bitstr","RelativeDistinguishedName","setof","RDNSequence","seqof","Name","rdnSequence","Validity","Extension","bool","def","octstr","TBSCertificate","explicit","int","implicit","X509Certificate","module","exports"],"mappings":"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","sourcesContent":["// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict'\n\nvar asn = require('asn1.js')\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  })\n})\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(\n    this.key('type').objid(),\n    this.key('value').any()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional(),\n    this.key('curve').objid().optional()\n  )\n})\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue)\n})\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName)\n})\n\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  })\n})\n\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(\n    this.key('notBefore').use(Time),\n    this.key('notAfter').use(Time)\n  )\n})\n\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(\n    this.key('extnID').objid(),\n    this.key('critical').bool().def(false),\n    this.key('extnValue').octstr()\n  )\n})\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(\n    this.key('version').explicit(0).int().optional(),\n    this.key('serialNumber').int(),\n    this.key('signature').use(AlgorithmIdentifier),\n    this.key('issuer').use(Name),\n    this.key('validity').use(Validity),\n    this.key('subject').use(Name),\n    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n    this.key('issuerUniqueID').implicit(1).bitstr().optional(),\n    this.key('subjectUniqueID').implicit(2).bitstr().optional(),\n    this.key('extensions').explicit(3).seqof(Extension).optional()\n  )\n})\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(\n    this.key('tbsCertificate').use(TBSCertificate),\n    this.key('signatureAlgorithm').use(AlgorithmIdentifier),\n    this.key('signatureValue').bitstr()\n  )\n})\n\nmodule.exports = X509Certificate\n"]},"metadata":{},"sourceType":"script"}