{"ast":null,"code":"import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","map":{"version":3,"sources":["/home/s41m0n/Documents/University/Turin/YearII/CrownLabs/frontend/node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js"],"names":["invariant","useCallback","useMergedRefs","useWrappedRefWithWarning","ref","componentName","process","env","NODE_ENV","warningRef","refValue","isReactComponent"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,eAAe,SAASC,wBAAT,CAAkCC,GAAlC,EAAuCC,aAAvC,EAAsD;AACnE,MAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA3B,CAAJ,EAA8C,OAAOJ,GAAP,CADqB,CACT;;AAE1D,MAAIK,UAAU,GAAGR,WAAW,CAAC,UAAUS,QAAV,EAAoB;AAC/C,MAAEA,QAAQ,IAAI,IAAZ,IAAoB,CAACA,QAAQ,CAACC,gBAAhC,IAAoDL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCR,SAAS,CAAC,KAAD,EAAQK,aAAa,GAAG,+GAAhB,GAAkI,mIAA1I,CAAjD,GAAkUL,SAAS,CAAC,KAAD,CAA/X,GAAyY,KAAK,CAA9Y;AACD,GAF2B,EAEzB,CAACK,aAAD,CAFyB,CAA5B,CAHmE,CAK9C;;AAErB,SAAOH,aAAa,CAACO,UAAD,EAAaL,GAAb,CAApB;AACD","sourcesContent":["import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}"]},"metadata":{},"sourceType":"module"}