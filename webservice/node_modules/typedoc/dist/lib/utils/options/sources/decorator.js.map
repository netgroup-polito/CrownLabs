{"version":3,"file":"decorator.js","sourceRoot":"","sources":["../../../../../src/lib/utils/options/sources/decorator.ts"],"names":[],"mappings":";;AAIA,MAAM,QAAQ,GAAwB,EAAE,CAAC;AAEzC,SAAgB,mBAAmB,CAAC,OAAgB;IAChD,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;AACtC,CAAC;AAFD,kDAEC;AAMD,SAAgB,MAAM,CAAmC,MAAyC;IAC9F,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAEtB,OAAO,UAAS,MAA2D,EAAE,GAAgB;QACzF,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE;YAC/B,GAAG;gBACC,IAAI,SAAS,IAAI,IAAI,EAAE;oBACnB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBAC7C;qBAAM;oBACH,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACzD;YACL,CAAC;YACD,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAhBD,wBAgBC","sourcesContent":["import { DeclarationOption, TypeDocOptionMap, KeyToDeclaration } from '../declaration';\nimport { Options } from '..';\nimport { Application } from '../../../application';\n\nconst declared: DeclarationOption[] = [];\n\nexport function addDecoratedOptions(options: Options) {\n    options.addDeclarations(declared);\n}\n\n/**\n * Declares the given option and binds it to the decorated property.\n * @param option\n */\nexport function Option<K extends keyof TypeDocOptionMap>(option: { name: K } & KeyToDeclaration<K>) {\n    declared.push(option);\n\n    return function(target: { application: Application } | { options: Options }, key: PropertyKey) {\n        Object.defineProperty(target, key, {\n            get(this: { application: Application } | { options: Options }) {\n                if ('options' in this) {\n                    return this.options.getValue(option.name);\n                } else {\n                    return this.application.options.getValue(option.name);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n    };\n}\n"]}