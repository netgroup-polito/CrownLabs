{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/lib/models/reflections/utils.ts"],"names":[],"mappings":";;AAAA,SAAgB,mBAAmB,CAAC,KAAa,EAAE,SAAiB;IAChE,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;QAC7B,OAAO,mBAAmB,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,CAAC;KAC5E;IACD,IAAI,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QAEvB,MAAM,iBAAiB,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,iBAAiB,KAAK,CAAC,CAAC,EAAE;YAE1B,OAAO,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACjC;QACD,IAAI,iBAAiB,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACxC,OAAO,CAAC,KAAK,CAAC,CAAC;SAClB;aAAM;YACH,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;YACzD,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;YAC1E,OAAO,MAAM,CAAC;SACjB;KACJ;SAAM;QACH,OAAO,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;KACjC;AACL,CAAC;AAtBD,kDAsBC","sourcesContent":["export function splitUnquotedString(input: string, delimiter: string): string[] {\n    if (input.startsWith(delimiter)) {\n        return splitUnquotedString(input.substring(delimiter.length), delimiter);\n    }\n    if (input.startsWith('\"')) {\n        // the part inside the quotes should not be split, the rest should\n        const closingQuoteIndex = input.indexOf('\"', 1);\n        if (closingQuoteIndex === -1) {\n            // Unmatched quotes, just split it\n            return input.split(delimiter);\n        }\n        if (closingQuoteIndex === input.length - 1) {\n            return [input];\n        } else {\n            const remainder = input.substring(closingQuoteIndex + 1);\n            const result = [input.substring(0, closingQuoteIndex + 1)];\n            result.push.apply(result, this.splitUnquotedString(remainder, delimiter));\n            return result;\n        }\n    } else {\n        return input.split(delimiter);\n    }\n}\n"]}