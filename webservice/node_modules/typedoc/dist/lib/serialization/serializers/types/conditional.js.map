{"version":3,"file":"conditional.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/conditional.ts"],"names":[],"mappings":";;;;;;;;AAAA,wDAAqD;AACrD,4CAAkD;AAClD,iDAA2D;AAG3D,IAAa,yBAAyB,GAAtC,MAAa,yBAA0B,SAAQ,oCAAwC;IACnF,QAAQ,CAAC,IAAa;QAClB,OAAO,IAAI,YAAY,wBAAe,CAAC;IAC3C,CAAC;IAED,QAAQ,CAAC,WAA4B,EAAE,GAAS;QAC5C,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAEhB,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC3D,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAC/D,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACzD,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAE3D,OAAO,GAAG,CAAC;IACf,CAAC;CACJ,CAAA;AAfY,yBAAyB;IADrC,qBAAS,CAAC,EAAE,IAAI,EAAE,6BAA6B,EAAE,CAAC;GACtC,yBAAyB,CAerC;AAfY,8DAAyB","sourcesContent":["import { Component } from '../../../utils/component';\nimport { ConditionalType } from '../../../models';\nimport { TypeSerializerComponent } from '../../components';\n\n@Component({ name: 'serializer:conditional-type' })\nexport class ConditionalTypeSerializer extends TypeSerializerComponent<ConditionalType> {\n    supports(item: unknown): boolean {\n        return item instanceof ConditionalType;\n    }\n\n    toObject(conditional: ConditionalType, obj?: any): any {\n        obj = obj || {};\n\n        obj.checkType = this.owner.toObject(conditional.checkType);\n        obj.extendsType = this.owner.toObject(conditional.extendsType);\n        obj.trueType = this.owner.toObject(conditional.trueType);\n        obj.falseType = this.owner.toObject(conditional.falseType);\n\n        return obj;\n    }\n}\n"]}