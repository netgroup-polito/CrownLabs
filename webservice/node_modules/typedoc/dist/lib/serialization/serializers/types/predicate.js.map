{"version":3,"file":"predicate.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/predicate.ts"],"names":[],"mappings":";;;;;;;;AAAA,wDAAqD;AACrD,4CAAgD;AAChD,iDAA2D;AAG3D,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,oCAAsC;IAC/E,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,sBAAa,CAAC;IACtC,CAAC;IAED,QAAQ,CAAC,IAAmB,EAAE,GAAS;QACnC,uCACO,GAAG,KACN,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,IAChF;IACN,CAAC;CACJ,CAAA;AAbY,uBAAuB;IADnC,qBAAS,CAAC,EAAE,IAAI,EAAE,2BAA2B,EAAE,CAAC;GACpC,uBAAuB,CAanC;AAbY,0DAAuB","sourcesContent":["import { Component } from '../../../utils/component';\nimport { PredicateType } from '../../../models';\nimport { TypeSerializerComponent } from '../../components';\n\n@Component({ name: 'serializer:predicate-type' })\nexport class PredicateTypeSerializer extends TypeSerializerComponent<PredicateType> {\n    supports(t: unknown) {\n        return t instanceof PredicateType;\n    }\n\n    toObject(type: PredicateType, obj?: any): any {\n        return {\n            ...obj,\n            name: type.name,\n            asserts: type.asserts,\n            targetType: type.targetType ? this.owner.toObject(type.targetType) : undefined\n        };\n    }\n}\n"]}