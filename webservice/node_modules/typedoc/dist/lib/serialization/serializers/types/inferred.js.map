{"version":3,"file":"inferred.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/inferred.ts"],"names":[],"mappings":";;;;;;;;AAAA,wDAAqD;AACrD,4CAA+C;AAC/C,iDAA2D;AAG3D,IAAa,sBAAsB,GAAnC,MAAa,sBAAuB,SAAQ,oCAAqC;IAC7E,QAAQ,CAAC,IAAa;QAClB,OAAO,IAAI,YAAY,qBAAY,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,QAAsB,EAAE,GAAS;QACtC,uCACO,GAAG,KACN,IAAI,EAAE,QAAQ,CAAC,IAAI,IACrB;IACN,CAAC;CACJ,CAAA;AAXY,sBAAsB;IADlC,qBAAS,CAAC,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC;GACnC,sBAAsB,CAWlC;AAXY,wDAAsB","sourcesContent":["import { Component } from '../../../utils/component';\nimport { InferredType } from '../../../models';\nimport { TypeSerializerComponent } from '../../components';\n\n@Component({ name: 'serializer:inferred-type' })\nexport class InferredTypeSerializer extends TypeSerializerComponent<InferredType> {\n    supports(item: unknown): boolean {\n        return item instanceof InferredType;\n    }\n\n    toObject(inferred: InferredType, obj?: any): any {\n        return {\n            ...obj,\n            name: inferred.name\n        };\n    }\n}\n"]}