#add configmaps
kubectl create configmap keycloak-tls-cert --from-file=ssl/cert.pem --namespace keycloak
kubectl create configmap keycloak-tls-key --from-file=ssl/key.pem --namespace keycloak

#remove configmaps
kubectl delete configmap keycloak-tls-cert --namespace keycloak
kubectl delete configmap keycloak-tls-key --namespace keycloak

#add keycloak-nodePort
kubectl create -f manifests/keycloak-nodeport.yml --namespace keycloak

#remove keycloak-nodePort
kubectl delete -f manifests/keycloak-nodeport.yml --namespace keycloak

#install keycloak
helm install keycloak-server --namespace keycloak keycloak/ --set keycloak.persistence.deployPostgres=true,keycloak.persistence.dbVendor=postgres,postgresql.persistence.enabled=true,postgresql.persistence.storageClass=rook-ceph-block,postgresql.persistence.size=10G

#To retrieve the initial user password run:
kubectl get secret --namespace keycloak keycloak-server-http -o jsonpath="{.data.password}" | base64 --decode; echo

#create the tls-secret
kubectl create secret tls keycloak-certificate-secret --key="tls.key" --cert="tls.crt"

#oidc-login setup for local testing purpose
oidc-login setup \
--oidc-issuer-url=https://192.168.1.11:30765/auth/realms/virtlabs \
--oidc-client-id=k8s \
--oidc-client-secret=d6d14985-b4e8-4cda-a8fb-2faeb0b16abe \
--insecure-skip-tls-verify


