---
# tasks file for ubuntu-pre

- name: Ensure that the unattended-upgrades service is not running
  systemd:
    name: unattended-upgrades
    state: stopped
    enabled: no
    masked: yes
  register: result
  failed_when: result is failed and not 'Could not find the requested service' in result.msg

- name: Wait for any possibly running unattended-upgrade to finish
  shell: while sudo fuser /var/lib/dpkg/{{ item }} >/dev/null 2>&1; do sleep 1; done;
  with_items:
    - lock
    - lock-frontend

- name: Update the apt cache
  apt:
    update_cache: yes

- name: Remove unattended-upgrades
  apt:
    name: "unattended-upgrades"
    state: absent
    autoremove: yes
    purge: yes

- name: Remove many unnecessary packages
  apt:
    name: "{{ unnecessary_packages }}"
    state: absent
    autoremove: yes
    purge: yes

- name: Upgrade all packages
  apt:
    upgrade: "yes"

# tasks for installing desktop environment
- name: Prevent installation of unnecessary packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop: "{{ unnecessary_packages }}"
  ignore_errors: true
  when: install_desktop_environment is defined and install_desktop_environment == "true"

- name: Install xfce4-session
  apt:
    name: xfce4-session
    state: present
    install_recommends: no
  when: install_desktop_environment is defined and install_desktop_environment == "true"

- name: Add necessary packages
  apt:
    name: "{{ necessary_packages }}"
    state: present
  when: install_desktop_environment is defined and install_desktop_environment == "true"

# Not the best ansible way to solve this problem
# but it seems to achieve the intended purpose
- name: Get old kernel packages
  shell: |
    dpkg --list | \
      egrep -i "linux-image"          | \
      awk '/ii/{ print $2 }'          | \
      sed 's/linux-image-//'          | \
      egrep '^[0-9]+\.[0-9]+\.[0-9]+' | \
      sort --version-sort             | \
      head -n -1                      | \
      sed 's/^/linux-*-/'
  register: kernel_packages

- name: Remove old kernel packages
  apt:
    name: "{{ kernel_packages.stdout_lines }}"
    state: absent
    autoremove: yes
    purge: yes
  when: kernel_packages.stdout_lines

# If the previous step removed any old kernel packages to save space,
# it is better to reboot now and avoid running an uninstalled kernel:
# problems may arise since some modules are no longer available.
- name: Reboot the system if required (e.g. kernel upgrade)
  reboot:
  when: kernel_packages.stdout_lines

- name: Make sure the Desktop directory does exist (if a DE is present)
  file:
    path: /home/{{ ansible_user }}/Desktop
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  when: desktop_environment_detected

- name: Remove useless folders from /home
  file: path=/home/{{ ansible_user }}/{{ item }} state=absent recurse=no
  with_items:
  - "Music"
  - "Pictures"
  - "Public"
  - "Templates"
  - "Videos"

- name: Allow users to become sudo without password
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: "^%sudo"
    line: "%sudo ALL=(ALL) NOPASSWD:ALL"
    validate: "visudo -cf %s"
