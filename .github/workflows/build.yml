name: Build and publish the docker images
on:
  push:
    branches:
      - master
    tags:
      - "v*"
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  repository_dispatch:
    types:
      - deploy-staging-command

jobs:
  configure:
    name: Preliminary configuration
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.configure.outputs.ref }}
      repo-suffix: ${{ steps.configure.outputs.repo-suffix }}
      repo-push: ${{ steps.configure.outputs.repo-push }}
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Get version
        id: version
        run: echo "::set-output name=version::${GITHUB_REF/refs\/tags\//}"
        if: |
          github.event_name == 'push' &&
          github.event.repository.full_name == github.repository &&
          startsWith(github.ref, 'refs/tags/v')

      - name: Configure
        id: configure
        run: |
          # The ref of the commit to checkout (do not use the merge commit if pull request)
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "::set-output name=ref::${{ github.event.pull_request.head.sha }}"
          elif [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            echo "::set-output name=ref::${{ github.event.client_payload.pull_request.head.sha }}"
          elif [[ "${{ steps.version.outputs.version }}" != "" ]]; then
            echo "::set-output name=ref::${{ steps.version.outputs.version }}"
          else
            echo "::set-output name=ref::${{ github.sha }}"
          fi

          # The suffix to append to the repository name if not triggered by a push to master
          [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/master" ]] && \
            echo "::set-output name=repo-suffix::" || \
            echo "::set-output name=repo-suffix::-dev"

          # Do not push the resulting images to DockerHub if triggered by a pull request
          [[ "${{ github.event_name }}" == "pull_request" ]] && \
            echo "::set-output name=repo-push::false" || \
            echo "::set-output name=repo-push::true"


  build:
    name: Build
    runs-on: ubuntu-latest
    needs: configure

    strategy:
      fail-fast: false
      matrix:
        component:
          # Operators
          - laboratory-operator
          - crownlabs-image-list
          - delete-stale-instances
          - tenant-operator
          - bastion-operator

          # Frontend
          - frontend

          # SSH bastion
          - ssh-bastion

          # Laboratory environments
          - novnc
          - tigervnc
          - websockify
          - pycharm

        include:
          # Operators
          - component: laboratory-operator
            context: ./operators
            dockerfile: ./operators/build/laboratory-operator/Dockerfile
          - component: crownlabs-image-list
            context: ./operators
            dockerfile: ./operators/build/crownlabs-image-list/Dockerfile
          - component: delete-stale-instances
            context: ./operators
            dockerfile: ./operators/build/delete-stale-instances/Dockerfile
          - component: tenant-operator
            context: ./operators
            dockerfile: ./operators/build/tenant-operator/Dockerfile
          - component: bastion-operator
            context: ./operators
            dockerfile: ./operators/build/bastion-operator/Dockerfile

          # Frontend
          - component: frontend
            context: ./webservice

          # Laboratory environments
          - component: novnc
            context: ./provisioning/containers/gui-common/novnc
          - component: tigervnc
            context: ./provisioning/containers/gui-common/tigervnc
          - component: websockify
            context: ./provisioning/containers/gui-common/websockify
          - component: pycharm
            context: ./provisioning/containers/pycharm

          # SSH bastion
          - component: ssh-bastion
            context: ./operators/build/ssh-bastion

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.configure.outputs.ref }}
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: needs.configure.outputs.repo-push == 'true'

      - name: Configure the build-push-action parameters
        id: parameters
        run: |
          echo "::set-output name=repo-name::${{ matrix.component }}${{ needs.configure.outputs.repo-suffix }}"

          [[ -n "${{ matrix.dockerfile }}" ]] && \
            echo "::set-output name=dockerfile::${{ matrix.dockerfile }}" || \
            echo "::set-output name=dockerfile::${{ matrix.context }}/Dockerfile"

      - name: Build and Push the ${{ matrix.component }} image
        uses: docker/build-push-action@v2
        with:
          tags: |
            crownlabs/${{ steps.parameters.outputs.repo-name }}:latest
            crownlabs/${{ steps.parameters.outputs.repo-name }}:${{ needs.configure.outputs.ref }}
          push: ${{ needs.configure.outputs.repo-push }}
          file: ${{ steps.parameters.outputs.dockerfile }}
          context: ${{ matrix.context }}

  trigger-events-master:
    name: Trigger events upon successful push to master
    runs-on: ubuntu-latest
    needs:
      - configure
      - build
    if: |
      github.event_name == 'push' &&
      github.event.repository.full_name == github.repository &&
      github.ref == 'refs/heads/master'

    steps:
      - name: Send the Slack notification
        uses: 8398a7/action-slack@v3.8.0
        with:
          status: ${{ job.status }}
          author_name: CrownLabs CI
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

      - name: Notify Event to CrownOps
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.CI_TOKEN }}
          repository: netgroup-polito/CrownOps
          event-type: preprod-event
          client-payload: '{"tag": "${{ needs.configure.outputs.ref }}"}'

  trigger-events-deploy-staging:
    name: Trigger events upon /deploy-staging comment
    runs-on: ubuntu-latest
    needs:
      - configure
      - build
    if: github.event_name == 'repository_dispatch'

    steps:
      - name: Notify Event to CrownOps
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.CI_TOKEN }}
          repository: netgroup-polito/CrownOps
          event-type: deploy-staging-event
          client-payload: |
            {
              "repository": "${{ github.repository }}",
              "pr-number": "${{ github.event.client_payload.github.payload.issue.number }}",
              "tag": "${{ needs.configure.outputs.ref }}"
            }

      - name: Report status as reaction
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.CI_TOKEN }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reactions: "hooray"

  release:
    name: Create a new CrownLabs release
    runs-on: ubuntu-latest
    needs:
      - configure
      - build
    if: needs.configure.outputs.version != ''

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.configure.outputs.ref }}
          # The changelog generation requires the entire history
          fetch-depth: 0
          persist-credentials: false

      - name: Get the latest CrownLabs release
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        id: last-release
        with:
          repository: ${{ github.repository }}

      - name: Generate the CHANGELOG
        uses: RiskLedger/generate-changelog@v1.2
        id: changelog
        with:
          from: ${{ steps.last-release.outputs.release }}
          to: ${{ needs.configure.outputs.version }}
        env:
          GITHUB_AUTH: ${{ secrets.CI_TOKEN }}

      - name: Save the CHANGELOG as a file
        run: |
          echo "${{ steps.changelog.outputs.changelog }}" > ./CHANGELOG.md
          sed -i "1s/.*/## Changes since ${{ steps.last-release.outputs.release }}/" ./CHANGELOG.md

      - name: Create the release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.configure.outputs.version }}
          release_name: Release ${{ needs.configure.outputs.version }}
          body_path: ./CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}

      - name: Notify Event to CrownOps
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.CI_TOKEN }}
          repository: netgroup-polito/CrownOps
          event-type: release-event
          client-payload: '{"version": "${{ needs.configure.outputs.version }}"}'
