# Default values for bastion-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

configurations:
  sshTrackerInterface: any
  sshTrackerPort: 22
  sshTrackerSnaplen: 1600
  sshTrackerMetricsAddr: ":8082"

image:
  repositoryBastion: crownlabs/ssh-bastion
  repositorySidecar: crownlabs/bastion-operator
  repositoryWebSSH: crownlabs/webssh
  repositoryTrackerSidecar: crownlabs/bastion-ssh-tracker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart version.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

deploymentAnnotations:
  reloader.stakater.com/auto: "true"
podAnnotations: {}
serviceAnnotations: {}

securityContexts:
  bastion:
    capabilities:
      drop:
      - ALL
    allowPrivilegeEscalation: false
    runAsUser: 1000
    runAsGroup: 1000
    privileged: false
  operatorSidecar:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 100000
    runAsGroup: 100000
    privileged: false
  trackerSidecar:
    capabilities:
      drop:
      - ALL
      add:
      - NET_RAW
      - NET_ADMIN
    readOnlyRootFilesystem: true
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0
    privileged: false
  hookCreateSecret:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 65534
    runAsGroup: 65534
    privileged: false


resources:
  bastion:
    limits:
      memory: 250Mi
      cpu: 1000m
    requests:
      memory: 100Mi
      cpu: 100m
  operatorSidecar:
    limits:
      memory: 250Mi
      cpu: 1000m
    requests:
      memory: 100Mi
      cpu: 100m
  trackerSidecar:
    limits:
      memory: 250Mi
      cpu: 1000m
    requests:
      memory: 100Mi
      cpu: 100m
  hookCreateSecret:
    limits:
      memory: 100Mi
      cpu: 1000m
    requests:
      memory: 100Mi
      cpu: 10m
  webssh:
    limits:
      memory: 250Mi
      cpu: 1000m
    requests:
      memory: 100Mi
      cpu: 100m

service:
  type: LoadBalancer
  port: 22
  externalTrafficPolicy: Cluster

sshKeysSecret:
  name: crownlabs-bastion-operator-ssh-keys
  keygenImage: kroniak/ssh-client:3.9
  kubectlImage: alpine/kubectl:1.33.4

rbacResourcesName: crownlabs-bastion-operator

webssh:
  ingress:
    enabled: true
    annotations:
      #cert-manager.io/cluster-issuer: letsencrypt-production
      nginx.ingress.kubernetes.io/custom-http-errors: "418"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      nginx.ingress.kubernetes.io/websocket-services: "{{ include \"bastion-operator.fullname\" . }}-webssh"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    hostname: crownlabs.example.com
    path: /webssh
    pathType: Prefix
    secret: frontend-app-certificate # reuse the frontend secret
  service:
    type: ClusterIP
    port: 8085
    targetPort: http
  masterKey:
    secretName: crownlabs-bastion-operator-web-master-key
    type: ed25519
    name: webssh-master
    comment: webssh-master-key
  config:
    user: crownlabs
    timeoutDuration: 30 # minutes
    maxConCount: 1000
    vmPort: 22
    webSocketPort: 8085
