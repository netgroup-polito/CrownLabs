{{- if not (lookup "v1" "Secret" .Release.Namespace .Values.sshKeysSecret.name) }}
{{- $name := include "bastion-operator.fullname" . -}}
{{- $fullname := printf "%s-create-secret-hook" $name -}}

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $fullname }}
  labels:
    {{- include "bastion-operator.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $fullname }}
  labels:
    {{- include "bastion-operator.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $fullname }}
  labels:
    {{- include "bastion-operator.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $fullname }}
subjects:
  - kind: ServiceAccount
    name: {{ $fullname }}
    namespace: {{ .Release.Namespace }}

---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $fullname }}
  labels:
    {{- include "bastion-operator.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ $fullname }}
      labels:
        {{- include "bastion-operator.labels" . | nindent 8 }}
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ $fullname }}
      initContainers:
      - name: ssh-keygen
        image: {{ .Values.sshKeysSecret.keygenImage }}
        command:
          - "/bin/bash"
        args:
          - -c
          - |
            ssh-keygen -f /tmp/ssh-keys/ssh_host_key_ecdsa -N "" -t ecdsa -C "" && \
            ssh-keygen -f /tmp/ssh-keys/ssh_host_key_ed25519 -N "" -t ed25519 -C "" && \
            ssh-keygen -f /tmp/ssh-keys/ssh_host_key_rsa -N "" -t rsa -C ""
        securityContext:
          {{- toYaml .Values.securityContexts.hookCreateSecret | nindent 12 }}
        resources:
          {{- toYaml .Values.resources.hookCreateSecret | nindent 12 }}
        volumeMounts:
          - name: ssh-keys
            mountPath: /tmp/ssh-keys
      containers:
      - name: kubectl
        image: {{ .Values.sshKeysSecret.kubectlImage }}
        command:
          - kubectl
        args:
          - create
          - secret
          - generic
          - {{ .Values.sshKeysSecret.name }}
          - --namespace={{ .Release.Namespace }}
          - --from-file=/tmp/ssh-keys/ssh_host_key_ecdsa
          - --from-file=/tmp/ssh-keys/ssh_host_key_ed25519
          - --from-file=/tmp/ssh-keys/ssh_host_key_rsa
        securityContext:
          {{- toYaml .Values.securityContexts.hookCreateSecret | nindent 12 }}
        resources:
          {{- toYaml .Values.resources.hookCreateSecret | nindent 12 }}
        volumeMounts:
          - name: ssh-keys
            mountPath: /tmp/ssh-keys
      volumes:
        - name: ssh-keys
          emptyDir: {}
{{- end }}
