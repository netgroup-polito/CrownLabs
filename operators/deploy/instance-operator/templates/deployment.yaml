apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "instance-operator.fullname" . }}
  labels:
    {{- include "instance-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: operator
{{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "instance-operator.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: operator
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "instance-operator.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: operator
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "instance-operator.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ include "instance-operator.version" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--namespace-whitelist={{ .Values.configurations.generic.whitelistLabels }}"
            - "--website-base-url={{ .Values.configurations.generic.websiteBaseUrl }}"
            - "--instances-auth-url={{ .Values.configurations.generic.instancesAuthUrl }}"
            - "--container-env-sidecars-tag={{ include "instance-operator.containerEnvironmentSidecarsTag" . }}"
            - "--container-env-x-vnc-img={{ .Values.configurations.containerEnvironmentOptions.xVncImage }}"
            - "--container-env-websockify-img={{ .Values.configurations.containerEnvironmentOptions.websockifyImage }}"
            - "--container-env-content-downloader-img={{ .Values.configurations.containerEnvironmentOptions.contentDownloaderImage }}"
            - "--container-env-content-uploader-img={{ .Values.configurations.containerEnvironmentOptions.contentUploaderImage }}"
            - "--container-env-instmetrics-server-endpoint={{ .Values.configurations.containerEnvironmentOptions.instmetricsServerEndpoint }}"
            - "--vm-registry={{ .Values.configurations.privateContainerRegistry.url }}"
            - "--vm-registry-secret={{ .Values.configurations.privateContainerRegistry.secretName }}"
            - "--container-export-img={{ .Values.configurations.containerVmSnapshots.exportImage }}:{{ include "instance-operator.containerExportImageTag" . }}"
            - "--container-kaniko-img={{ .Values.configurations.containerVmSnapshots.kanikoImage }}"
            - "--max-concurrent-reconciles={{ .Values.configurations.maxConcurrentReconciles }}"
            - "--webbastion-master-key-path=/webbastion-key/{{ .Values.webssh.masterKey.keyName }}.pub"
            - '--public-exposure-ip-pool={{ .Values.configurations.publicExposure.ipPool | join "," }}'
            - '--public-exposure-common-annotations={{ .Values.configurations.publicExposure.commonAnnotations | join "," }}'
            - '--public-exposure-loadbalancer-ips-key={{ .Values.configurations.publicExposure.loadBalancerIPsKey }}'
          ports:
            - name: op-metrics
              containerPort: 8080
              protocol: TCP
            - name: op-probes
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: op-probes
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: op-probes
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: webbastion-master-key
              mountPath: /webbastion-key
              readOnly: true
      volumes:
        - name: webbastion-master-key
          secret:
            secretName: {{ .Values.webssh.masterKey.secretName }}
            defaultMode: 0444
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "instance-operator.selectorLabels" . | nindent 18 }}
                  app.kubernetes.io/component: operator
              topologyKey: kubernetes.io/hostname
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "instance-operator.fullname" . }}-automation
  labels:
    {{- include "instance-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: automation
{{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCountAutomation }}
  selector:
    matchLabels:
      {{- include "instance-operator.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: automation
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "instance-operator.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: automation
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "instance-operator.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}-automation
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repositoryAutomation }}:{{ include "instance-operator.version" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --enable-instance-termination={{ .Values.configurations.automation.enableInstanceTermination }}
            - --enable-instance-inactive-termination={{ .Values.configurations.automation.enableInstanceInactiveTermination }}
            - --enable-instance-submission={{ .Values.configurations.automation.enableInstanceSubmission }}
            - --enable-instance-expiration={{ .Values.configurations.automation.enableInstanceExpiration }}
            - --namespace-whitelist={{ .Values.configurations.generic.whitelistLabels }}
            - --container-env-sidecars-tag={{ include "instance-operator.containerEnvironmentSidecarsTag" . }}
            - --container-env-content-uploader-img={{ .Values.configurations.containerEnvironmentOptions.contentUploaderImage }}
            - --monitoring-prometheus-url={{ .Values.configurations.monitoring.prometheusURL }}
            - --monitoring-nginx-availability={{ .Values.configurations.monitoring.queryNginxAvailable }}
            - --monitoring-bastion-ssh-availability={{ .Values.configurations.monitoring.queryBastionSSHAvailable }}
            - --monitoring-web-ssh-availability={{ .Values.configurations.monitoring.queryWebSSHAvailable }}
            - --monitoring-nginx-data={{ .Values.configurations.monitoring.queryNginxData  }}
            - --monitoring-bastion-ssh-data={{ .Values.configurations.monitoring.queryBastionSSHData}}
            - --monitoring-web-ssh-data={{ .Values.configurations.monitoring.queryWebSSHData}}
            - --prometheus-query-step={{ .Values.configurations.monitoring.queryStep }}
            - --max-concurrent-reconciles-termination={{ .Values.configurations.automation.maxConcurrentTerminationReconciles }}
            - --max-concurrent-reconciles-inactive-termination={{ .Values.configurations.automation.maxConcurrentInactiveTerminationReconciles }}
            - --max-concurrent-reconciles-submission={{ .Values.configurations.automation.maxConcurrentSubmissionReconciles }}
            - --max-concurrent-reconciles-expiration={{ .Values.configurations.automation.maxConcurrentExpirationReconciles }}
            - --instance-termination-status-check-timeout={{ .Values.configurations.automation.terminationStatusCheckTimeout }}
            - --instance-termination-status-check-interval={{ .Values.configurations.automation.terminationStatusCheckInterval }}
            - --instance-inactive-termination-status-check-timeout={{ .Values.configurations.automation.inactiveTerminationStatusCheckTimeout }}
            - --instance-inactive-termination-max-number-of-alerts={{.Values.configurations.automation.inactiveTerminationMaxNumberOfAlerts}}
            - --instance-inactive-termination-notification-interval={{ .Values.configurations.automation.inactiveTerminationNotificationInterval }}
            - --expiration-notification-interval={{ .Values.configurations.automation.expirationNotificationInterval }}
            - --mail-config-dir={{ .Values.configurations.mailConfigDir }}
            - --mail-template-dir={{ .Values.configurations.mailTemplateDir }}
            - --enable-inactivity-notifications={{ .Values.configurations.automation.enableInactivityNotifications }}
            - --enable-expiration-notifications={{ .Values.configurations.automation.enableExpirationNotifications }}
          ports:
            - name: auto-metrics
              containerPort: 8080
              protocol: TCP
            - name: auto-probes
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: auto-probes
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: auto-probes
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: mail-templates
              mountPath: {{ .Values.configurations.mailTemplateDir }}
            - name: mail-configs
              mountPath: {{ .Values.configurations.mailConfigDir }}

      volumes:
        - name: mail-templates
          configMap:
            name: crownmail-templates
        - name: mail-configs
          secret:
            secretName: crownmail-configs
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "instance-operator.selectorLabels" . | nindent 18 }}
                  app.kubernetes.io/component: automation
              topologyKey: kubernetes.io/hostname
