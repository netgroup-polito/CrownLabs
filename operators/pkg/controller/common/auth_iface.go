// Code generated by ifacemaker; DO NOT EDIT.

package common

import (
	"context"

	"github.com/Nerzal/gocloak/v13"
	"github.com/go-logr/logr"
)

type KeycloakActorIface interface {
	// IsInitialized checks if the KeycloakActor has been initialized.
	IsInitialized() bool
	// Reset clears the KeycloakActor's token and cached data.
	Reset(log logr.Logger)
	// GetAccessToken returns the access token of the actor.
	// It tries to refresh the token if it is nil or expired.
	GetAccessToken(ctx context.Context) string
	// GetUser returns the user associated with the given username.
	GetUser(ctx context.Context, username string) (*gocloak.User, error)
	// CreateUser creates a user in Keycloak.
	CreateUser(ctx context.Context, username string, email string, firstName string, lastName string) (string, error)
	// DeleteUser removes a user from Keycloak.
	DeleteUser(ctx context.Context, userID string) error
	// GetRole gets a role from Keycloak.
	GetRole(ctx context.Context, roleName string) (*gocloak.Role, error)
	// CreateRole creates a new role in Keycloak.
	CreateRole(ctx context.Context, roleName string, roleDescription string) (string, error)
	// DeleteRole removes a role from Keycloak.
	DeleteRole(ctx context.Context, roleName string) error
	// GetUserRoles gets the roles assigned to a user in Keycloak.
	GetUserRoles(ctx context.Context, userID string) ([]*gocloak.Role, error)
	// AddUserToRoles adds a user to the specified roles in Keycloak.
	AddUserToRoles(ctx context.Context, userID string, roles []*gocloak.Role) error
	// RemoveUserFromRoles removes a user from the specified roles in Keycloak.
	RemoveUserFromRoles(ctx context.Context, userID string, roles []*gocloak.Role) error
}
